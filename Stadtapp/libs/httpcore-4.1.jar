


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta name="robots" content="index,follow" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="0.11.1 (2b48ae40ea1b)" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<link rel="icon" href="/source/default/img/icon.png" type="image/png" />
<link rel="stylesheet" type="text/css" media="all"
    title="Default" href="/source/default/style.css" />
<link rel="alternate stylesheet" type="text/css" media="all"
    title="Paper White" href="/source/default/print.css" />
<link rel="stylesheet" type="text/css" href="/source/default/print.css" media="print" />
<link rel="stylesheet" type="text/css" href="/source/default/jquery.tooltip.css" />

<link rel="search" href="/source/opensearch"
    type="application/opensearchdescription+xml"
    title="OpenGrok Search for current project(s)" />
<script type="text/javascript" src="/source/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="/source/jquery.tooltip-1.3.pack.js"></script>

<script type="text/javascript" src="/source/utils.js"></script>
<title>Cross Reference: /android/4.4/prebuilts/tools/common/http-client/httpcore-4.1.jar</title>
</head>
<body>
<script type="text/javascript">/* <![CDATA[ */
    document.hash = 'null';document.rev = '';document.link = '/source/xref/android/4.4/prebuilts/tools/common/http-client/httpcore-4.1.jar';document.annotate = false;
    document.domReady.push(function() {domReadyMast();});
    document.pageReady.push(function() { pageReadyMast();});
/* ]]> */</script>
<div id="page">
    <div id="whole_header">
        <form action="/source/search">
<div id="header">
<a href="/source/" class="cslogo">
    <span style="color: #5a2c00; letter-spacing: -2px;">{</span><span 
        style="color: #0f3368; vertical-align: middle;">Code</span>
    <span style="color: #222222; vertical-align: middle;">Search</span>
</a>
<span id="partner">
    <a href="http://www.metager.de"><span id="partner_metager"></span></a>
</span>



    <div id="pagetitle"><span id="filename"
                    >Cross Reference: httpcore-4.1.jar</span></div>
</div>
<div id="Masthead">
    <tt><a href="/source/xref/">xref</a>: /<a href="/source/xref/android/">android</a>/<a href="/source/xref/android/4.4/">4.4</a>/<a href="/source/xref/android/4.4/prebuilts/">prebuilts</a>/<a href="/source/xref/android/4.4/prebuilts/tools/">tools</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/">common</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/">http-client</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/httpcore-4.1.jar">httpcore-4.1.jar</a></tt>
</div>
<div id="bar">
    <ul>
        <li><a href="/source/"><span id="home"></span>Home</a></li><li><a href="/source/history/android/4.4/prebuilts/tools/common/http-client/httpcore-4.1.jar"><span id="history"></span>History</a></li><li><a href="#" onclick="javascript:get_annotations(); return false;"
            ><span class="annotate"></span>Annotate</a></li><li><a href="#" onclick="javascript:lntoggle();return false;"
            title="Show or hide line numbers (might be slower if file has more than 10 000 lines)."><span id="line"></span>Line#</a></li><li><a
            href="#" onclick="javascript:lsttoggle();return false;"
            title="Show or hide symbol list."><span id="defbox"></span>Navigate</a></li><li><a href="/source/raw/android/4.4/prebuilts/tools/common/http-client/httpcore-4.1.jar"><span id="download"></span>Download</a></li><li><input type="text" id="search" name="q" class="q" />
            <input type="submit" value="Search" class="submit" /></li><li><input type="checkbox" name="path" value="/android/4.4/prebuilts/tools/common/http-client/" /> only in <b>httpcore-4.1.jar</b></li>
        
    </ul>
    <input type="hidden" name="project" value="android" />
</div>
        </form>
    </div>
<div id="content">
<script type="text/javascript">/* <![CDATA[ */
document.pageReady.push(function() { pageReadyList();});
/* ]]> */</script>

<div id="src">
    <pre><br/><b>META-INF/</b><br/><b>META-INF/MANIFEST.MF</b><br/><b>org/</b><br/><b>org/apache/</b><br/><b>org/apache/http/</b><br/><b>org/apache/http/message/</b><br/><b>org/apache/http/impl/</b><br/><b>org/apache/http/impl/entity/</b><br/><b>org/apache/http/impl/io/</b><br/><b>org/apache/http/entity/</b><br/><b>org/apache/http/util/</b><br/><b>org/apache/http/protocol/</b><br/><b>org/apache/http/io/</b><br/><b>org/apache/http/params/</b><br/><b>org/apache/http/ProtocolException.class</b><pre><a href="/source/s?path=ProtocolException.java">ProtocolException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.ProtocolException" href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> extends <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/ReasonPhraseCatalog.class</b><pre><a href="/source/s?path=ReasonPhraseCatalog.java">ReasonPhraseCatalog.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.ReasonPhraseCatalog" href="/source/s?defs=org.apache.http.ReasonPhraseCatalog">org.apache.http.ReasonPhraseCatalog</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getReason" href="/source/s?defs=getReason">getReason</a> (int, java.util.Locale) 
}
</pre><br/><b>org/apache/http/HttpHeaders.class</b><pre><a href="/source/s?path=HttpHeaders.java">HttpHeaders.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public final <a class="d" name="org.apache.http.HttpHeaders" href="/source/s?defs=org.apache.http.HttpHeaders">org.apache.http.HttpHeaders</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="ACCEPT" href="/source/s?defs=ACCEPT">ACCEPT</a>
	public static final String <a class="d" name="ACCEPT_CHARSET" href="/source/s?defs=ACCEPT_CHARSET">ACCEPT_CHARSET</a>
	public static final String <a class="d" name="ACCEPT_ENCODING" href="/source/s?defs=ACCEPT_ENCODING">ACCEPT_ENCODING</a>
	public static final String <a class="d" name="ACCEPT_LANGUAGE" href="/source/s?defs=ACCEPT_LANGUAGE">ACCEPT_LANGUAGE</a>
	public static final String <a class="d" name="ACCEPT_RANGES" href="/source/s?defs=ACCEPT_RANGES">ACCEPT_RANGES</a>
	public static final String <a class="d" name="AGE" href="/source/s?defs=AGE">AGE</a>
	public static final String <a class="d" name="ALLOW" href="/source/s?defs=ALLOW">ALLOW</a>
	public static final String <a class="d" name="AUTHORIZATION" href="/source/s?defs=AUTHORIZATION">AUTHORIZATION</a>
	public static final String <a class="d" name="CACHE_CONTROL" href="/source/s?defs=CACHE_CONTROL">CACHE_CONTROL</a>
	public static final String <a class="d" name="CONNECTION" href="/source/s?defs=CONNECTION">CONNECTION</a>
	public static final String <a class="d" name="CONTENT_ENCODING" href="/source/s?defs=CONTENT_ENCODING">CONTENT_ENCODING</a>
	public static final String <a class="d" name="CONTENT_LANGUAGE" href="/source/s?defs=CONTENT_LANGUAGE">CONTENT_LANGUAGE</a>
	public static final String <a class="d" name="CONTENT_LENGTH" href="/source/s?defs=CONTENT_LENGTH">CONTENT_LENGTH</a>
	public static final String <a class="d" name="CONTENT_LOCATION" href="/source/s?defs=CONTENT_LOCATION">CONTENT_LOCATION</a>
	public static final String <a class="d" name="CONTENT_MD5" href="/source/s?defs=CONTENT_MD5">CONTENT_MD5</a>
	public static final String <a class="d" name="CONTENT_RANGE" href="/source/s?defs=CONTENT_RANGE">CONTENT_RANGE</a>
	public static final String <a class="d" name="CONTENT_TYPE" href="/source/s?defs=CONTENT_TYPE">CONTENT_TYPE</a>
	public static final String <a class="d" name="DATE" href="/source/s?defs=DATE">DATE</a>
	public static final String <a class="d" name="DAV" href="/source/s?defs=DAV">DAV</a>
	public static final String <a class="d" name="DEPTH" href="/source/s?defs=DEPTH">DEPTH</a>
	public static final String <a class="d" name="DESTINATION" href="/source/s?defs=DESTINATION">DESTINATION</a>
	public static final String <a class="d" name="ETAG" href="/source/s?defs=ETAG">ETAG</a>
	public static final String <a class="d" name="EXPECT" href="/source/s?defs=EXPECT">EXPECT</a>
	public static final String <a class="d" name="EXPIRES" href="/source/s?defs=EXPIRES">EXPIRES</a>
	public static final String <a class="d" name="FROM" href="/source/s?defs=FROM">FROM</a>
	public static final String <a class="d" name="HOST" href="/source/s?defs=HOST">HOST</a>
	public static final String <a class="d" name="IF" href="/source/s?defs=IF">IF</a>
	public static final String <a class="d" name="IF_MATCH" href="/source/s?defs=IF_MATCH">IF_MATCH</a>
	public static final String <a class="d" name="IF_MODIFIED_SINCE" href="/source/s?defs=IF_MODIFIED_SINCE">IF_MODIFIED_SINCE</a>
	public static final String <a class="d" name="IF_NONE_MATCH" href="/source/s?defs=IF_NONE_MATCH">IF_NONE_MATCH</a>
	public static final String <a class="d" name="IF_RANGE" href="/source/s?defs=IF_RANGE">IF_RANGE</a>
	public static final String <a class="d" name="IF_UNMODIFIED_SINCE" href="/source/s?defs=IF_UNMODIFIED_SINCE">IF_UNMODIFIED_SINCE</a>
	public static final String <a class="d" name="LAST_MODIFIED" href="/source/s?defs=LAST_MODIFIED">LAST_MODIFIED</a>
	public static final String <a class="d" name="LOCATION" href="/source/s?defs=LOCATION">LOCATION</a>
	public static final String <a class="d" name="LOCK_TOKEN" href="/source/s?defs=LOCK_TOKEN">LOCK_TOKEN</a>
	public static final String <a class="d" name="MAX_FORWARDS" href="/source/s?defs=MAX_FORWARDS">MAX_FORWARDS</a>
	public static final String <a class="d" name="OVERWRITE" href="/source/s?defs=OVERWRITE">OVERWRITE</a>
	public static final String <a class="d" name="PRAGMA" href="/source/s?defs=PRAGMA">PRAGMA</a>
	public static final String <a class="d" name="PROXY_AUTHENTICATE" href="/source/s?defs=PROXY_AUTHENTICATE">PROXY_AUTHENTICATE</a>
	public static final String <a class="d" name="PROXY_AUTHORIZATION" href="/source/s?defs=PROXY_AUTHORIZATION">PROXY_AUTHORIZATION</a>
	public static final String <a class="d" name="RANGE" href="/source/s?defs=RANGE">RANGE</a>
	public static final String <a class="d" name="REFERER" href="/source/s?defs=REFERER">REFERER</a>
	public static final String <a class="d" name="RETRY_AFTER" href="/source/s?defs=RETRY_AFTER">RETRY_AFTER</a>
	public static final String <a class="d" name="SERVER" href="/source/s?defs=SERVER">SERVER</a>
	public static final String <a class="d" name="STATUS_URI" href="/source/s?defs=STATUS_URI">STATUS_URI</a>
	public static final String <a class="d" name="TE" href="/source/s?defs=TE">TE</a>
	public static final String <a class="d" name="TIMEOUT" href="/source/s?defs=TIMEOUT">TIMEOUT</a>
	public static final String <a class="d" name="TRAILER" href="/source/s?defs=TRAILER">TRAILER</a>
	public static final String <a class="d" name="TRANSFER_ENCODING" href="/source/s?defs=TRANSFER_ENCODING">TRANSFER_ENCODING</a>
	public static final String <a class="d" name="UPGRADE" href="/source/s?defs=UPGRADE">UPGRADE</a>
	public static final String <a class="d" name="USER_AGENT" href="/source/s?defs=USER_AGENT">USER_AGENT</a>
	public static final String <a class="d" name="VARY" href="/source/s?defs=VARY">VARY</a>
	public static final String <a class="d" name="VIA" href="/source/s?defs=VIA">VIA</a>
	public static final String <a class="d" name="WARNING" href="/source/s?defs=WARNING">WARNING</a>
	public static final String <a class="d" name="WWW_AUTHENTICATE" href="/source/s?defs=WWW_AUTHENTICATE">WWW_AUTHENTICATE</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/StatusLine.class</b><pre><a href="/source/s?path=StatusLine.java">StatusLine.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.StatusLine" href="/source/s?defs=org.apache.http.StatusLine">org.apache.http.StatusLine</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public abstract int <a class="d" name="getStatusCode" href="/source/s?defs=getStatusCode">getStatusCode</a> () 
	public abstract java.lang.String <a class="d" name="getReasonPhrase" href="/source/s?defs=getReasonPhrase">getReasonPhrase</a> () 
}
</pre><br/><b>org/apache/http/HeaderElementIterator.class</b><pre><a href="/source/s?path=HeaderElementIterator.java">HeaderElementIterator.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HeaderElementIterator" href="/source/s?defs=org.apache.http.HeaderElementIterator">org.apache.http.HeaderElementIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.util.Iterator">java.util.Iterator</a>  {
	public abstract boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public abstract org.apache.http.HeaderElement <a class="d" name="nextElement" href="/source/s?defs=nextElement">nextElement</a> () 
}
</pre><br/><b>org/apache/http/HttpConnection.class</b><pre><a href="/source/s?path=HttpConnection.java">HttpConnection.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpConnection" href="/source/s?defs=org.apache.http.HttpConnection">org.apache.http.HttpConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract boolean <a class="d" name="isOpen" href="/source/s?defs=isOpen">isOpen</a> () 
	public abstract boolean <a class="d" name="isStale" href="/source/s?defs=isStale">isStale</a> () 
	public abstract void <a class="d" name="setSocketTimeout" href="/source/s?defs=setSocketTimeout">setSocketTimeout</a> (int) 
	public abstract int <a class="d" name="getSocketTimeout" href="/source/s?defs=getSocketTimeout">getSocketTimeout</a> () 
	public abstract void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract org.apache.http.HttpConnectionMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/FormattedHeader.class</b><pre><a href="/source/s?path=FormattedHeader.java">FormattedHeader.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.FormattedHeader" href="/source/s?defs=org.apache.http.FormattedHeader">org.apache.http.FormattedHeader</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.Header">org.apache.http.Header</a>  {
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="getBuffer" href="/source/s?defs=getBuffer">getBuffer</a> () 
	public abstract int <a class="d" name="getValuePos" href="/source/s?defs=getValuePos">getValuePos</a> () 
}
</pre><br/><b>org/apache/http/HttpResponseFactory.class</b><pre><a href="/source/s?path=HttpResponseFactory.java">HttpResponseFactory.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpResponseFactory" href="/source/s?defs=org.apache.http.HttpResponseFactory">org.apache.http.HttpResponseFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HttpResponse <a class="d" name="newHttpResponse" href="/source/s?defs=newHttpResponse">newHttpResponse</a> (org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext) 
	public abstract org.apache.http.HttpResponse <a class="d" name="newHttpResponse" href="/source/s?defs=newHttpResponse">newHttpResponse</a> (org.apache.http.StatusLine, org.apache.http.protocol.HttpContext) 
}
</pre><br/><b>org/apache/http/HttpStatus.class</b><pre><a href="/source/s?path=HttpStatus.java">HttpStatus.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpStatus" href="/source/s?defs=org.apache.http.HttpStatus">org.apache.http.HttpStatus</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final int <a class="d" name="SC_CONTINUE" href="/source/s?defs=SC_CONTINUE">SC_CONTINUE</a>
	public static final int <a class="d" name="SC_SWITCHING_PROTOCOLS" href="/source/s?defs=SC_SWITCHING_PROTOCOLS">SC_SWITCHING_PROTOCOLS</a>
	public static final int <a class="d" name="SC_PROCESSING" href="/source/s?defs=SC_PROCESSING">SC_PROCESSING</a>
	public static final int <a class="d" name="SC_OK" href="/source/s?defs=SC_OK">SC_OK</a>
	public static final int <a class="d" name="SC_CREATED" href="/source/s?defs=SC_CREATED">SC_CREATED</a>
	public static final int <a class="d" name="SC_ACCEPTED" href="/source/s?defs=SC_ACCEPTED">SC_ACCEPTED</a>
	public static final int <a class="d" name="SC_NON_AUTHORITATIVE_INFORMATION" href="/source/s?defs=SC_NON_AUTHORITATIVE_INFORMATION">SC_NON_AUTHORITATIVE_INFORMATION</a>
	public static final int <a class="d" name="SC_NO_CONTENT" href="/source/s?defs=SC_NO_CONTENT">SC_NO_CONTENT</a>
	public static final int <a class="d" name="SC_RESET_CONTENT" href="/source/s?defs=SC_RESET_CONTENT">SC_RESET_CONTENT</a>
	public static final int <a class="d" name="SC_PARTIAL_CONTENT" href="/source/s?defs=SC_PARTIAL_CONTENT">SC_PARTIAL_CONTENT</a>
	public static final int <a class="d" name="SC_MULTI_STATUS" href="/source/s?defs=SC_MULTI_STATUS">SC_MULTI_STATUS</a>
	public static final int <a class="d" name="SC_MULTIPLE_CHOICES" href="/source/s?defs=SC_MULTIPLE_CHOICES">SC_MULTIPLE_CHOICES</a>
	public static final int <a class="d" name="SC_MOVED_PERMANENTLY" href="/source/s?defs=SC_MOVED_PERMANENTLY">SC_MOVED_PERMANENTLY</a>
	public static final int <a class="d" name="SC_MOVED_TEMPORARILY" href="/source/s?defs=SC_MOVED_TEMPORARILY">SC_MOVED_TEMPORARILY</a>
	public static final int <a class="d" name="SC_SEE_OTHER" href="/source/s?defs=SC_SEE_OTHER">SC_SEE_OTHER</a>
	public static final int <a class="d" name="SC_NOT_MODIFIED" href="/source/s?defs=SC_NOT_MODIFIED">SC_NOT_MODIFIED</a>
	public static final int <a class="d" name="SC_USE_PROXY" href="/source/s?defs=SC_USE_PROXY">SC_USE_PROXY</a>
	public static final int <a class="d" name="SC_TEMPORARY_REDIRECT" href="/source/s?defs=SC_TEMPORARY_REDIRECT">SC_TEMPORARY_REDIRECT</a>
	public static final int <a class="d" name="SC_BAD_REQUEST" href="/source/s?defs=SC_BAD_REQUEST">SC_BAD_REQUEST</a>
	public static final int <a class="d" name="SC_UNAUTHORIZED" href="/source/s?defs=SC_UNAUTHORIZED">SC_UNAUTHORIZED</a>
	public static final int <a class="d" name="SC_PAYMENT_REQUIRED" href="/source/s?defs=SC_PAYMENT_REQUIRED">SC_PAYMENT_REQUIRED</a>
	public static final int <a class="d" name="SC_FORBIDDEN" href="/source/s?defs=SC_FORBIDDEN">SC_FORBIDDEN</a>
	public static final int <a class="d" name="SC_NOT_FOUND" href="/source/s?defs=SC_NOT_FOUND">SC_NOT_FOUND</a>
	public static final int <a class="d" name="SC_METHOD_NOT_ALLOWED" href="/source/s?defs=SC_METHOD_NOT_ALLOWED">SC_METHOD_NOT_ALLOWED</a>
	public static final int <a class="d" name="SC_NOT_ACCEPTABLE" href="/source/s?defs=SC_NOT_ACCEPTABLE">SC_NOT_ACCEPTABLE</a>
	public static final int <a class="d" name="SC_PROXY_AUTHENTICATION_REQUIRED" href="/source/s?defs=SC_PROXY_AUTHENTICATION_REQUIRED">SC_PROXY_AUTHENTICATION_REQUIRED</a>
	public static final int <a class="d" name="SC_REQUEST_TIMEOUT" href="/source/s?defs=SC_REQUEST_TIMEOUT">SC_REQUEST_TIMEOUT</a>
	public static final int <a class="d" name="SC_CONFLICT" href="/source/s?defs=SC_CONFLICT">SC_CONFLICT</a>
	public static final int <a class="d" name="SC_GONE" href="/source/s?defs=SC_GONE">SC_GONE</a>
	public static final int <a class="d" name="SC_LENGTH_REQUIRED" href="/source/s?defs=SC_LENGTH_REQUIRED">SC_LENGTH_REQUIRED</a>
	public static final int <a class="d" name="SC_PRECONDITION_FAILED" href="/source/s?defs=SC_PRECONDITION_FAILED">SC_PRECONDITION_FAILED</a>
	public static final int <a class="d" name="SC_REQUEST_TOO_LONG" href="/source/s?defs=SC_REQUEST_TOO_LONG">SC_REQUEST_TOO_LONG</a>
	public static final int <a class="d" name="SC_REQUEST_URI_TOO_LONG" href="/source/s?defs=SC_REQUEST_URI_TOO_LONG">SC_REQUEST_URI_TOO_LONG</a>
	public static final int <a class="d" name="SC_UNSUPPORTED_MEDIA_TYPE" href="/source/s?defs=SC_UNSUPPORTED_MEDIA_TYPE">SC_UNSUPPORTED_MEDIA_TYPE</a>
	public static final int <a class="d" name="SC_REQUESTED_RANGE_NOT_SATISFIABLE" href="/source/s?defs=SC_REQUESTED_RANGE_NOT_SATISFIABLE">SC_REQUESTED_RANGE_NOT_SATISFIABLE</a>
	public static final int <a class="d" name="SC_EXPECTATION_FAILED" href="/source/s?defs=SC_EXPECTATION_FAILED">SC_EXPECTATION_FAILED</a>
	public static final int <a class="d" name="SC_INSUFFICIENT_SPACE_ON_RESOURCE" href="/source/s?defs=SC_INSUFFICIENT_SPACE_ON_RESOURCE">SC_INSUFFICIENT_SPACE_ON_RESOURCE</a>
	public static final int <a class="d" name="SC_METHOD_FAILURE" href="/source/s?defs=SC_METHOD_FAILURE">SC_METHOD_FAILURE</a>
	public static final int <a class="d" name="SC_UNPROCESSABLE_ENTITY" href="/source/s?defs=SC_UNPROCESSABLE_ENTITY">SC_UNPROCESSABLE_ENTITY</a>
	public static final int <a class="d" name="SC_LOCKED" href="/source/s?defs=SC_LOCKED">SC_LOCKED</a>
	public static final int <a class="d" name="SC_FAILED_DEPENDENCY" href="/source/s?defs=SC_FAILED_DEPENDENCY">SC_FAILED_DEPENDENCY</a>
	public static final int <a class="d" name="SC_INTERNAL_SERVER_ERROR" href="/source/s?defs=SC_INTERNAL_SERVER_ERROR">SC_INTERNAL_SERVER_ERROR</a>
	public static final int <a class="d" name="SC_NOT_IMPLEMENTED" href="/source/s?defs=SC_NOT_IMPLEMENTED">SC_NOT_IMPLEMENTED</a>
	public static final int <a class="d" name="SC_BAD_GATEWAY" href="/source/s?defs=SC_BAD_GATEWAY">SC_BAD_GATEWAY</a>
	public static final int <a class="d" name="SC_SERVICE_UNAVAILABLE" href="/source/s?defs=SC_SERVICE_UNAVAILABLE">SC_SERVICE_UNAVAILABLE</a>
	public static final int <a class="d" name="SC_GATEWAY_TIMEOUT" href="/source/s?defs=SC_GATEWAY_TIMEOUT">SC_GATEWAY_TIMEOUT</a>
	public static final int <a class="d" name="SC_HTTP_VERSION_NOT_SUPPORTED" href="/source/s?defs=SC_HTTP_VERSION_NOT_SUPPORTED">SC_HTTP_VERSION_NOT_SUPPORTED</a>
	public static final int <a class="d" name="SC_INSUFFICIENT_STORAGE" href="/source/s?defs=SC_INSUFFICIENT_STORAGE">SC_INSUFFICIENT_STORAGE</a>
}
</pre><br/><b>org/apache/http/HttpException.class</b><pre><a href="/source/s?path=HttpException.java">HttpException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.HttpException" href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> extends <a href="/source/s?defs=java.lang.Exception">java.lang.Exception</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/message/HeaderValueParser.class</b><pre><a href="/source/s?path=HeaderValueParser.java">HeaderValueParser.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public abstract <a class="d" name="org.apache.http.message.HeaderValueParser" href="/source/s?defs=org.apache.http.message.HeaderValueParser">org.apache.http.message.HeaderValueParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HeaderElement[] <a class="d" name="parseElements" href="/source/s?defs=parseElements">parseElements</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract org.apache.http.HeaderElement <a class="d" name="parseHeaderElement" href="/source/s?defs=parseHeaderElement">parseHeaderElement</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract org.apache.http.NameValuePair[] <a class="d" name="parseParameters" href="/source/s?defs=parseParameters">parseParameters</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract org.apache.http.NameValuePair <a class="d" name="parseNameValuePair" href="/source/s?defs=parseNameValuePair">parseNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
}
</pre><br/><b>org/apache/http/message/BasicRequestLine.class</b><pre><a href="/source/s?path=BasicRequestLine.java">BasicRequestLine.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicRequestLine" href="/source/s?defs=org.apache.http.message.BasicRequestLine">org.apache.http.message.BasicRequestLine</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.RequestLine">org.apache.http.RequestLine</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.ProtocolVersion <a class="d" name="protoversion" href="/source/s?defs=protoversion">protoversion</a>
	private final String <a class="d" name="method" href="/source/s?defs=method">method</a>
	private final String <a class="d" name="uri" href="/source/s?defs=uri">uri</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, org.apache.http.ProtocolVersion) 
		String method
		String uri
		org.apache.http.ProtocolVersion version
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public java.lang.String <a class="d" name="getUri" href="/source/s?defs=getUri">getUri</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicHeaderValueFormatter.class</b><pre><a href="/source/s?path=BasicHeaderValueFormatter.java">BasicHeaderValueFormatter.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeaderValueFormatter" href="/source/s?defs=org.apache.http.message.BasicHeaderValueFormatter">org.apache.http.message.BasicHeaderValueFormatter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.message.HeaderValueFormatter">org.apache.http.message.HeaderValueFormatter</a>  {
	public static final org.apache.http.message.BasicHeaderValueFormatter <a class="d" name="DEFAULT" href="/source/s?defs=DEFAULT">DEFAULT</a>
	public static final String <a class="d" name="SEPARATORS" href="/source/s?defs=SEPARATORS">SEPARATORS</a>
	public static final String <a class="d" name="UNSAFE_CHARS" href="/source/s?defs=UNSAFE_CHARS">UNSAFE_CHARS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static final java.lang.String <a class="d" name="formatElements" href="/source/s?defs=formatElements">formatElements</a> (org.apache.http.HeaderElement[], boolean, org.apache.http.message.HeaderValueFormatter) 
		org.apache.http.HeaderElement[] elems
		boolean quote
		org.apache.http.message.HeaderValueFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatElements" href="/source/s?defs=formatElements">formatElements</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement[], boolean) 
		int i
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.HeaderElement[] elems
		boolean quote
		int len
	protected int <a class="d" name="estimateElementsLen" href="/source/s?defs=estimateElementsLen">estimateElementsLen</a> (org.apache.http.HeaderElement[]) 
		int i
		org.apache.http.HeaderElement[] elems
		int result
	public static final java.lang.String <a class="d" name="formatHeaderElement" href="/source/s?defs=formatHeaderElement">formatHeaderElement</a> (org.apache.http.HeaderElement, boolean, org.apache.http.message.HeaderValueFormatter) 
		org.apache.http.HeaderElement elem
		boolean quote
		org.apache.http.message.HeaderValueFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatHeaderElement" href="/source/s?defs=formatHeaderElement">formatHeaderElement</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement, boolean) 
		int i
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.HeaderElement elem
		boolean quote
		int len
		String value
		int parcnt
	protected int <a class="d" name="estimateHeaderElementLen" href="/source/s?defs=estimateHeaderElementLen">estimateHeaderElementLen</a> (org.apache.http.HeaderElement) 
		int i
		org.apache.http.HeaderElement elem
		int result
		String value
		int parcnt
	public static final java.lang.String <a class="d" name="formatParameters" href="/source/s?defs=formatParameters">formatParameters</a> (org.apache.http.NameValuePair[], boolean, org.apache.http.message.HeaderValueFormatter) 
		org.apache.http.NameValuePair[] nvps
		boolean quote
		org.apache.http.message.HeaderValueFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatParameters" href="/source/s?defs=formatParameters">formatParameters</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair[], boolean) 
		int i
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.NameValuePair[] nvps
		boolean quote
		int len
	protected int <a class="d" name="estimateParametersLen" href="/source/s?defs=estimateParametersLen">estimateParametersLen</a> (org.apache.http.NameValuePair[]) 
		int i
		org.apache.http.NameValuePair[] nvps
		int result
	public static final java.lang.String <a class="d" name="formatNameValuePair" href="/source/s?defs=formatNameValuePair">formatNameValuePair</a> (org.apache.http.NameValuePair, boolean, org.apache.http.message.HeaderValueFormatter) 
		org.apache.http.NameValuePair nvp
		boolean quote
		org.apache.http.message.HeaderValueFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatNameValuePair" href="/source/s?defs=formatNameValuePair">formatNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair, boolean) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.NameValuePair nvp
		boolean quote
		int len
		String value
	protected int <a class="d" name="estimateNameValuePairLen" href="/source/s?defs=estimateNameValuePairLen">estimateNameValuePairLen</a> (org.apache.http.NameValuePair) 
		org.apache.http.NameValuePair nvp
		int result
		String value
	protected void <a class="d" name="doFormatValue" href="/source/s?defs=doFormatValue">doFormatValue</a> (org.apache.http.util.CharArrayBuffer, java.lang.String, boolean) 
		int i
		char ch
		int i
		org.apache.http.util.CharArrayBuffer buffer
		String value
		boolean quote
	protected boolean <a class="d" name="isSeparator" href="/source/s?defs=isSeparator">isSeparator</a> (char) 
		char ch
	protected boolean <a class="d" name="isUnsafe" href="/source/s?defs=isUnsafe">isUnsafe</a> (char) 
		char ch
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/message/HeaderGroup.class</b><pre><a href="/source/s?path=HeaderGroup.java">HeaderGroup.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.HeaderGroup" href="/source/s?defs=org.apache.http.message.HeaderGroup">org.apache.http.message.HeaderGroup</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final java.util.List <a class="d" name="headers" href="/source/s?defs=headers">headers</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public void <a class="d" name="addHeader" href="/source/s?defs=addHeader">addHeader</a> (org.apache.http.Header) 
		org.apache.http.Header header
	public void <a class="d" name="removeHeader" href="/source/s?defs=removeHeader">removeHeader</a> (org.apache.http.Header) 
		org.apache.http.Header header
	public void <a class="d" name="updateHeader" href="/source/s?defs=updateHeader">updateHeader</a> (org.apache.http.Header) 
		org.apache.http.Header current
		int i
		org.apache.http.Header header
	public void <a class="d" name="setHeaders" href="/source/s?defs=setHeaders">setHeaders</a> (org.apache.http.Header[]) 
		int i
		org.apache.http.Header[] headers
	public org.apache.http.Header <a class="d" name="getCondensedHeader" href="/source/s?defs=getCondensedHeader">getCondensedHeader</a> (java.lang.String) 
		int i
		org.apache.http.util.CharArrayBuffer valueBuffer
		String name
		org.apache.http.Header[] headers
	public org.apache.http.Header[] <a class="d" name="getHeaders" href="/source/s?defs=getHeaders">getHeaders</a> (java.lang.String) 
		org.apache.http.Header header
		int i
		String name
		java.util.ArrayList headersFound
	public org.apache.http.Header <a class="d" name="getFirstHeader" href="/source/s?defs=getFirstHeader">getFirstHeader</a> (java.lang.String) 
		org.apache.http.Header header
		int i
		String name
	public org.apache.http.Header <a class="d" name="getLastHeader" href="/source/s?defs=getLastHeader">getLastHeader</a> (java.lang.String) 
		org.apache.http.Header header
		int i
		String name
	public org.apache.http.Header[] <a class="d" name="getAllHeaders" href="/source/s?defs=getAllHeaders">getAllHeaders</a> () 
	public boolean <a class="d" name="containsHeader" href="/source/s?defs=containsHeader">containsHeader</a> (java.lang.String) 
		org.apache.http.Header header
		int i
		String name
	public org.apache.http.HeaderIterator <a class="d" name="iterator" href="/source/s?defs=iterator">iterator</a> () 
	public org.apache.http.HeaderIterator <a class="d" name="iterator" href="/source/s?defs=iterator">iterator</a> (java.lang.String) 
		String name
	public org.apache.http.message.HeaderGroup <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
		org.apache.http.message.HeaderGroup clone
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.message.HeaderGroup clone
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/message/AbstractHttpMessage.class</b><pre><a href="/source/s?path=AbstractHttpMessage.java">AbstractHttpMessage.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public abstract <a class="d" name="org.apache.http.message.AbstractHttpMessage" href="/source/s?defs=org.apache.http.message.AbstractHttpMessage">org.apache.http.message.AbstractHttpMessage</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpMessage">org.apache.http.HttpMessage</a>  {
	protected org.apache.http.message.HeaderGroup <a class="d" name="headergroup" href="/source/s?defs=headergroup">headergroup</a>
	protected org.apache.http.params.HttpParams <a class="d" name="params" href="/source/s?defs=params">params</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="containsHeader" href="/source/s?defs=containsHeader">containsHeader</a> (java.lang.String) 
		String name
	public org.apache.http.Header[] <a class="d" name="getHeaders" href="/source/s?defs=getHeaders">getHeaders</a> (java.lang.String) 
		String name
	public org.apache.http.Header <a class="d" name="getFirstHeader" href="/source/s?defs=getFirstHeader">getFirstHeader</a> (java.lang.String) 
		String name
	public org.apache.http.Header <a class="d" name="getLastHeader" href="/source/s?defs=getLastHeader">getLastHeader</a> (java.lang.String) 
		String name
	public org.apache.http.Header[] <a class="d" name="getAllHeaders" href="/source/s?defs=getAllHeaders">getAllHeaders</a> () 
	public void <a class="d" name="addHeader" href="/source/s?defs=addHeader">addHeader</a> (org.apache.http.Header) 
		org.apache.http.Header header
	public void <a class="d" name="addHeader" href="/source/s?defs=addHeader">addHeader</a> (java.lang.String, java.lang.String) 
		String name
		String value
	public void <a class="d" name="setHeader" href="/source/s?defs=setHeader">setHeader</a> (org.apache.http.Header) 
		org.apache.http.Header header
	public void <a class="d" name="setHeader" href="/source/s?defs=setHeader">setHeader</a> (java.lang.String, java.lang.String) 
		String name
		String value
	public void <a class="d" name="setHeaders" href="/source/s?defs=setHeaders">setHeaders</a> (org.apache.http.Header[]) 
		org.apache.http.Header[] headers
	public void <a class="d" name="removeHeader" href="/source/s?defs=removeHeader">removeHeader</a> (org.apache.http.Header) 
		org.apache.http.Header header
	public void <a class="d" name="removeHeaders" href="/source/s?defs=removeHeaders">removeHeaders</a> (java.lang.String) 
		org.apache.http.Header header
		java.util.Iterator i
		String name
	public org.apache.http.HeaderIterator <a class="d" name="headerIterator" href="/source/s?defs=headerIterator">headerIterator</a> () 
	public org.apache.http.HeaderIterator <a class="d" name="headerIterator" href="/source/s?defs=headerIterator">headerIterator</a> (java.lang.String) 
		String name
	public org.apache.http.params.HttpParams <a class="d" name="getParams" href="/source/s?defs=getParams">getParams</a> () 
	public void <a class="d" name="setParams" href="/source/s?defs=setParams">setParams</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/message/BasicTokenIterator.class</b><pre><a href="/source/s?path=BasicTokenIterator.java">BasicTokenIterator.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicTokenIterator" href="/source/s?defs=org.apache.http.message.BasicTokenIterator">org.apache.http.message.BasicTokenIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.TokenIterator">org.apache.http.TokenIterator</a>  {
	public static final String <a class="d" name="HTTP_SEPARATORS" href="/source/s?defs=HTTP_SEPARATORS">HTTP_SEPARATORS</a>
	protected final org.apache.http.HeaderIterator <a class="d" name="headerIt" href="/source/s?defs=headerIt">headerIt</a>
	protected String <a class="d" name="currentHeader" href="/source/s?defs=currentHeader">currentHeader</a>
	protected String <a class="d" name="currentToken" href="/source/s?defs=currentToken">currentToken</a>
	protected int <a class="d" name="searchPos" href="/source/s?defs=searchPos">searchPos</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HeaderIterator) 
		org.apache.http.HeaderIterator headerIterator
	public boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public java.lang.String <a class="d" name="nextToken" href="/source/s?defs=nextToken">nextToken</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String result
	public final java.lang.Object <a class="d" name="next" href="/source/s?defs=next">next</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public final void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
	protected int <a class="d" name="findNext" href="/source/s?defs=findNext">findNext</a> (int)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		int from
		int start
		int end
	protected java.lang.String <a class="d" name="createToken" href="/source/s?defs=createToken">createToken</a> (java.lang.String, int, int) 
		String value
		int start
		int end
	protected int <a class="d" name="findTokenStart" href="/source/s?defs=findTokenStart">findTokenStart</a> (int) 
		char ch
		int to
		int from
		boolean found
	protected int <a class="d" name="findTokenSeparator" href="/source/s?defs=findTokenSeparator">findTokenSeparator</a> (int) 
		char ch
		int from
		boolean found
		int to
	protected int <a class="d" name="findTokenEnd" href="/source/s?defs=findTokenEnd">findTokenEnd</a> (int) 
		int from
		int to
		int end
	protected boolean <a class="d" name="isTokenSeparator" href="/source/s?defs=isTokenSeparator">isTokenSeparator</a> (char) 
		char ch
	protected boolean <a class="d" name="isWhitespace" href="/source/s?defs=isWhitespace">isWhitespace</a> (char) 
		char ch
	protected boolean <a class="d" name="isTokenChar" href="/source/s?defs=isTokenChar">isTokenChar</a> (char) 
		char ch
	protected boolean <a class="d" name="isHttpSeparator" href="/source/s?defs=isHttpSeparator">isHttpSeparator</a> (char) 
		char ch
}
</pre><br/><b>org/apache/http/message/LineFormatter.class</b><pre><a href="/source/s?path=LineFormatter.java">LineFormatter.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public abstract <a class="d" name="org.apache.http.message.LineFormatter" href="/source/s?defs=org.apache.http.message.LineFormatter">org.apache.http.message.LineFormatter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="appendProtocolVersion" href="/source/s?defs=appendProtocolVersion">appendProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.ProtocolVersion) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatRequestLine" href="/source/s?defs=formatRequestLine">formatRequestLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatStatusLine" href="/source/s?defs=formatStatusLine">formatStatusLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatHeader" href="/source/s?defs=formatHeader">formatHeader</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.Header) 
}
</pre><br/><b>org/apache/http/message/BufferedHeader.class</b><pre><a href="/source/s?path=BufferedHeader.java">BufferedHeader.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BufferedHeader" href="/source/s?defs=org.apache.http.message.BufferedHeader">org.apache.http.message.BufferedHeader</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.FormattedHeader">org.apache.http.FormattedHeader</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final org.apache.http.util.CharArrayBuffer <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private final int <a class="d" name="valuePos" href="/source/s?defs=valuePos">valuePos</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		int colon
		String s
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public org.apache.http.HeaderElement[] <a class="d" name="getElements" href="/source/s?defs=getElements">getElements</a> ()  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.message.ParserCursor cursor
	public int <a class="d" name="getValuePos" href="/source/s?defs=getValuePos">getValuePos</a> () 
	public org.apache.http.util.CharArrayBuffer <a class="d" name="getBuffer" href="/source/s?defs=getBuffer">getBuffer</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicHttpResponse.class</b><pre><a href="/source/s?path=BasicHttpResponse.java">BasicHttpResponse.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHttpResponse" href="/source/s?defs=org.apache.http.message.BasicHttpResponse">org.apache.http.message.BasicHttpResponse</a> extends <a href="/source/s?defs=org.apache.http.message.AbstractHttpMessage">org.apache.http.message.AbstractHttpMessage</a> implements <a href="/source/s?defs=org.apache.http.HttpResponse">org.apache.http.HttpResponse</a>  {
	private org.apache.http.StatusLine <a class="d" name="statusline" href="/source/s?defs=statusline">statusline</a>
	private org.apache.http.HttpEntity <a class="d" name="entity" href="/source/s?defs=entity">entity</a>
	private org.apache.http.ReasonPhraseCatalog <a class="d" name="reasonCatalog" href="/source/s?defs=reasonCatalog">reasonCatalog</a>
	private java.util.Locale <a class="d" name="locale" href="/source/s?defs=locale">locale</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.StatusLine, org.apache.http.ReasonPhraseCatalog, java.util.Locale) 
		org.apache.http.StatusLine statusline
		org.apache.http.ReasonPhraseCatalog catalog
		java.util.Locale locale
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.StatusLine) 
		org.apache.http.StatusLine statusline
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.ProtocolVersion, int, java.lang.String) 
		org.apache.http.ProtocolVersion ver
		int code
		String reason
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public org.apache.http.StatusLine <a class="d" name="getStatusLine" href="/source/s?defs=getStatusLine">getStatusLine</a> () 
	public org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
	public java.util.Locale <a class="d" name="getLocale" href="/source/s?defs=getLocale">getLocale</a> () 
	public void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.StatusLine) 
		org.apache.http.StatusLine statusline
	public void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.ProtocolVersion, int) 
		org.apache.http.ProtocolVersion ver
		int code
	public void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.ProtocolVersion, int, java.lang.String) 
		org.apache.http.ProtocolVersion ver
		int code
		String reason
	public void <a class="d" name="setStatusCode" href="/source/s?defs=setStatusCode">setStatusCode</a> (int) 
		int code
		org.apache.http.ProtocolVersion ver
	public void <a class="d" name="setReasonPhrase" href="/source/s?defs=setReasonPhrase">setReasonPhrase</a> (java.lang.String) 
		String reason
	public void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public void <a class="d" name="setLocale" href="/source/s?defs=setLocale">setLocale</a> (java.util.Locale) 
		java.util.Locale loc
		int code
	protected java.lang.String <a class="d" name="getReason" href="/source/s?defs=getReason">getReason</a> (int) 
		int code
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/message/LineParser.class</b><pre><a href="/source/s?path=LineParser.java">LineParser.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public abstract <a class="d" name="org.apache.http.message.LineParser" href="/source/s?defs=org.apache.http.message.LineParser">org.apache.http.message.LineParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.ProtocolVersion <a class="d" name="parseProtocolVersion" href="/source/s?defs=parseProtocolVersion">parseProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract boolean <a class="d" name="hasProtocolVersion" href="/source/s?defs=hasProtocolVersion">hasProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
	public abstract org.apache.http.RequestLine <a class="d" name="parseRequestLine" href="/source/s?defs=parseRequestLine">parseRequestLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract org.apache.http.StatusLine <a class="d" name="parseStatusLine" href="/source/s?defs=parseStatusLine">parseStatusLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public abstract org.apache.http.Header <a class="d" name="parseHeader" href="/source/s?defs=parseHeader">parseHeader</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
}
</pre><br/><b>org/apache/http/message/HeaderValueFormatter.class</b><pre><a href="/source/s?path=HeaderValueFormatter.java">HeaderValueFormatter.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public abstract <a class="d" name="org.apache.http.message.HeaderValueFormatter" href="/source/s?defs=org.apache.http.message.HeaderValueFormatter">org.apache.http.message.HeaderValueFormatter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatElements" href="/source/s?defs=formatElements">formatElements</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement[], boolean) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatHeaderElement" href="/source/s?defs=formatHeaderElement">formatHeaderElement</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement, boolean) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatParameters" href="/source/s?defs=formatParameters">formatParameters</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair[], boolean) 
	public abstract org.apache.http.util.CharArrayBuffer <a class="d" name="formatNameValuePair" href="/source/s?defs=formatNameValuePair">formatNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair, boolean) 
}
</pre><br/><b>org/apache/http/message/BasicHttpEntityEnclosingRequest.class</b><pre><a href="/source/s?path=BasicHttpEntityEnclosingRequest.java">BasicHttpEntityEnclosingRequest.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHttpEntityEnclosingRequest" href="/source/s?defs=org.apache.http.message.BasicHttpEntityEnclosingRequest">org.apache.http.message.BasicHttpEntityEnclosingRequest</a> extends <a href="/source/s?defs=org.apache.http.message.BasicHttpRequest">org.apache.http.message.BasicHttpRequest</a> implements <a href="/source/s?defs=org.apache.http.HttpEntityEnclosingRequest">org.apache.http.HttpEntityEnclosingRequest</a>  {
	private org.apache.http.HttpEntity <a class="d" name="entity" href="/source/s?defs=entity">entity</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String method
		String uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, org.apache.http.ProtocolVersion) 
		String method
		String uri
		org.apache.http.ProtocolVersion ver
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.RequestLine) 
		org.apache.http.RequestLine requestline
	public org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
	public void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public boolean <a class="d" name="expectContinue" href="/source/s?defs=expectContinue">expectContinue</a> () 
		org.apache.http.Header expect
}
</pre><br/><b>org/apache/http/message/BasicHeaderValueParser.class</b><pre><a href="/source/s?path=BasicHeaderValueParser.java">BasicHeaderValueParser.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeaderValueParser" href="/source/s?defs=org.apache.http.message.BasicHeaderValueParser">org.apache.http.message.BasicHeaderValueParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.message.HeaderValueParser">org.apache.http.message.HeaderValueParser</a>  {
	public static final org.apache.http.message.BasicHeaderValueParser <a class="d" name="DEFAULT" href="/source/s?defs=DEFAULT">DEFAULT</a>
	private static final char <a class="d" name="PARAM_DELIMITER" href="/source/s?defs=PARAM_DELIMITER">PARAM_DELIMITER</a>
	private static final char <a class="d" name="ELEM_DELIMITER" href="/source/s?defs=ELEM_DELIMITER">ELEM_DELIMITER</a>
	private static final char[] <a class="d" name="ALL_DELIMITERS" href="/source/s?defs=ALL_DELIMITERS">ALL_DELIMITERS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static final org.apache.http.HeaderElement[] <a class="d" name="parseElements" href="/source/s?defs=parseElements">parseElements</a> (java.lang.String, org.apache.http.message.HeaderValueParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.HeaderValueParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.HeaderElement[] <a class="d" name="parseElements" href="/source/s?defs=parseElements">parseElements</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		org.apache.http.HeaderElement element
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		java.util.List elements
	public static final org.apache.http.HeaderElement <a class="d" name="parseHeaderElement" href="/source/s?defs=parseHeaderElement">parseHeaderElement</a> (java.lang.String, org.apache.http.message.HeaderValueParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.HeaderValueParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.HeaderElement <a class="d" name="parseHeaderElement" href="/source/s?defs=parseHeaderElement">parseHeaderElement</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		char ch
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		org.apache.http.NameValuePair nvp
		org.apache.http.NameValuePair[] params
	protected org.apache.http.HeaderElement <a class="d" name="createHeaderElement" href="/source/s?defs=createHeaderElement">createHeaderElement</a> (java.lang.String, java.lang.String, org.apache.http.NameValuePair[]) 
		String name
		String value
		org.apache.http.NameValuePair[] params
	public static final org.apache.http.NameValuePair[] <a class="d" name="parseParameters" href="/source/s?defs=parseParameters">parseParameters</a> (java.lang.String, org.apache.http.message.HeaderValueParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.HeaderValueParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.NameValuePair[] <a class="d" name="parseParameters" href="/source/s?defs=parseParameters">parseParameters</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		char ch
		org.apache.http.NameValuePair param
		char ch
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		int pos
		int indexTo
		java.util.List params
	public static final org.apache.http.NameValuePair <a class="d" name="parseNameValuePair" href="/source/s?defs=parseNameValuePair">parseNameValuePair</a> (java.lang.String, org.apache.http.message.HeaderValueParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.HeaderValueParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.NameValuePair <a class="d" name="parseNameValuePair" href="/source/s?defs=parseNameValuePair">parseNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	private static boolean <a class="d" name="isOneOf" href="/source/s?defs=isOneOf">isOneOf</a> (char, char[]) 
		int i
		char ch
		char[] chs
	public org.apache.http.NameValuePair <a class="d" name="parseNameValuePair" href="/source/s?defs=parseNameValuePair">parseNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor, char[]) 
		char ch
		char ch
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		char[] delimiters
		boolean terminated
		int pos
		int indexFrom
		int indexTo
		String name
		String value
		int i1
		boolean qouted
		boolean escaped
		int i2
	protected org.apache.http.NameValuePair <a class="d" name="createNameValuePair" href="/source/s?defs=createNameValuePair">createNameValuePair</a> (java.lang.String, java.lang.String) 
		String name
		String value
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/message/BasicHeaderElement.class</b><pre><a href="/source/s?path=BasicHeaderElement.java">BasicHeaderElement.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeaderElement" href="/source/s?defs=org.apache.http.message.BasicHeaderElement">org.apache.http.message.BasicHeaderElement</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HeaderElement">org.apache.http.HeaderElement</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final String <a class="d" name="value" href="/source/s?defs=value">value</a>
	private final org.apache.http.NameValuePair[] <a class="d" name="parameters" href="/source/s?defs=parameters">parameters</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, org.apache.http.NameValuePair[]) 
		String name
		String value
		org.apache.http.NameValuePair[] parameters
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public org.apache.http.NameValuePair[] <a class="d" name="getParameters" href="/source/s?defs=getParameters">getParameters</a> () 
	public int <a class="d" name="getParameterCount" href="/source/s?defs=getParameterCount">getParameterCount</a> () 
	public org.apache.http.NameValuePair <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (int) 
		int index
	public org.apache.http.NameValuePair <a class="d" name="getParameterByName" href="/source/s?defs=getParameterByName">getParameterByName</a> (java.lang.String) 
		org.apache.http.NameValuePair current
		int i
		String name
		org.apache.http.NameValuePair found
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.message.BasicHeaderElement that
		Object object
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int i
		int hash
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		int i
		org.apache.http.util.CharArrayBuffer buffer
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicLineFormatter.class</b><pre><a href="/source/s?path=BasicLineFormatter.java">BasicLineFormatter.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicLineFormatter" href="/source/s?defs=org.apache.http.message.BasicLineFormatter">org.apache.http.message.BasicLineFormatter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.message.LineFormatter">org.apache.http.message.LineFormatter</a>  {
	public static final org.apache.http.message.BasicLineFormatter <a class="d" name="DEFAULT" href="/source/s?defs=DEFAULT">DEFAULT</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected org.apache.http.util.CharArrayBuffer <a class="d" name="initBuffer" href="/source/s?defs=initBuffer">initBuffer</a> (org.apache.http.util.CharArrayBuffer) 
		org.apache.http.util.CharArrayBuffer buffer
	public static final java.lang.String <a class="d" name="formatProtocolVersion" href="/source/s?defs=formatProtocolVersion">formatProtocolVersion</a> (org.apache.http.ProtocolVersion, org.apache.http.message.LineFormatter) 
		org.apache.http.ProtocolVersion version
		org.apache.http.message.LineFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="appendProtocolVersion" href="/source/s?defs=appendProtocolVersion">appendProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.ProtocolVersion) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.ProtocolVersion version
		org.apache.http.util.CharArrayBuffer result
		int len
	protected int <a class="d" name="estimateProtocolVersionLen" href="/source/s?defs=estimateProtocolVersionLen">estimateProtocolVersionLen</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion version
	public static final java.lang.String <a class="d" name="formatRequestLine" href="/source/s?defs=formatRequestLine">formatRequestLine</a> (org.apache.http.RequestLine, org.apache.http.message.LineFormatter) 
		org.apache.http.RequestLine reqline
		org.apache.http.message.LineFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatRequestLine" href="/source/s?defs=formatRequestLine">formatRequestLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.RequestLine reqline
		org.apache.http.util.CharArrayBuffer result
	protected void <a class="d" name="doFormatRequestLine" href="/source/s?defs=doFormatRequestLine">doFormatRequestLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.RequestLine reqline
		String method
		String uri
		int len
	public static final java.lang.String <a class="d" name="formatStatusLine" href="/source/s?defs=formatStatusLine">formatStatusLine</a> (org.apache.http.StatusLine, org.apache.http.message.LineFormatter) 
		org.apache.http.StatusLine statline
		org.apache.http.message.LineFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatStatusLine" href="/source/s?defs=formatStatusLine">formatStatusLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.StatusLine statline
		org.apache.http.util.CharArrayBuffer result
	protected void <a class="d" name="doFormatStatusLine" href="/source/s?defs=doFormatStatusLine">doFormatStatusLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.StatusLine statline
		int len
		String reason
	public static final java.lang.String <a class="d" name="formatHeader" href="/source/s?defs=formatHeader">formatHeader</a> (org.apache.http.Header, org.apache.http.message.LineFormatter) 
		org.apache.http.Header header
		org.apache.http.message.LineFormatter formatter
	public org.apache.http.util.CharArrayBuffer <a class="d" name="formatHeader" href="/source/s?defs=formatHeader">formatHeader</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.Header) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.Header header
		org.apache.http.util.CharArrayBuffer result
	protected void <a class="d" name="doFormatHeader" href="/source/s?defs=doFormatHeader">doFormatHeader</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.Header) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.Header header
		String name
		String value
		int len
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/message/BasicStatusLine.class</b><pre><a href="/source/s?path=BasicStatusLine.java">BasicStatusLine.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicStatusLine" href="/source/s?defs=org.apache.http.message.BasicStatusLine">org.apache.http.message.BasicStatusLine</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.StatusLine">org.apache.http.StatusLine</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.ProtocolVersion <a class="d" name="protoVersion" href="/source/s?defs=protoVersion">protoVersion</a>
	private final int <a class="d" name="statusCode" href="/source/s?defs=statusCode">statusCode</a>
	private final String <a class="d" name="reasonPhrase" href="/source/s?defs=reasonPhrase">reasonPhrase</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.ProtocolVersion, int, java.lang.String) 
		org.apache.http.ProtocolVersion version
		int statusCode
		String reasonPhrase
	public int <a class="d" name="getStatusCode" href="/source/s?defs=getStatusCode">getStatusCode</a> () 
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public java.lang.String <a class="d" name="getReasonPhrase" href="/source/s?defs=getReasonPhrase">getReasonPhrase</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicHttpRequest.class</b><pre><a href="/source/s?path=BasicHttpRequest.java">BasicHttpRequest.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHttpRequest" href="/source/s?defs=org.apache.http.message.BasicHttpRequest">org.apache.http.message.BasicHttpRequest</a> extends <a href="/source/s?defs=org.apache.http.message.AbstractHttpMessage">org.apache.http.message.AbstractHttpMessage</a> implements <a href="/source/s?defs=org.apache.http.HttpRequest">org.apache.http.HttpRequest</a>  {
	private final String <a class="d" name="method" href="/source/s?defs=method">method</a>
	private final String <a class="d" name="uri" href="/source/s?defs=uri">uri</a>
	private org.apache.http.RequestLine <a class="d" name="requestline" href="/source/s?defs=requestline">requestline</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String method
		String uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, org.apache.http.ProtocolVersion) 
		String method
		String uri
		org.apache.http.ProtocolVersion ver
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.RequestLine) 
		org.apache.http.RequestLine requestline
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public org.apache.http.RequestLine <a class="d" name="getRequestLine" href="/source/s?defs=getRequestLine">getRequestLine</a> () 
		org.apache.http.ProtocolVersion ver
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/message/BasicHeader.class</b><pre><a href="/source/s?path=BasicHeader.java">BasicHeader.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeader" href="/source/s?defs=org.apache.http.message.BasicHeader">org.apache.http.message.BasicHeader</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.Header">org.apache.http.Header</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final String <a class="d" name="value" href="/source/s?defs=value">value</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	public org.apache.http.HeaderElement[] <a class="d" name="getElements" href="/source/s?defs=getElements">getElements</a> ()  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicListHeaderIterator.class</b><pre><a href="/source/s?path=BasicListHeaderIterator.java">BasicListHeaderIterator.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicListHeaderIterator" href="/source/s?defs=org.apache.http.message.BasicListHeaderIterator">org.apache.http.message.BasicListHeaderIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HeaderIterator">org.apache.http.HeaderIterator</a>  {
	protected final java.util.List <a class="d" name="allHeaders" href="/source/s?defs=allHeaders">allHeaders</a>
	protected int <a class="d" name="currentIndex" href="/source/s?defs=currentIndex">currentIndex</a>
	protected int <a class="d" name="lastIndex" href="/source/s?defs=lastIndex">lastIndex</a>
	protected String <a class="d" name="headerName" href="/source/s?defs=headerName">headerName</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.util.List, java.lang.String) 
		java.util.List headers
		String name
	protected int <a class="d" name="findNext" href="/source/s?defs=findNext">findNext</a> (int) 
		int from
		int to
		boolean found
	protected boolean <a class="d" name="filterHeader" href="/source/s?defs=filterHeader">filterHeader</a> (int) 
		int index
		String name
	public boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public org.apache.http.Header <a class="d" name="nextHeader" href="/source/s?defs=nextHeader">nextHeader</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
		int current
	public final java.lang.Object <a class="d" name="next" href="/source/s?defs=next">next</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
	public void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
}
</pre><br/><b>org/apache/http/message/BasicLineParser.class</b><pre><a href="/source/s?path=BasicLineParser.java">BasicLineParser.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicLineParser" href="/source/s?defs=org.apache.http.message.BasicLineParser">org.apache.http.message.BasicLineParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.message.LineParser">org.apache.http.message.LineParser</a>  {
	public static final org.apache.http.message.BasicLineParser <a class="d" name="DEFAULT" href="/source/s?defs=DEFAULT">DEFAULT</a>
	protected final org.apache.http.ProtocolVersion <a class="d" name="protocol" href="/source/s?defs=protocol">protocol</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion proto
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static final org.apache.http.ProtocolVersion <a class="d" name="parseProtocolVersion" href="/source/s?defs=parseProtocolVersion">parseProtocolVersion</a> (java.lang.String, org.apache.http.message.LineParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.LineParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.ProtocolVersion <a class="d" name="parseProtocolVersion" href="/source/s?defs=parseProtocolVersion">parseProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		int j
		NumberFormatException e
		NumberFormatException e
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		String protoname
		int protolength
		int indexFrom
		int indexTo
		int i
		boolean ok
		int period
		int major
		int blank
		int minor
	protected org.apache.http.ProtocolVersion <a class="d" name="createProtocolVersion" href="/source/s?defs=createProtocolVersion">createProtocolVersion</a> (int, int) 
		int major
		int minor
	public boolean <a class="d" name="hasProtocolVersion" href="/source/s?defs=hasProtocolVersion">hasProtocolVersion</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		int j
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		int index
		String protoname
		int protolength
		boolean ok
	public static final org.apache.http.RequestLine <a class="d" name="parseRequestLine" href="/source/s?defs=parseRequestLine">parseRequestLine</a> (java.lang.String, org.apache.http.message.LineParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.LineParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.RequestLine <a class="d" name="parseRequestLine" href="/source/s?defs=parseRequestLine">parseRequestLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		int i
		int blank
		String method
		String uri
		org.apache.http.ProtocolVersion ver
		IndexOutOfBoundsException e
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		int indexFrom
		int indexTo
	protected org.apache.http.RequestLine <a class="d" name="createRequestLine" href="/source/s?defs=createRequestLine">createRequestLine</a> (java.lang.String, java.lang.String, org.apache.http.ProtocolVersion) 
		String method
		String uri
		org.apache.http.ProtocolVersion ver
	public static final org.apache.http.StatusLine <a class="d" name="parseStatusLine" href="/source/s?defs=parseStatusLine">parseStatusLine</a> (java.lang.String, org.apache.http.message.LineParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.LineParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public org.apache.http.StatusLine <a class="d" name="parseStatusLine" href="/source/s?defs=parseStatusLine">parseStatusLine</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		int j
		NumberFormatException e
		org.apache.http.ProtocolVersion ver
		int i
		int blank
		int statusCode
		String s
		String reasonPhrase
		IndexOutOfBoundsException e
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		int indexFrom
		int indexTo
	protected org.apache.http.StatusLine <a class="d" name="createStatusLine" href="/source/s?defs=createStatusLine">createStatusLine</a> (org.apache.http.ProtocolVersion, int, java.lang.String) 
		org.apache.http.ProtocolVersion ver
		int status
		String reason
	public static final org.apache.http.Header <a class="d" name="parseHeader" href="/source/s?defs=parseHeader">parseHeader</a> (java.lang.String, org.apache.http.message.LineParser)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		String value
		org.apache.http.message.LineParser parser
		org.apache.http.util.CharArrayBuffer buffer
	public org.apache.http.Header <a class="d" name="parseHeader" href="/source/s?defs=parseHeader">parseHeader</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.util.CharArrayBuffer buffer
	protected void <a class="d" name="skipWhitespace" href="/source/s?defs=skipWhitespace">skipWhitespace</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		int pos
		int indexTo
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/message/BasicHeaderIterator.class</b><pre><a href="/source/s?path=BasicHeaderIterator.java">BasicHeaderIterator.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeaderIterator" href="/source/s?defs=org.apache.http.message.BasicHeaderIterator">org.apache.http.message.BasicHeaderIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HeaderIterator">org.apache.http.HeaderIterator</a>  {
	protected final org.apache.http.Header[] <a class="d" name="allHeaders" href="/source/s?defs=allHeaders">allHeaders</a>
	protected int <a class="d" name="currentIndex" href="/source/s?defs=currentIndex">currentIndex</a>
	protected String <a class="d" name="headerName" href="/source/s?defs=headerName">headerName</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.Header[], java.lang.String) 
		org.apache.http.Header[] headers
		String name
	protected int <a class="d" name="findNext" href="/source/s?defs=findNext">findNext</a> (int) 
		int from
		int to
		boolean found
	protected boolean <a class="d" name="filterHeader" href="/source/s?defs=filterHeader">filterHeader</a> (int) 
		int index
	public boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public org.apache.http.Header <a class="d" name="nextHeader" href="/source/s?defs=nextHeader">nextHeader</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
		int current
	public final java.lang.Object <a class="d" name="next" href="/source/s?defs=next">next</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
	public void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
}
</pre><br/><b>org/apache/http/message/BasicNameValuePair.class</b><pre><a href="/source/s?path=BasicNameValuePair.java">BasicNameValuePair.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicNameValuePair" href="/source/s?defs=org.apache.http.message.BasicNameValuePair">org.apache.http.message.BasicNameValuePair</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.NameValuePair">org.apache.http.NameValuePair</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final String <a class="d" name="value" href="/source/s?defs=value">value</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		int len
		org.apache.http.util.CharArrayBuffer buffer
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.message.BasicNameValuePair that
		Object object
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/message/BasicHeaderElementIterator.class</b><pre><a href="/source/s?path=BasicHeaderElementIterator.java">BasicHeaderElementIterator.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.BasicHeaderElementIterator" href="/source/s?defs=org.apache.http.message.BasicHeaderElementIterator">org.apache.http.message.BasicHeaderElementIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HeaderElementIterator">org.apache.http.HeaderElementIterator</a>  {
	private final org.apache.http.HeaderIterator <a class="d" name="headerIt" href="/source/s?defs=headerIt">headerIt</a>
	private final org.apache.http.message.HeaderValueParser <a class="d" name="parser" href="/source/s?defs=parser">parser</a>
	private org.apache.http.HeaderElement <a class="d" name="currentElement" href="/source/s?defs=currentElement">currentElement</a>
	private org.apache.http.util.CharArrayBuffer <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private org.apache.http.message.ParserCursor <a class="d" name="cursor" href="/source/s?defs=cursor">cursor</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HeaderIterator, org.apache.http.message.HeaderValueParser) 
		org.apache.http.HeaderIterator headerIterator
		org.apache.http.message.HeaderValueParser parser
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HeaderIterator) 
		org.apache.http.HeaderIterator headerIterator
	private void <a class="d" name="bufferHeaderValue" href="/source/s?defs=bufferHeaderValue">bufferHeaderValue</a> () 
		String value
		org.apache.http.Header h
	private void <a class="d" name="parseNextElement" href="/source/s?defs=parseNextElement">parseNextElement</a> () 
		org.apache.http.HeaderElement e
	public boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public org.apache.http.HeaderElement <a class="d" name="nextElement" href="/source/s?defs=nextElement">nextElement</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
		org.apache.http.HeaderElement element
	public final java.lang.Object <a class="d" name="next" href="/source/s?defs=next">next</a> ()  throws <a href="/source/s?defs=java.util.NoSuchElementException">java.util.NoSuchElementException</a> 
	public void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
}
</pre><br/><b>org/apache/http/message/ParserCursor.class</b><pre><a href="/source/s?path=ParserCursor.java">ParserCursor.java</a>
package <a href="/source/s?defs=org.apache.http.message">org.apache.http.message</a>
public <a class="d" name="org.apache.http.message.ParserCursor" href="/source/s?defs=org.apache.http.message.ParserCursor">org.apache.http.message.ParserCursor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final int <a class="d" name="lowerBound" href="/source/s?defs=lowerBound">lowerBound</a>
	private final int <a class="d" name="upperBound" href="/source/s?defs=upperBound">upperBound</a>
	private int <a class="d" name="pos" href="/source/s?defs=pos">pos</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int, int) 
		int lowerBound
		int upperBound
	public int <a class="d" name="getLowerBound" href="/source/s?defs=getLowerBound">getLowerBound</a> () 
	public int <a class="d" name="getUpperBound" href="/source/s?defs=getUpperBound">getUpperBound</a> () 
	public int <a class="d" name="getPos" href="/source/s?defs=getPos">getPos</a> () 
	public void <a class="d" name="updatePos" href="/source/s?defs=updatePos">updatePos</a> (int) 
		int pos
	public boolean <a class="d" name="atEnd" href="/source/s?defs=atEnd">atEnd</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		org.apache.http.util.CharArrayBuffer buffer
}
</pre><br/><b>org/apache/http/HttpConnectionMetrics.class</b><pre><a href="/source/s?path=HttpConnectionMetrics.java">HttpConnectionMetrics.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpConnectionMetrics" href="/source/s?defs=org.apache.http.HttpConnectionMetrics">org.apache.http.HttpConnectionMetrics</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract long <a class="d" name="getRequestCount" href="/source/s?defs=getRequestCount">getRequestCount</a> () 
	public abstract long <a class="d" name="getResponseCount" href="/source/s?defs=getResponseCount">getResponseCount</a> () 
	public abstract long <a class="d" name="getSentBytesCount" href="/source/s?defs=getSentBytesCount">getSentBytesCount</a> () 
	public abstract long <a class="d" name="getReceivedBytesCount" href="/source/s?defs=getReceivedBytesCount">getReceivedBytesCount</a> () 
	public abstract java.lang.Object <a class="d" name="getMetric" href="/source/s?defs=getMetric">getMetric</a> (java.lang.String) 
	public abstract void <a class="d" name="reset" href="/source/s?defs=reset">reset</a> () 
}
</pre><br/><b>org/apache/http/MalformedChunkCodingException.class</b><pre><a href="/source/s?path=MalformedChunkCodingException.java">MalformedChunkCodingException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.MalformedChunkCodingException" href="/source/s?defs=org.apache.http.MalformedChunkCodingException">org.apache.http.MalformedChunkCodingException</a> extends <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/HttpRequestInterceptor.class</b><pre><a href="/source/s?path=HttpRequestInterceptor.java">HttpRequestInterceptor.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpRequestInterceptor" href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/HttpClientConnection.class</b><pre><a href="/source/s?path=HttpClientConnection.java">HttpClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpClientConnection" href="/source/s?defs=org.apache.http.HttpClientConnection">org.apache.http.HttpClientConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpConnection">org.apache.http.HttpConnection</a>  {
	public abstract boolean <a class="d" name="isResponseAvailable" href="/source/s?defs=isResponseAvailable">isResponseAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="sendRequestHeader" href="/source/s?defs=sendRequestHeader">sendRequestHeader</a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="sendRequestEntity" href="/source/s?defs=sendRequestEntity">sendRequestEntity</a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract org.apache.http.HttpResponse <a class="d" name="receiveResponseHeader" href="/source/s?defs=receiveResponseHeader">receiveResponseHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="receiveResponseEntity" href="/source/s?defs=receiveResponseEntity">receiveResponseEntity</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/Header.class</b><pre><a href="/source/s?path=Header.java">Header.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.Header" href="/source/s?defs=org.apache.http.Header">org.apache.http.Header</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public abstract java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public abstract org.apache.http.HeaderElement[] <a class="d" name="getElements" href="/source/s?defs=getElements">getElements</a> ()  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
}
</pre><br/><b>org/apache/http/impl/EnglishReasonPhraseCatalog.class</b><pre><a href="/source/s?path=EnglishReasonPhraseCatalog.java">EnglishReasonPhraseCatalog.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.EnglishReasonPhraseCatalog" href="/source/s?defs=org.apache.http.impl.EnglishReasonPhraseCatalog">org.apache.http.impl.EnglishReasonPhraseCatalog</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.ReasonPhraseCatalog">org.apache.http.ReasonPhraseCatalog</a>  {
	public static final org.apache.http.impl.EnglishReasonPhraseCatalog <a class="d" name="INSTANCE" href="/source/s?defs=INSTANCE">INSTANCE</a>
	private static final String[][] <a class="d" name="REASON_PHRASES" href="/source/s?defs=REASON_PHRASES">REASON_PHRASES</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.lang.String <a class="d" name="getReason" href="/source/s?defs=getReason">getReason</a> (int, java.util.Locale) 
		int status
		java.util.Locale loc
		int category
		int subcode
		String reason
	private static void <a class="d" name="setReason" href="/source/s?defs=setReason">setReason</a> (int, java.lang.String) 
		int status
		String reason
		int category
		int subcode
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/entity/EntitySerializer.class</b><pre><a href="/source/s?path=EntitySerializer.java">EntitySerializer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.entity">org.apache.http.impl.entity</a>
public <a class="d" name="org.apache.http.impl.entity.EntitySerializer" href="/source/s?defs=org.apache.http.impl.entity.EntitySerializer">org.apache.http.impl.entity.EntitySerializer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final org.apache.http.entity.ContentLengthStrategy <a class="d" name="lenStrategy" href="/source/s?defs=lenStrategy">lenStrategy</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.entity.ContentLengthStrategy) 
		org.apache.http.entity.ContentLengthStrategy lenStrategy
	protected java.io.OutputStream <a class="d" name="doSerialize" href="/source/s?defs=doSerialize">doSerialize</a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionOutputBuffer outbuffer
		org.apache.http.HttpMessage message
		long len
	public void <a class="d" name="serialize" href="/source/s?defs=serialize">serialize</a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.HttpMessage, org.apache.http.HttpEntity)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionOutputBuffer outbuffer
		org.apache.http.HttpMessage message
		org.apache.http.HttpEntity entity
		java.io.OutputStream outstream
}
</pre><br/><b>org/apache/http/impl/entity/EntityDeserializer.class</b><pre><a href="/source/s?path=EntityDeserializer.java">EntityDeserializer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.entity">org.apache.http.impl.entity</a>
public <a class="d" name="org.apache.http.impl.entity.EntityDeserializer" href="/source/s?defs=org.apache.http.impl.entity.EntityDeserializer">org.apache.http.impl.entity.EntityDeserializer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final org.apache.http.entity.ContentLengthStrategy <a class="d" name="lenStrategy" href="/source/s?defs=lenStrategy">lenStrategy</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.entity.ContentLengthStrategy) 
		org.apache.http.entity.ContentLengthStrategy lenStrategy
	protected org.apache.http.entity.BasicHttpEntity <a class="d" name="doDeserialize" href="/source/s?defs=doDeserialize">doDeserialize</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionInputBuffer inbuffer
		org.apache.http.HttpMessage message
		org.apache.http.entity.BasicHttpEntity entity
		long len
		org.apache.http.Header contentTypeHeader
		org.apache.http.Header contentEncodingHeader
	public org.apache.http.HttpEntity <a class="d" name="deserialize" href="/source/s?defs=deserialize">deserialize</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionInputBuffer inbuffer
		org.apache.http.HttpMessage message
}
</pre><br/><b>org/apache/http/impl/entity/LaxContentLengthStrategy.class</b><pre><a href="/source/s?path=LaxContentLengthStrategy.java">LaxContentLengthStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl.entity">org.apache.http.impl.entity</a>
public <a class="d" name="org.apache.http.impl.entity.LaxContentLengthStrategy" href="/source/s?defs=org.apache.http.impl.entity.LaxContentLengthStrategy">org.apache.http.impl.entity.LaxContentLengthStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.entity.ContentLengthStrategy">org.apache.http.entity.ContentLengthStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="determineLength" href="/source/s?defs=determineLength">determineLength</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.ParseException px
		String encoding
		int i
		org.apache.http.HeaderElement[] encodings
		int len
		NumberFormatException e
		org.apache.http.Header header
		int i
		long contentlen
		org.apache.http.Header[] headers
		org.apache.http.HttpMessage message
		org.apache.http.params.HttpParams params
		boolean strict
		org.apache.http.Header transferEncodingHeader
		org.apache.http.Header contentLengthHeader
}
</pre><br/><b>org/apache/http/impl/entity/StrictContentLengthStrategy.class</b><pre><a href="/source/s?path=StrictContentLengthStrategy.java">StrictContentLengthStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl.entity">org.apache.http.impl.entity</a>
public <a class="d" name="org.apache.http.impl.entity.StrictContentLengthStrategy" href="/source/s?defs=org.apache.http.impl.entity.StrictContentLengthStrategy">org.apache.http.impl.entity.StrictContentLengthStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.entity.ContentLengthStrategy">org.apache.http.entity.ContentLengthStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="determineLength" href="/source/s?defs=determineLength">determineLength</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		String s
		long len
		NumberFormatException e
		String s
		org.apache.http.HttpMessage message
		org.apache.http.Header transferEncodingHeader
		org.apache.http.Header contentLengthHeader
}
</pre><br/><b>org/apache/http/impl/SocketHttpClientConnection.class</b><pre><a href="/source/s?path=SocketHttpClientConnection.java">SocketHttpClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.SocketHttpClientConnection" href="/source/s?defs=org.apache.http.impl.SocketHttpClientConnection">org.apache.http.impl.SocketHttpClientConnection</a> extends <a href="/source/s?defs=org.apache.http.impl.AbstractHttpClientConnection">org.apache.http.impl.AbstractHttpClientConnection</a> implements <a href="/source/s?defs=org.apache.http.HttpInetConnection">org.apache.http.HttpInetConnection</a>  {
	private volatile boolean <a class="d" name="open" href="/source/s?defs=open">open</a>
	private volatile java.net.Socket <a class="d" name="socket" href="/source/s?defs=socket">socket</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="assertNotOpen" href="/source/s?defs=assertNotOpen">assertNotOpen</a> () 
	protected void <a class="d" name="assertOpen" href="/source/s?defs=assertOpen">assertOpen</a> () 
	protected org.apache.http.io.SessionInputBuffer <a class="d" name="createSessionInputBuffer" href="/source/s?defs=createSessionInputBuffer">createSessionInputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.SessionOutputBuffer <a class="d" name="createSessionOutputBuffer" href="/source/s?defs=createSessionOutputBuffer">createSessionOutputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected void <a class="d" name="bind" href="/source/s?defs=bind">bind</a> (java.net.Socket, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		org.apache.http.params.HttpParams params
		int buffersize
	public boolean <a class="d" name="isOpen" href="/source/s?defs=isOpen">isOpen</a> () 
	protected java.net.Socket <a class="d" name="getSocket" href="/source/s?defs=getSocket">getSocket</a> () 
	public java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public int <a class="d" name="getLocalPort" href="/source/s?defs=getLocalPort">getLocalPort</a> () 
	public java.net.InetAddress <a class="d" name="getRemoteAddress" href="/source/s?defs=getRemoteAddress">getRemoteAddress</a> () 
	public int <a class="d" name="getRemotePort" href="/source/s?defs=getRemotePort">getRemotePort</a> () 
	public void <a class="d" name="setSocketTimeout" href="/source/s?defs=setSocketTimeout">setSocketTimeout</a> (int) 
		java.net.SocketException ignore
		int timeout
	public int <a class="d" name="getSocketTimeout" href="/source/s?defs=getSocketTimeout">getSocketTimeout</a> () 
		java.net.SocketException ignore
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket tmpsocket
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ignore
		java.io.IOException ignore
		UnsupportedOperationException ignore
		java.net.Socket sock
}
</pre><br/><b>org/apache/http/impl/DefaultHttpServerConnection.class</b><pre><a href="/source/s?path=DefaultHttpServerConnection.java">DefaultHttpServerConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.DefaultHttpServerConnection" href="/source/s?defs=org.apache.http.impl.DefaultHttpServerConnection">org.apache.http.impl.DefaultHttpServerConnection</a> extends <a href="/source/s?defs=org.apache.http.impl.SocketHttpServerConnection">org.apache.http.impl.SocketHttpServerConnection</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="bind" href="/source/s?defs=bind">bind</a> (java.net.Socket, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		org.apache.http.params.HttpParams params
		int linger
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuffer buffer
}
</pre><br/><b>org/apache/http/impl/AbstractHttpServerConnection.class</b><pre><a href="/source/s?path=AbstractHttpServerConnection.java">AbstractHttpServerConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public abstract <a class="d" name="org.apache.http.impl.AbstractHttpServerConnection" href="/source/s?defs=org.apache.http.impl.AbstractHttpServerConnection">org.apache.http.impl.AbstractHttpServerConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpServerConnection">org.apache.http.HttpServerConnection</a>  {
	private final org.apache.http.impl.entity.EntitySerializer <a class="d" name="entityserializer" href="/source/s?defs=entityserializer">entityserializer</a>
	private final org.apache.http.impl.entity.EntityDeserializer <a class="d" name="entitydeserializer" href="/source/s?defs=entitydeserializer">entitydeserializer</a>
	private org.apache.http.io.SessionInputBuffer <a class="d" name="inbuffer" href="/source/s?defs=inbuffer">inbuffer</a>
	private org.apache.http.io.SessionOutputBuffer <a class="d" name="outbuffer" href="/source/s?defs=outbuffer">outbuffer</a>
	private org.apache.http.io.EofSensor <a class="d" name="eofSensor" href="/source/s?defs=eofSensor">eofSensor</a>
	private org.apache.http.io.HttpMessageParser <a class="d" name="requestParser" href="/source/s?defs=requestParser">requestParser</a>
	private org.apache.http.io.HttpMessageWriter <a class="d" name="responseWriter" href="/source/s?defs=responseWriter">responseWriter</a>
	private org.apache.http.impl.HttpConnectionMetricsImpl <a class="d" name="metrics" href="/source/s?defs=metrics">metrics</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected abstract void <a class="d" name="assertOpen" href="/source/s?defs=assertOpen">assertOpen</a> ()  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	protected org.apache.http.impl.entity.EntityDeserializer <a class="d" name="createEntityDeserializer" href="/source/s?defs=createEntityDeserializer">createEntityDeserializer</a> () 
	protected org.apache.http.impl.entity.EntitySerializer <a class="d" name="createEntitySerializer" href="/source/s?defs=createEntitySerializer">createEntitySerializer</a> () 
	protected org.apache.http.HttpRequestFactory <a class="d" name="createHttpRequestFactory" href="/source/s?defs=createHttpRequestFactory">createHttpRequestFactory</a> () 
	protected org.apache.http.io.HttpMessageParser <a class="d" name="createRequestParser" href="/source/s?defs=createRequestParser">createRequestParser</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.HttpRequestFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.HttpRequestFactory requestFactory
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.HttpMessageWriter <a class="d" name="createResponseWriter" href="/source/s?defs=createResponseWriter">createResponseWriter</a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionOutputBuffer buffer
		org.apache.http.params.HttpParams params
	protected org.apache.http.impl.HttpConnectionMetricsImpl <a class="d" name="createConnectionMetrics" href="/source/s?defs=createConnectionMetrics">createConnectionMetrics</a> (org.apache.http.io.HttpTransportMetrics, org.apache.http.io.HttpTransportMetrics) 
		org.apache.http.io.HttpTransportMetrics inTransportMetric
		org.apache.http.io.HttpTransportMetrics outTransportMetric
	protected void <a class="d" name="init" href="/source/s?defs=init">init</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer inbuffer
		org.apache.http.io.SessionOutputBuffer outbuffer
		org.apache.http.params.HttpParams params
	public org.apache.http.HttpRequest <a class="d" name="receiveRequestHeader" href="/source/s?defs=receiveRequestHeader">receiveRequestHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
	public void <a class="d" name="receiveRequestEntity" href="/source/s?defs=receiveRequestEntity">receiveRequestEntity</a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpEntityEnclosingRequest request
		org.apache.http.HttpEntity entity
	protected void <a class="d" name="doFlush" href="/source/s?defs=doFlush">doFlush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="sendResponseHeader" href="/source/s?defs=sendResponseHeader">sendResponseHeader</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
	public void <a class="d" name="sendResponseEntity" href="/source/s?defs=sendResponseEntity">sendResponseEntity</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
	protected boolean <a class="d" name="isEof" href="/source/s?defs=isEof">isEof</a> () 
	public boolean <a class="d" name="isStale" href="/source/s?defs=isStale">isStale</a> () 
		java.io.IOException ex
	public org.apache.http.HttpConnectionMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/impl/DefaultConnectionReuseStrategy.class</b><pre><a href="/source/s?path=DefaultConnectionReuseStrategy.java">DefaultConnectionReuseStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.DefaultConnectionReuseStrategy" href="/source/s?defs=org.apache.http.impl.DefaultConnectionReuseStrategy">org.apache.http.impl.DefaultConnectionReuseStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.ConnectionReuseStrategy">org.apache.http.ConnectionReuseStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="keepAlive" href="/source/s?defs=keepAlive">keepAlive</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		String token
		org.apache.http.TokenIterator ti
		boolean keepalive
		org.apache.http.ParseException px
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpConnection conn
		org.apache.http.HttpEntity entity
		org.apache.http.ProtocolVersion ver
		org.apache.http.HeaderIterator hit
	protected org.apache.http.TokenIterator <a class="d" name="createTokenIterator" href="/source/s?defs=createTokenIterator">createTokenIterator</a> (org.apache.http.HeaderIterator) 
		org.apache.http.HeaderIterator hit
}
</pre><br/><b>org/apache/http/impl/DefaultHttpResponseFactory.class</b><pre><a href="/source/s?path=DefaultHttpResponseFactory.java">DefaultHttpResponseFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.DefaultHttpResponseFactory" href="/source/s?defs=org.apache.http.impl.DefaultHttpResponseFactory">org.apache.http.impl.DefaultHttpResponseFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseFactory">org.apache.http.HttpResponseFactory</a>  {
	protected final org.apache.http.ReasonPhraseCatalog <a class="d" name="reasonCatalog" href="/source/s?defs=reasonCatalog">reasonCatalog</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.ReasonPhraseCatalog) 
		org.apache.http.ReasonPhraseCatalog catalog
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.HttpResponse <a class="d" name="newHttpResponse" href="/source/s?defs=newHttpResponse">newHttpResponse</a> (org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext) 
		org.apache.http.ProtocolVersion ver
		int status
		org.apache.http.protocol.HttpContext context
		java.util.Locale loc
		String reason
		org.apache.http.StatusLine statusline
	public org.apache.http.HttpResponse <a class="d" name="newHttpResponse" href="/source/s?defs=newHttpResponse">newHttpResponse</a> (org.apache.http.StatusLine, org.apache.http.protocol.HttpContext) 
		org.apache.http.StatusLine statusline
		org.apache.http.protocol.HttpContext context
		java.util.Locale loc
	protected java.util.Locale <a class="d" name="determineLocale" href="/source/s?defs=determineLocale">determineLocale</a> (org.apache.http.protocol.HttpContext) 
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/impl/DefaultHttpClientConnection.class</b><pre><a href="/source/s?path=DefaultHttpClientConnection.java">DefaultHttpClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.DefaultHttpClientConnection" href="/source/s?defs=org.apache.http.impl.DefaultHttpClientConnection">org.apache.http.impl.DefaultHttpClientConnection</a> extends <a href="/source/s?defs=org.apache.http.impl.SocketHttpClientConnection">org.apache.http.impl.SocketHttpClientConnection</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="bind" href="/source/s?defs=bind">bind</a> (java.net.Socket, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		org.apache.http.params.HttpParams params
		int linger
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuffer buffer
}
</pre><br/><b>org/apache/http/impl/io/AbstractMessageWriter.class</b><pre><a href="/source/s?path=AbstractMessageWriter.java">AbstractMessageWriter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public abstract <a class="d" name="org.apache.http.impl.io.AbstractMessageWriter" href="/source/s?defs=org.apache.http.impl.io.AbstractMessageWriter">org.apache.http.impl.io.AbstractMessageWriter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.HttpMessageWriter">org.apache.http.io.HttpMessageWriter</a>  {
	protected final org.apache.http.io.SessionOutputBuffer <a class="d" name="sessionBuffer" href="/source/s?defs=sessionBuffer">sessionBuffer</a>
	protected final org.apache.http.util.CharArrayBuffer <a class="d" name="lineBuf" href="/source/s?defs=lineBuf">lineBuf</a>
	protected final org.apache.http.message.LineFormatter <a class="d" name="lineFormatter" href="/source/s?defs=lineFormatter">lineFormatter</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.message.LineFormatter, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionOutputBuffer buffer
		org.apache.http.message.LineFormatter formatter
		org.apache.http.params.HttpParams params
	protected abstract void <a class="d" name="writeHeadLine" href="/source/s?defs=writeHeadLine">writeHeadLine</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.Header header
		java.util.Iterator it
		org.apache.http.HttpMessage message
}
</pre><br/><b>org/apache/http/impl/io/HttpTransportMetricsImpl.class</b><pre><a href="/source/s?path=HttpTransportMetricsImpl.java">HttpTransportMetricsImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.HttpTransportMetricsImpl" href="/source/s?defs=org.apache.http.impl.io.HttpTransportMetricsImpl">org.apache.http.impl.io.HttpTransportMetricsImpl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.HttpTransportMetrics">org.apache.http.io.HttpTransportMetrics</a>  {
	private long <a class="d" name="bytesTransferred" href="/source/s?defs=bytesTransferred">bytesTransferred</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="getBytesTransferred" href="/source/s?defs=getBytesTransferred">getBytesTransferred</a> () 
	public void <a class="d" name="setBytesTransferred" href="/source/s?defs=setBytesTransferred">setBytesTransferred</a> (long) 
		long count
	public void <a class="d" name="incrementBytesTransferred" href="/source/s?defs=incrementBytesTransferred">incrementBytesTransferred</a> (long) 
		long count
	public void <a class="d" name="reset" href="/source/s?defs=reset">reset</a> () 
}
</pre><br/><b>org/apache/http/impl/io/SocketOutputBuffer.class</b><pre><a href="/source/s?path=SocketOutputBuffer.java">SocketOutputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.SocketOutputBuffer" href="/source/s?defs=org.apache.http.impl.io.SocketOutputBuffer">org.apache.http.impl.io.SocketOutputBuffer</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractSessionOutputBuffer">org.apache.http.impl.io.AbstractSessionOutputBuffer</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/io/HttpResponseWriter.class</b><pre><a href="/source/s?path=HttpResponseWriter.java">HttpResponseWriter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.HttpResponseWriter" href="/source/s?defs=org.apache.http.impl.io.HttpResponseWriter">org.apache.http.impl.io.HttpResponseWriter</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractMessageWriter">org.apache.http.impl.io.AbstractMessageWriter</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.message.LineFormatter, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionOutputBuffer buffer
		org.apache.http.message.LineFormatter formatter
		org.apache.http.params.HttpParams params
	protected void <a class="d" name="writeHeadLine" href="/source/s?defs=writeHeadLine">writeHeadLine</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpMessage message
}
</pre><br/><b>org/apache/http/impl/io/AbstractMessageParser.class</b><pre><a href="/source/s?path=AbstractMessageParser.java">AbstractMessageParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public abstract <a class="d" name="org.apache.http.impl.io.AbstractMessageParser" href="/source/s?defs=org.apache.http.impl.io.AbstractMessageParser">org.apache.http.impl.io.AbstractMessageParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.HttpMessageParser">org.apache.http.io.HttpMessageParser</a>  {
	private static final int <a class="d" name="HEAD_LINE" href="/source/s?defs=HEAD_LINE">HEAD_LINE</a>
	private static final int <a class="d" name="HEADERS" href="/source/s?defs=HEADERS">HEADERS</a>
	private final org.apache.http.io.SessionInputBuffer <a class="d" name="sessionBuffer" href="/source/s?defs=sessionBuffer">sessionBuffer</a>
	private final int <a class="d" name="maxHeaderCount" href="/source/s?defs=maxHeaderCount">maxHeaderCount</a>
	private final int <a class="d" name="maxLineLen" href="/source/s?defs=maxLineLen">maxLineLen</a>
	private final java.util.List <a class="d" name="headerLines" href="/source/s?defs=headerLines">headerLines</a>
	protected final org.apache.http.message.LineParser <a class="d" name="lineParser" href="/source/s?defs=lineParser">lineParser</a>
	private int <a class="d" name="state" href="/source/s?defs=state">state</a>
	private org.apache.http.HttpMessage <a class="d" name="message" href="/source/s?defs=message">message</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.message.LineParser parser
		org.apache.http.params.HttpParams params
	public static org.apache.http.Header[] <a class="d" name="parseHeaders" href="/source/s?defs=parseHeaders">parseHeaders</a> (org.apache.http.io.SessionInputBuffer, int, int, org.apache.http.message.LineParser)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionInputBuffer inbuffer
		int maxHeaderCount
		int maxLineLen
		org.apache.http.message.LineParser parser
		java.util.List headerLines
	public static org.apache.http.Header[] <a class="d" name="parseHeaders" href="/source/s?defs=parseHeaders">parseHeaders</a> (org.apache.http.io.SessionInputBuffer, int, int, org.apache.http.message.LineParser, java.util.List)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		char ch
		int i
		int l
		org.apache.http.ParseException ex
		org.apache.http.util.CharArrayBuffer buffer
		int i
		org.apache.http.io.SessionInputBuffer inbuffer
		int maxHeaderCount
		int maxLineLen
		org.apache.http.message.LineParser parser
		java.util.List headerLines
		org.apache.http.util.CharArrayBuffer current
		org.apache.http.util.CharArrayBuffer previous
		org.apache.http.Header[] headers
	protected abstract org.apache.http.HttpMessage <a class="d" name="parseHead" href="/source/s?defs=parseHead">parseHead</a> (org.apache.http.io.SessionInputBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
	public org.apache.http.HttpMessage <a class="d" name="parse" href="/source/s?defs=parse">parse</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.ParseException px
		org.apache.http.Header[] headers
		org.apache.http.HttpMessage result
		int st
}
</pre><br/><b>org/apache/http/impl/io/SocketInputBuffer.class</b><pre><a href="/source/s?path=SocketInputBuffer.java">SocketInputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.SocketInputBuffer" href="/source/s?defs=org.apache.http.impl.io.SocketInputBuffer">org.apache.http.impl.io.SocketInputBuffer</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractSessionInputBuffer">org.apache.http.impl.io.AbstractSessionInputBuffer</a> implements <a href="/source/s?defs=org.apache.http.io.EofSensor">org.apache.http.io.EofSensor</a>  {
	private static final Class <a class="d" name="SOCKET_TIMEOUT_CLASS" href="/source/s?defs=SOCKET_TIMEOUT_CLASS">SOCKET_TIMEOUT_CLASS</a>
	private final java.net.Socket <a class="d" name="socket" href="/source/s?defs=socket">socket</a>
	private boolean <a class="d" name="eof" href="/source/s?defs=eof">eof</a>
	private static java.lang.Class <a class="d" name="SocketTimeoutExceptionClass" href="/source/s?defs=SocketTimeoutExceptionClass">SocketTimeoutExceptionClass</a> () 
		ClassNotFoundException e
	private static boolean <a class="d" name="isSocketTimeoutException" href="/source/s?defs=isSocketTimeoutException">isSocketTimeoutException</a> (java.io.InterruptedIOException) 
		java.io.InterruptedIOException e
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected int <a class="d" name="fillBuffer" href="/source/s?defs=fillBuffer">fillBuffer</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int i
	public boolean <a class="d" name="isDataAvailable" href="/source/s?defs=isDataAvailable">isDataAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InterruptedIOException e
		int oldtimeout
		int timeout
		boolean result
	public boolean <a class="d" name="isEof" href="/source/s?defs=isEof">isEof</a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/io/AbstractSessionOutputBuffer.class</b><pre><a href="/source/s?path=AbstractSessionOutputBuffer.java">AbstractSessionOutputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public abstract <a class="d" name="org.apache.http.impl.io.AbstractSessionOutputBuffer" href="/source/s?defs=org.apache.http.impl.io.AbstractSessionOutputBuffer">org.apache.http.impl.io.AbstractSessionOutputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.SessionOutputBuffer">org.apache.http.io.SessionOutputBuffer</a> <a href="/source/s?defs=org.apache.http.io.BufferInfo">org.apache.http.io.BufferInfo</a>  {
	private static final byte[] <a class="d" name="CRLF" href="/source/s?defs=CRLF">CRLF</a>
	private java.io.OutputStream <a class="d" name="outstream" href="/source/s?defs=outstream">outstream</a>
	private org.apache.http.util.ByteArrayBuffer <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private String <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	private boolean <a class="d" name="ascii" href="/source/s?defs=ascii">ascii</a>
	private int <a class="d" name="minChunkLimit" href="/source/s?defs=minChunkLimit">minChunkLimit</a>
	private org.apache.http.impl.io.HttpTransportMetricsImpl <a class="d" name="metrics" href="/source/s?defs=metrics">metrics</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="init" href="/source/s?defs=init">init</a> (java.io.OutputStream, int, org.apache.http.params.HttpParams) 
		java.io.OutputStream outstream
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.impl.io.HttpTransportMetricsImpl <a class="d" name="createTransportMetrics" href="/source/s?defs=createTransportMetrics">createTransportMetrics</a> () 
	public int <a class="d" name="capacity" href="/source/s?defs=capacity">capacity</a> () 
	public int <a class="d" name="length" href="/source/s?defs=length">length</a> () 
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> () 
	protected void <a class="d" name="flushBuffer" href="/source/s?defs=flushBuffer">flushBuffer</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int len
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int freecapacity
		byte[] b
		int off
		int len
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
	public void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int chunk
		int off
		int remaining
		byte[] tmp
		org.apache.http.util.CharArrayBuffer s
	public org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/io/HttpResponseParser.class</b><pre><a href="/source/s?path=HttpResponseParser.java">HttpResponseParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.HttpResponseParser" href="/source/s?defs=org.apache.http.impl.io.HttpResponseParser">org.apache.http.impl.io.HttpResponseParser</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractMessageParser">org.apache.http.impl.io.AbstractMessageParser</a> {
	private final org.apache.http.HttpResponseFactory <a class="d" name="responseFactory" href="/source/s?defs=responseFactory">responseFactory</a>
	private final org.apache.http.util.CharArrayBuffer <a class="d" name="lineBuf" href="/source/s?defs=lineBuf">lineBuf</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.message.LineParser parser
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.params.HttpParams params
	protected org.apache.http.HttpMessage <a class="d" name="parseHead" href="/source/s?defs=parseHead">parseHead</a> (org.apache.http.io.SessionInputBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.io.SessionInputBuffer sessionBuffer
		int i
		org.apache.http.message.ParserCursor cursor
		org.apache.http.StatusLine statusline
}
</pre><br/><b>org/apache/http/impl/io/IdentityOutputStream.class</b><pre><a href="/source/s?path=IdentityOutputStream.java">IdentityOutputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.IdentityOutputStream" href="/source/s?defs=org.apache.http.impl.io.IdentityOutputStream">org.apache.http.impl.io.IdentityOutputStream</a> extends <a href="/source/s?defs=java.io.OutputStream">java.io.OutputStream</a> {
	private final org.apache.http.io.SessionOutputBuffer <a class="d" name="out" href="/source/s?defs=out">out</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer) 
		org.apache.http.io.SessionOutputBuffer out
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
}
</pre><br/><b>org/apache/http/impl/io/ChunkedInputStream.class</b><pre><a href="/source/s?path=ChunkedInputStream.java">ChunkedInputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.ChunkedInputStream" href="/source/s?defs=org.apache.http.impl.io.ChunkedInputStream">org.apache.http.impl.io.ChunkedInputStream</a> extends <a href="/source/s?defs=java.io.InputStream">java.io.InputStream</a> {
	private static final int <a class="d" name="CHUNK_LEN" href="/source/s?defs=CHUNK_LEN">CHUNK_LEN</a>
	private static final int <a class="d" name="CHUNK_DATA" href="/source/s?defs=CHUNK_DATA">CHUNK_DATA</a>
	private static final int <a class="d" name="CHUNK_CRLF" href="/source/s?defs=CHUNK_CRLF">CHUNK_CRLF</a>
	private static final int <a class="d" name="BUFFER_SIZE" href="/source/s?defs=BUFFER_SIZE">BUFFER_SIZE</a>
	private final org.apache.http.io.SessionInputBuffer <a class="d" name="in" href="/source/s?defs=in">in</a>
	private final org.apache.http.util.CharArrayBuffer <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private int <a class="d" name="state" href="/source/s?defs=state">state</a>
	private int <a class="d" name="chunkSize" href="/source/s?defs=chunkSize">chunkSize</a>
	private int <a class="d" name="pos" href="/source/s?defs=pos">pos</a>
	private boolean <a class="d" name="eof" href="/source/s?defs=eof">eof</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	private org.apache.http.Header[] <a class="d" name="footers" href="/source/s?defs=footers">footers</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer) 
		org.apache.http.io.SessionInputBuffer in
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int len
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
		int bytesRead
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	private void <a class="d" name="nextChunk" href="/source/s?defs=nextChunk">nextChunk</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	private int <a class="d" name="getChunkSize" href="/source/s?defs=getChunkSize">getChunkSize</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		NumberFormatException e
		int i
		int separator
		int st
	private void <a class="d" name="parseTrailerHeaders" href="/source/s?defs=parseTrailerHeaders">parseTrailerHeaders</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ioe
		org.apache.http.HttpException e
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] buffer
	public org.apache.http.Header[] <a class="d" name="getFooters" href="/source/s?defs=getFooters">getFooters</a> () 
}
</pre><br/><b>org/apache/http/impl/io/ContentLengthOutputStream.class</b><pre><a href="/source/s?path=ContentLengthOutputStream.java">ContentLengthOutputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.ContentLengthOutputStream" href="/source/s?defs=org.apache.http.impl.io.ContentLengthOutputStream">org.apache.http.impl.io.ContentLengthOutputStream</a> extends <a href="/source/s?defs=java.io.OutputStream">java.io.OutputStream</a> {
	private final org.apache.http.io.SessionOutputBuffer <a class="d" name="out" href="/source/s?defs=out">out</a>
	private final long <a class="d" name="contentLength" href="/source/s?defs=contentLength">contentLength</a>
	private long <a class="d" name="total" href="/source/s?defs=total">total</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, long) 
		org.apache.http.io.SessionOutputBuffer out
		long contentLength
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		long max
		byte[] b
		int off
		int len
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
}
</pre><br/><b>org/apache/http/impl/io/IdentityInputStream.class</b><pre><a href="/source/s?path=IdentityInputStream.java">IdentityInputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.IdentityInputStream" href="/source/s?defs=org.apache.http.impl.io.IdentityInputStream">org.apache.http.impl.io.IdentityInputStream</a> extends <a href="/source/s?defs=java.io.InputStream">java.io.InputStream</a> {
	private final org.apache.http.io.SessionInputBuffer <a class="d" name="in" href="/source/s?defs=in">in</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer) 
		org.apache.http.io.SessionInputBuffer in
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
}
</pre><br/><b>org/apache/http/impl/io/ContentLengthInputStream.class</b><pre><a href="/source/s?path=ContentLengthInputStream.java">ContentLengthInputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.ContentLengthInputStream" href="/source/s?defs=org.apache.http.impl.io.ContentLengthInputStream">org.apache.http.impl.io.ContentLengthInputStream</a> extends <a href="/source/s?defs=java.io.InputStream">java.io.InputStream</a> {
	private static final int <a class="d" name="BUFFER_SIZE" href="/source/s?defs=BUFFER_SIZE">BUFFER_SIZE</a>
	private long <a class="d" name="contentLength" href="/source/s?defs=contentLength">contentLength</a>
	private long <a class="d" name="pos" href="/source/s?defs=pos">pos</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	private org.apache.http.io.SessionInputBuffer <a class="d" name="in" href="/source/s?defs=in">in</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, long) 
		org.apache.http.io.SessionInputBuffer in
		long contentLength
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] buffer
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int len
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
		int count
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public long <a class="d" name="skip" href="/source/s?defs=skip">skip</a> (long)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int l
		long n
		byte[] buffer
		long remaining
		long count
}
</pre><br/><b>org/apache/http/impl/io/HttpRequestWriter.class</b><pre><a href="/source/s?path=HttpRequestWriter.java">HttpRequestWriter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.HttpRequestWriter" href="/source/s?defs=org.apache.http.impl.io.HttpRequestWriter">org.apache.http.impl.io.HttpRequestWriter</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractMessageWriter">org.apache.http.impl.io.AbstractMessageWriter</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.message.LineFormatter, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionOutputBuffer buffer
		org.apache.http.message.LineFormatter formatter
		org.apache.http.params.HttpParams params
	protected void <a class="d" name="writeHeadLine" href="/source/s?defs=writeHeadLine">writeHeadLine</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpMessage message
}
</pre><br/><b>org/apache/http/impl/io/AbstractSessionInputBuffer.class</b><pre><a href="/source/s?path=AbstractSessionInputBuffer.java">AbstractSessionInputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public abstract <a class="d" name="org.apache.http.impl.io.AbstractSessionInputBuffer" href="/source/s?defs=org.apache.http.impl.io.AbstractSessionInputBuffer">org.apache.http.impl.io.AbstractSessionInputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.SessionInputBuffer">org.apache.http.io.SessionInputBuffer</a> <a href="/source/s?defs=org.apache.http.io.BufferInfo">org.apache.http.io.BufferInfo</a>  {
	private java.io.InputStream <a class="d" name="instream" href="/source/s?defs=instream">instream</a>
	private byte[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private int <a class="d" name="bufferpos" href="/source/s?defs=bufferpos">bufferpos</a>
	private int <a class="d" name="bufferlen" href="/source/s?defs=bufferlen">bufferlen</a>
	private org.apache.http.util.ByteArrayBuffer <a class="d" name="linebuffer" href="/source/s?defs=linebuffer">linebuffer</a>
	private String <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	private boolean <a class="d" name="ascii" href="/source/s?defs=ascii">ascii</a>
	private int <a class="d" name="maxLineLen" href="/source/s?defs=maxLineLen">maxLineLen</a>
	private int <a class="d" name="minChunkLimit" href="/source/s?defs=minChunkLimit">minChunkLimit</a>
	private org.apache.http.impl.io.HttpTransportMetricsImpl <a class="d" name="metrics" href="/source/s?defs=metrics">metrics</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="init" href="/source/s?defs=init">init</a> (java.io.InputStream, int, org.apache.http.params.HttpParams) 
		java.io.InputStream instream
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.impl.io.HttpTransportMetricsImpl <a class="d" name="createTransportMetrics" href="/source/s?defs=createTransportMetrics">createTransportMetrics</a> () 
	public int <a class="d" name="capacity" href="/source/s?defs=capacity">capacity</a> () 
	public int <a class="d" name="length" href="/source/s?defs=length">length</a> () 
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> () 
	protected int <a class="d" name="fillBuffer" href="/source/s?defs=fillBuffer">fillBuffer</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int len
		int l
		int off
		int len
	protected boolean <a class="d" name="hasBufferedData" href="/source/s?defs=hasBufferedData">hasBufferedData</a> () 
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int noRead
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int chunk
		int noRead
		int chunk
		byte[] b
		int off
		int len
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	private int <a class="d" name="locateLF" href="/source/s?defs=locateLF">locateLF</a> () 
		int i
	public int <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int len
		int len
		int i
		org.apache.http.util.CharArrayBuffer charbuffer
		int noRead
		boolean retry
	private int <a class="d" name="lineFromLineBuffer" href="/source/s?defs=lineFromLineBuffer">lineFromLineBuffer</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		org.apache.http.util.CharArrayBuffer charbuffer
		int l
	private int <a class="d" name="lineFromReadBuffer" href="/source/s?defs=lineFromReadBuffer">lineFromReadBuffer</a> (org.apache.http.util.CharArrayBuffer, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		org.apache.http.util.CharArrayBuffer charbuffer
		int pos
		int off
		int len
	public java.lang.String <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.util.CharArrayBuffer charbuffer
		int l
	public org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/impl/io/ChunkedOutputStream.class</b><pre><a href="/source/s?path=ChunkedOutputStream.java">ChunkedOutputStream.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.ChunkedOutputStream" href="/source/s?defs=org.apache.http.impl.io.ChunkedOutputStream">org.apache.http.impl.io.ChunkedOutputStream</a> extends <a href="/source/s?defs=java.io.OutputStream">java.io.OutputStream</a> {
	private final org.apache.http.io.SessionOutputBuffer <a class="d" name="out" href="/source/s?defs=out">out</a>
	private byte[] <a class="d" name="cache" href="/source/s?defs=cache">cache</a>
	private int <a class="d" name="cachePosition" href="/source/s?defs=cachePosition">cachePosition</a>
	private boolean <a class="d" name="wroteLastChunk" href="/source/s?defs=wroteLastChunk">wroteLastChunk</a>
	private boolean <a class="d" name="closed" href="/source/s?defs=closed">closed</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionOutputBuffer out
		int bufferSize
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.io.SessionOutputBuffer out
	protected void <a class="d" name="flushCache" href="/source/s?defs=flushCache">flushCache</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	protected void <a class="d" name="flushCacheWithAppend" href="/source/s?defs=flushCacheWithAppend">flushCacheWithAppend</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] bufferToAppend
		int off
		int len
	protected void <a class="d" name="writeClosingChunk" href="/source/s?defs=writeClosingChunk">writeClosingChunk</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="finish" href="/source/s?defs=finish">finish</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] src
		int off
		int len
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/impl/io/HttpRequestParser.class</b><pre><a href="/source/s?path=HttpRequestParser.java">HttpRequestParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.io">org.apache.http.impl.io</a>
public <a class="d" name="org.apache.http.impl.io.HttpRequestParser" href="/source/s?defs=org.apache.http.impl.io.HttpRequestParser">org.apache.http.impl.io.HttpRequestParser</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractMessageParser">org.apache.http.impl.io.AbstractMessageParser</a> {
	private final org.apache.http.HttpRequestFactory <a class="d" name="requestFactory" href="/source/s?defs=requestFactory">requestFactory</a>
	private final org.apache.http.util.CharArrayBuffer <a class="d" name="lineBuf" href="/source/s?defs=lineBuf">lineBuf</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpRequestFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.message.LineParser parser
		org.apache.http.HttpRequestFactory requestFactory
		org.apache.http.params.HttpParams params
	protected org.apache.http.HttpMessage <a class="d" name="parseHead" href="/source/s?defs=parseHead">parseHead</a> (org.apache.http.io.SessionInputBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.io.SessionInputBuffer sessionBuffer
		int i
		org.apache.http.message.ParserCursor cursor
		org.apache.http.RequestLine requestline
}
</pre><br/><b>org/apache/http/impl/AbstractHttpClientConnection.class</b><pre><a href="/source/s?path=AbstractHttpClientConnection.java">AbstractHttpClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public abstract <a class="d" name="org.apache.http.impl.AbstractHttpClientConnection" href="/source/s?defs=org.apache.http.impl.AbstractHttpClientConnection">org.apache.http.impl.AbstractHttpClientConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpClientConnection">org.apache.http.HttpClientConnection</a>  {
	private final org.apache.http.impl.entity.EntitySerializer <a class="d" name="entityserializer" href="/source/s?defs=entityserializer">entityserializer</a>
	private final org.apache.http.impl.entity.EntityDeserializer <a class="d" name="entitydeserializer" href="/source/s?defs=entitydeserializer">entitydeserializer</a>
	private org.apache.http.io.SessionInputBuffer <a class="d" name="inbuffer" href="/source/s?defs=inbuffer">inbuffer</a>
	private org.apache.http.io.SessionOutputBuffer <a class="d" name="outbuffer" href="/source/s?defs=outbuffer">outbuffer</a>
	private org.apache.http.io.EofSensor <a class="d" name="eofSensor" href="/source/s?defs=eofSensor">eofSensor</a>
	private org.apache.http.io.HttpMessageParser <a class="d" name="responseParser" href="/source/s?defs=responseParser">responseParser</a>
	private org.apache.http.io.HttpMessageWriter <a class="d" name="requestWriter" href="/source/s?defs=requestWriter">requestWriter</a>
	private org.apache.http.impl.HttpConnectionMetricsImpl <a class="d" name="metrics" href="/source/s?defs=metrics">metrics</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected abstract void <a class="d" name="assertOpen" href="/source/s?defs=assertOpen">assertOpen</a> ()  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	protected org.apache.http.impl.entity.EntityDeserializer <a class="d" name="createEntityDeserializer" href="/source/s?defs=createEntityDeserializer">createEntityDeserializer</a> () 
	protected org.apache.http.impl.entity.EntitySerializer <a class="d" name="createEntitySerializer" href="/source/s?defs=createEntitySerializer">createEntitySerializer</a> () 
	protected org.apache.http.HttpResponseFactory <a class="d" name="createHttpResponseFactory" href="/source/s?defs=createHttpResponseFactory">createHttpResponseFactory</a> () 
	protected org.apache.http.io.HttpMessageParser <a class="d" name="createResponseParser" href="/source/s?defs=createResponseParser">createResponseParser</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.HttpMessageWriter <a class="d" name="createRequestWriter" href="/source/s?defs=createRequestWriter">createRequestWriter</a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionOutputBuffer buffer
		org.apache.http.params.HttpParams params
	protected org.apache.http.impl.HttpConnectionMetricsImpl <a class="d" name="createConnectionMetrics" href="/source/s?defs=createConnectionMetrics">createConnectionMetrics</a> (org.apache.http.io.HttpTransportMetrics, org.apache.http.io.HttpTransportMetrics) 
		org.apache.http.io.HttpTransportMetrics inTransportMetric
		org.apache.http.io.HttpTransportMetrics outTransportMetric
	protected void <a class="d" name="init" href="/source/s?defs=init">init</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer inbuffer
		org.apache.http.io.SessionOutputBuffer outbuffer
		org.apache.http.params.HttpParams params
	public boolean <a class="d" name="isResponseAvailable" href="/source/s?defs=isResponseAvailable">isResponseAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int timeout
	public void <a class="d" name="sendRequestHeader" href="/source/s?defs=sendRequestHeader">sendRequestHeader</a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
	public void <a class="d" name="sendRequestEntity" href="/source/s?defs=sendRequestEntity">sendRequestEntity</a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpEntityEnclosingRequest request
	protected void <a class="d" name="doFlush" href="/source/s?defs=doFlush">doFlush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public org.apache.http.HttpResponse <a class="d" name="receiveResponseHeader" href="/source/s?defs=receiveResponseHeader">receiveResponseHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
	public void <a class="d" name="receiveResponseEntity" href="/source/s?defs=receiveResponseEntity">receiveResponseEntity</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.HttpEntity entity
	protected boolean <a class="d" name="isEof" href="/source/s?defs=isEof">isEof</a> () 
	public boolean <a class="d" name="isStale" href="/source/s?defs=isStale">isStale</a> () 
		java.io.IOException ex
	public org.apache.http.HttpConnectionMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/impl/SocketHttpServerConnection.class</b><pre><a href="/source/s?path=SocketHttpServerConnection.java">SocketHttpServerConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.SocketHttpServerConnection" href="/source/s?defs=org.apache.http.impl.SocketHttpServerConnection">org.apache.http.impl.SocketHttpServerConnection</a> extends <a href="/source/s?defs=org.apache.http.impl.AbstractHttpServerConnection">org.apache.http.impl.AbstractHttpServerConnection</a> implements <a href="/source/s?defs=org.apache.http.HttpInetConnection">org.apache.http.HttpInetConnection</a>  {
	private volatile boolean <a class="d" name="open" href="/source/s?defs=open">open</a>
	private volatile java.net.Socket <a class="d" name="socket" href="/source/s?defs=socket">socket</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="assertNotOpen" href="/source/s?defs=assertNotOpen">assertNotOpen</a> () 
	protected void <a class="d" name="assertOpen" href="/source/s?defs=assertOpen">assertOpen</a> () 
	protected org.apache.http.io.SessionInputBuffer <a class="d" name="createHttpDataReceiver" href="/source/s?defs=createHttpDataReceiver">createHttpDataReceiver</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.SessionOutputBuffer <a class="d" name="createHttpDataTransmitter" href="/source/s?defs=createHttpDataTransmitter">createHttpDataTransmitter</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.SessionInputBuffer <a class="d" name="createSessionInputBuffer" href="/source/s?defs=createSessionInputBuffer">createSessionInputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected org.apache.http.io.SessionOutputBuffer <a class="d" name="createSessionOutputBuffer" href="/source/s?defs=createSessionOutputBuffer">createSessionOutputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
	protected void <a class="d" name="bind" href="/source/s?defs=bind">bind</a> (java.net.Socket, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		org.apache.http.params.HttpParams params
		int buffersize
	protected java.net.Socket <a class="d" name="getSocket" href="/source/s?defs=getSocket">getSocket</a> () 
	public boolean <a class="d" name="isOpen" href="/source/s?defs=isOpen">isOpen</a> () 
	public java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public int <a class="d" name="getLocalPort" href="/source/s?defs=getLocalPort">getLocalPort</a> () 
	public java.net.InetAddress <a class="d" name="getRemoteAddress" href="/source/s?defs=getRemoteAddress">getRemoteAddress</a> () 
	public int <a class="d" name="getRemotePort" href="/source/s?defs=getRemotePort">getRemotePort</a> () 
	public void <a class="d" name="setSocketTimeout" href="/source/s?defs=setSocketTimeout">setSocketTimeout</a> (int) 
		java.net.SocketException ignore
		int timeout
	public int <a class="d" name="getSocketTimeout" href="/source/s?defs=getSocketTimeout">getSocketTimeout</a> () 
		java.net.SocketException ignore
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket tmpsocket
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ignore
		java.io.IOException ignore
		UnsupportedOperationException ignore
		java.net.Socket sock
}
</pre><br/><b>org/apache/http/impl/HttpConnectionMetricsImpl.class</b><pre><a href="/source/s?path=HttpConnectionMetricsImpl.java">HttpConnectionMetricsImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.HttpConnectionMetricsImpl" href="/source/s?defs=org.apache.http.impl.HttpConnectionMetricsImpl">org.apache.http.impl.HttpConnectionMetricsImpl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpConnectionMetrics">org.apache.http.HttpConnectionMetrics</a>  {
	public static final String <a class="d" name="REQUEST_COUNT" href="/source/s?defs=REQUEST_COUNT">REQUEST_COUNT</a>
	public static final String <a class="d" name="RESPONSE_COUNT" href="/source/s?defs=RESPONSE_COUNT">RESPONSE_COUNT</a>
	public static final String <a class="d" name="SENT_BYTES_COUNT" href="/source/s?defs=SENT_BYTES_COUNT">SENT_BYTES_COUNT</a>
	public static final String <a class="d" name="RECEIVED_BYTES_COUNT" href="/source/s?defs=RECEIVED_BYTES_COUNT">RECEIVED_BYTES_COUNT</a>
	private final org.apache.http.io.HttpTransportMetrics <a class="d" name="inTransportMetric" href="/source/s?defs=inTransportMetric">inTransportMetric</a>
	private final org.apache.http.io.HttpTransportMetrics <a class="d" name="outTransportMetric" href="/source/s?defs=outTransportMetric">outTransportMetric</a>
	private long <a class="d" name="requestCount" href="/source/s?defs=requestCount">requestCount</a>
	private long <a class="d" name="responseCount" href="/source/s?defs=responseCount">responseCount</a>
	private java.util.HashMap <a class="d" name="metricsCache" href="/source/s?defs=metricsCache">metricsCache</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.HttpTransportMetrics, org.apache.http.io.HttpTransportMetrics) 
		org.apache.http.io.HttpTransportMetrics inTransportMetric
		org.apache.http.io.HttpTransportMetrics outTransportMetric
	public long <a class="d" name="getReceivedBytesCount" href="/source/s?defs=getReceivedBytesCount">getReceivedBytesCount</a> () 
	public long <a class="d" name="getSentBytesCount" href="/source/s?defs=getSentBytesCount">getSentBytesCount</a> () 
	public long <a class="d" name="getRequestCount" href="/source/s?defs=getRequestCount">getRequestCount</a> () 
	public void <a class="d" name="incrementRequestCount" href="/source/s?defs=incrementRequestCount">incrementRequestCount</a> () 
	public long <a class="d" name="getResponseCount" href="/source/s?defs=getResponseCount">getResponseCount</a> () 
	public void <a class="d" name="incrementResponseCount" href="/source/s?defs=incrementResponseCount">incrementResponseCount</a> () 
	public java.lang.Object <a class="d" name="getMetric" href="/source/s?defs=getMetric">getMetric</a> (java.lang.String) 
		String metricName
		Object value
	public void <a class="d" name="setMetric" href="/source/s?defs=setMetric">setMetric</a> (java.lang.String, java.lang.Object) 
		String metricName
		Object obj
	public void <a class="d" name="reset" href="/source/s?defs=reset">reset</a> () 
}
</pre><br/><b>org/apache/http/impl/NoConnectionReuseStrategy.class</b><pre><a href="/source/s?path=NoConnectionReuseStrategy.java">NoConnectionReuseStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.NoConnectionReuseStrategy" href="/source/s?defs=org.apache.http.impl.NoConnectionReuseStrategy">org.apache.http.impl.NoConnectionReuseStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.ConnectionReuseStrategy">org.apache.http.ConnectionReuseStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="keepAlive" href="/source/s?defs=keepAlive">keepAlive</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/impl/DefaultHttpRequestFactory.class</b><pre><a href="/source/s?path=DefaultHttpRequestFactory.java">DefaultHttpRequestFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl">org.apache.http.impl</a>
public <a class="d" name="org.apache.http.impl.DefaultHttpRequestFactory" href="/source/s?defs=org.apache.http.impl.DefaultHttpRequestFactory">org.apache.http.impl.DefaultHttpRequestFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestFactory">org.apache.http.HttpRequestFactory</a>  {
	private static final String[] <a class="d" name="RFC2616_COMMON_METHODS" href="/source/s?defs=RFC2616_COMMON_METHODS">RFC2616_COMMON_METHODS</a>
	private static final String[] <a class="d" name="RFC2616_ENTITY_ENC_METHODS" href="/source/s?defs=RFC2616_ENTITY_ENC_METHODS">RFC2616_ENTITY_ENC_METHODS</a>
	private static final String[] <a class="d" name="RFC2616_SPECIAL_METHODS" href="/source/s?defs=RFC2616_SPECIAL_METHODS">RFC2616_SPECIAL_METHODS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	private static boolean <a class="d" name="isOneOf" href="/source/s?defs=isOneOf">isOneOf</a> (java.lang.String[], java.lang.String) 
		int i
		String[] methods
		String method
	public org.apache.http.HttpRequest <a class="d" name="newHttpRequest" href="/source/s?defs=newHttpRequest">newHttpRequest</a> (org.apache.http.RequestLine)  throws <a href="/source/s?defs=org.apache.http.MethodNotSupportedException">org.apache.http.MethodNotSupportedException</a> 
		org.apache.http.RequestLine requestline
		String method
	public org.apache.http.HttpRequest <a class="d" name="newHttpRequest" href="/source/s?defs=newHttpRequest">newHttpRequest</a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.MethodNotSupportedException">org.apache.http.MethodNotSupportedException</a> 
		String method
		String uri
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/entity/ContentLengthStrategy.class</b><pre><a href="/source/s?path=ContentLengthStrategy.java">ContentLengthStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public abstract <a class="d" name="org.apache.http.entity.ContentLengthStrategy" href="/source/s?defs=org.apache.http.entity.ContentLengthStrategy">org.apache.http.entity.ContentLengthStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final int <a class="d" name="IDENTITY" href="/source/s?defs=IDENTITY">IDENTITY</a>
	public static final int <a class="d" name="CHUNKED" href="/source/s?defs=CHUNKED">CHUNKED</a>
	public abstract long <a class="d" name="determineLength" href="/source/s?defs=determineLength">determineLength</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
}
</pre><br/><b>org/apache/http/entity/AbstractHttpEntity.class</b><pre><a href="/source/s?path=AbstractHttpEntity.java">AbstractHttpEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public abstract <a class="d" name="org.apache.http.entity.AbstractHttpEntity" href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpEntity">org.apache.http.HttpEntity</a>  {
	protected org.apache.http.Header <a class="d" name="contentType" href="/source/s?defs=contentType">contentType</a>
	protected org.apache.http.Header <a class="d" name="contentEncoding" href="/source/s?defs=contentEncoding">contentEncoding</a>
	protected boolean <a class="d" name="chunked" href="/source/s?defs=chunked">chunked</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.Header <a class="d" name="getContentType" href="/source/s?defs=getContentType">getContentType</a> () 
	public org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public boolean <a class="d" name="isChunked" href="/source/s?defs=isChunked">isChunked</a> () 
	public void <a class="d" name="setContentType" href="/source/s?defs=setContentType">setContentType</a> (org.apache.http.Header) 
		org.apache.http.Header contentType
	public void <a class="d" name="setContentType" href="/source/s?defs=setContentType">setContentType</a> (java.lang.String) 
		String ctString
		org.apache.http.Header h
	public void <a class="d" name="setContentEncoding" href="/source/s?defs=setContentEncoding">setContentEncoding</a> (org.apache.http.Header) 
		org.apache.http.Header contentEncoding
	public void <a class="d" name="setContentEncoding" href="/source/s?defs=setContentEncoding">setContentEncoding</a> (java.lang.String) 
		String ceString
		org.apache.http.Header h
	public void <a class="d" name="setChunked" href="/source/s?defs=setChunked">setChunked</a> (boolean) 
		boolean b
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/entity/InputStreamEntity.class</b><pre><a href="/source/s?path=InputStreamEntity.java">InputStreamEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.InputStreamEntity" href="/source/s?defs=org.apache.http.entity.InputStreamEntity">org.apache.http.entity.InputStreamEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> {
	private static final int <a class="d" name="BUFFER_SIZE" href="/source/s?defs=BUFFER_SIZE">BUFFER_SIZE</a>
	private final java.io.InputStream <a class="d" name="content" href="/source/s?defs=content">content</a>
	private final long <a class="d" name="length" href="/source/s?defs=length">length</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.InputStream, long) 
		java.io.InputStream instream
		long length
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int l
		int l
		long remaining
		java.io.OutputStream outstream
		java.io.InputStream instream
		byte[] buffer
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/entity/BufferedHttpEntity.class</b><pre><a href="/source/s?path=BufferedHttpEntity.java">BufferedHttpEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.BufferedHttpEntity" href="/source/s?defs=org.apache.http.entity.BufferedHttpEntity">org.apache.http.entity.BufferedHttpEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.HttpEntityWrapper">org.apache.http.entity.HttpEntityWrapper</a> {
	private final byte[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpEntity entity
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public boolean <a class="d" name="isChunked" href="/source/s?defs=isChunked">isChunked</a> () 
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
}
</pre><br/><b>org/apache/http/entity/HttpEntityWrapper.class</b><pre><a href="/source/s?path=HttpEntityWrapper.java">HttpEntityWrapper.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.HttpEntityWrapper" href="/source/s?defs=org.apache.http.entity.HttpEntityWrapper">org.apache.http.entity.HttpEntityWrapper</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpEntity">org.apache.http.HttpEntity</a>  {
	protected org.apache.http.HttpEntity <a class="d" name="wrappedEntity" href="/source/s?defs=wrappedEntity">wrappedEntity</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity wrapped
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public boolean <a class="d" name="isChunked" href="/source/s?defs=isChunked">isChunked</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public org.apache.http.Header <a class="d" name="getContentType" href="/source/s?defs=getContentType">getContentType</a> () 
	public org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/entity/StringEntity.class</b><pre><a href="/source/s?path=StringEntity.java">StringEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.StringEntity" href="/source/s?defs=org.apache.http.entity.StringEntity">org.apache.http.entity.StringEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> implements <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	protected final byte[] <a class="d" name="content" href="/source/s?defs=content">content</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String s
		String mimeType
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String s
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String s
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/entity/BasicHttpEntity.class</b><pre><a href="/source/s?path=BasicHttpEntity.java">BasicHttpEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.BasicHttpEntity" href="/source/s?defs=org.apache.http.entity.BasicHttpEntity">org.apache.http.entity.BasicHttpEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> {
	private java.io.InputStream <a class="d" name="content" href="/source/s?defs=content">content</a>
	private long <a class="d" name="length" href="/source/s?defs=length">length</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public void <a class="d" name="setContentLength" href="/source/s?defs=setContentLength">setContentLength</a> (long) 
		long len
	public void <a class="d" name="setContent" href="/source/s?defs=setContent">setContent</a> (java.io.InputStream) 
		java.io.InputStream instream
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int l
		byte[] tmp
		java.io.OutputStream outstream
		java.io.InputStream instream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/entity/EntityTemplate.class</b><pre><a href="/source/s?path=EntityTemplate.java">EntityTemplate.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.EntityTemplate" href="/source/s?defs=org.apache.http.entity.EntityTemplate">org.apache.http.entity.EntityTemplate</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> {
	private final org.apache.http.entity.ContentProducer <a class="d" name="contentproducer" href="/source/s?defs=contentproducer">contentproducer</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.entity.ContentProducer) 
		org.apache.http.entity.ContentProducer contentproducer
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> () 
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
}
</pre><br/><b>org/apache/http/entity/SerializableEntity.class</b><pre><a href="/source/s?path=SerializableEntity.java">SerializableEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.SerializableEntity" href="/source/s?defs=org.apache.http.entity.SerializableEntity">org.apache.http.entity.SerializableEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> {
	private byte[] <a class="d" name="objSer" href="/source/s?defs=objSer">objSer</a>
	private java.io.Serializable <a class="d" name="objRef" href="/source/s?defs=objRef">objRef</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.Serializable, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.Serializable ser
		boolean bufferize
	private void <a class="d" name="createBytes" href="/source/s?defs=createBytes">createBytes</a> (java.io.Serializable)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.Serializable ser
		java.io.ByteArrayOutputStream baos
		java.io.ObjectOutputStream out
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.ObjectOutputStream out
		java.io.OutputStream outstream
}
</pre><br/><b>org/apache/http/entity/FileEntity.class</b><pre><a href="/source/s?path=FileEntity.java">FileEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.FileEntity" href="/source/s?defs=org.apache.http.entity.FileEntity">org.apache.http.entity.FileEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> implements <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	protected final java.io.File <a class="d" name="file" href="/source/s?defs=file">file</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.File, java.lang.String) 
		java.io.File file
		String contentType
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] tmp
		int l
		java.io.OutputStream outstream
		java.io.InputStream instream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/entity/ByteArrayEntity.class</b><pre><a href="/source/s?path=ByteArrayEntity.java">ByteArrayEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public <a class="d" name="org.apache.http.entity.ByteArrayEntity" href="/source/s?defs=org.apache.http.entity.ByteArrayEntity">org.apache.http.entity.ByteArrayEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.AbstractHttpEntity">org.apache.http.entity.AbstractHttpEntity</a> implements <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	protected final byte[] <a class="d" name="content" href="/source/s?defs=content">content</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (byte[]) 
		byte[] b
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/entity/ContentProducer.class</b><pre><a href="/source/s?path=ContentProducer.java">ContentProducer.java</a>
package <a href="/source/s?defs=org.apache.http.entity">org.apache.http.entity</a>
public abstract <a class="d" name="org.apache.http.entity.ContentProducer" href="/source/s?defs=org.apache.http.entity.ContentProducer">org.apache.http.entity.ContentProducer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/HttpRequest.class</b><pre><a href="/source/s?path=HttpRequest.java">HttpRequest.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpRequest" href="/source/s?defs=org.apache.http.HttpRequest">org.apache.http.HttpRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpMessage">org.apache.http.HttpMessage</a>  {
	public abstract org.apache.http.RequestLine <a class="d" name="getRequestLine" href="/source/s?defs=getRequestLine">getRequestLine</a> () 
}
</pre><br/><b>org/apache/http/HttpVersion.class</b><pre><a href="/source/s?path=HttpVersion.java">HttpVersion.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public final <a class="d" name="org.apache.http.HttpVersion" href="/source/s?defs=org.apache.http.HttpVersion">org.apache.http.HttpVersion</a> extends <a href="/source/s?defs=org.apache.http.ProtocolVersion">org.apache.http.ProtocolVersion</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public static final String <a class="d" name="HTTP" href="/source/s?defs=HTTP">HTTP</a>
	public static final org.apache.http.HttpVersion <a class="d" name="HTTP_0_9" href="/source/s?defs=HTTP_0_9">HTTP_0_9</a>
	public static final org.apache.http.HttpVersion <a class="d" name="HTTP_1_0" href="/source/s?defs=HTTP_1_0">HTTP_1_0</a>
	public static final org.apache.http.HttpVersion <a class="d" name="HTTP_1_1" href="/source/s?defs=HTTP_1_1">HTTP_1_1</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int, int) 
		int major
		int minor
	public org.apache.http.ProtocolVersion <a class="d" name="forVersion" href="/source/s?defs=forVersion">forVersion</a> (int, int) 
		int major
		int minor
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/NoHttpResponseException.class</b><pre><a href="/source/s?path=NoHttpResponseException.java">NoHttpResponseException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.NoHttpResponseException" href="/source/s?defs=org.apache.http.NoHttpResponseException">org.apache.http.NoHttpResponseException</a> extends <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/HttpMessage.class</b><pre><a href="/source/s?path=HttpMessage.java">HttpMessage.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpMessage" href="/source/s?defs=org.apache.http.HttpMessage">org.apache.http.HttpMessage</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public abstract boolean <a class="d" name="containsHeader" href="/source/s?defs=containsHeader">containsHeader</a> (java.lang.String) 
	public abstract org.apache.http.Header[] <a class="d" name="getHeaders" href="/source/s?defs=getHeaders">getHeaders</a> (java.lang.String) 
	public abstract org.apache.http.Header <a class="d" name="getFirstHeader" href="/source/s?defs=getFirstHeader">getFirstHeader</a> (java.lang.String) 
	public abstract org.apache.http.Header <a class="d" name="getLastHeader" href="/source/s?defs=getLastHeader">getLastHeader</a> (java.lang.String) 
	public abstract org.apache.http.Header[] <a class="d" name="getAllHeaders" href="/source/s?defs=getAllHeaders">getAllHeaders</a> () 
	public abstract void <a class="d" name="addHeader" href="/source/s?defs=addHeader">addHeader</a> (org.apache.http.Header) 
	public abstract void <a class="d" name="addHeader" href="/source/s?defs=addHeader">addHeader</a> (java.lang.String, java.lang.String) 
	public abstract void <a class="d" name="setHeader" href="/source/s?defs=setHeader">setHeader</a> (org.apache.http.Header) 
	public abstract void <a class="d" name="setHeader" href="/source/s?defs=setHeader">setHeader</a> (java.lang.String, java.lang.String) 
	public abstract void <a class="d" name="setHeaders" href="/source/s?defs=setHeaders">setHeaders</a> (org.apache.http.Header[]) 
	public abstract void <a class="d" name="removeHeader" href="/source/s?defs=removeHeader">removeHeader</a> (org.apache.http.Header) 
	public abstract void <a class="d" name="removeHeaders" href="/source/s?defs=removeHeaders">removeHeaders</a> (java.lang.String) 
	public abstract org.apache.http.HeaderIterator <a class="d" name="headerIterator" href="/source/s?defs=headerIterator">headerIterator</a> () 
	public abstract org.apache.http.HeaderIterator <a class="d" name="headerIterator" href="/source/s?defs=headerIterator">headerIterator</a> (java.lang.String) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="getParams" href="/source/s?defs=getParams">getParams</a> () 
	public abstract void <a class="d" name="setParams" href="/source/s?defs=setParams">setParams</a> (org.apache.http.params.HttpParams) 
}
</pre><br/><b>org/apache/http/NameValuePair.class</b><pre><a href="/source/s?path=NameValuePair.java">NameValuePair.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.NameValuePair" href="/source/s?defs=org.apache.http.NameValuePair">org.apache.http.NameValuePair</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public abstract java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
}
</pre><br/><b>org/apache/http/util/LangUtils.class</b><pre><a href="/source/s?path=LangUtils.java">LangUtils.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.LangUtils" href="/source/s?defs=org.apache.http.util.LangUtils">org.apache.http.util.LangUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final int <a class="d" name="HASH_SEED" href="/source/s?defs=HASH_SEED">HASH_SEED</a>
	public static final int <a class="d" name="HASH_OFFSET" href="/source/s?defs=HASH_OFFSET">HASH_OFFSET</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> (int, int) 
		int seed
		int hashcode
	public static int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> (int, boolean) 
		int seed
		boolean b
	public static int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> (int, java.lang.Object) 
		int seed
		Object obj
	public static boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object, java.lang.Object) 
		Object obj1
		Object obj2
	public static boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object[], java.lang.Object[]) 
		int i
		Object[] a1
		Object[] a2
}
</pre><br/><b>org/apache/http/util/ExceptionUtils.class</b><pre><a href="/source/s?path=ExceptionUtils.java">ExceptionUtils.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.ExceptionUtils" href="/source/s?defs=org.apache.http.util.ExceptionUtils">org.apache.http.util.ExceptionUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final java.lang.reflect.Method <a class="d" name="INIT_CAUSE_METHOD" href="/source/s?defs=INIT_CAUSE_METHOD">INIT_CAUSE_METHOD</a>
	static Class <a class="d" name="class$java$lang$Throwable" href="/source/s?defs=class$java$lang$Throwable">class$java$lang$Throwable</a>
	private static java.lang.reflect.Method <a class="d" name="getInitCauseMethod" href="/source/s?defs=getInitCauseMethod">getInitCauseMethod</a> () 
		Class[] paramsClasses
		NoSuchMethodException e
	public static void <a class="d" name="initCause" href="/source/s?defs=initCause">initCause</a> (java.lang.Throwable, java.lang.Throwable) 
		Exception e
		Throwable throwable
		Throwable cause
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	static java.lang.Class <a class="d" name="class$" href="/source/s?defs=class$">class$</a> (java.lang.String) 
		ClassNotFoundException x1
		String x0
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/util/CharArrayBuffer.class</b><pre><a href="/source/s?path=CharArrayBuffer.java">CharArrayBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.CharArrayBuffer" href="/source/s?defs=org.apache.http.util.CharArrayBuffer">org.apache.http.util.CharArrayBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private char[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private int <a class="d" name="len" href="/source/s?defs=len">len</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int) 
		int capacity
	private void <a class="d" name="expand" href="/source/s?defs=expand">expand</a> (int) 
		int newlen
		char[] newbuffer
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (char[], int, int) 
		char[] b
		int off
		int len
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (java.lang.String) 
		String str
		int strlen
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (org.apache.http.util.CharArrayBuffer, int, int) 
		org.apache.http.util.CharArrayBuffer b
		int off
		int len
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (org.apache.http.util.CharArrayBuffer) 
		org.apache.http.util.CharArrayBuffer b
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (char) 
		char ch
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (byte[], int, int) 
		int i1
		int i2
		byte[] b
		int off
		int len
		int oldlen
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (org.apache.http.util.ByteArrayBuffer, int, int) 
		org.apache.http.util.ByteArrayBuffer b
		int off
		int len
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (java.lang.Object) 
		Object obj
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public char[] <a class="d" name="toCharArray" href="/source/s?defs=toCharArray">toCharArray</a> () 
		char[] b
	public char <a class="d" name="charAt" href="/source/s?defs=charAt">charAt</a> (int) 
		int i
	public char[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a> () 
	public int <a class="d" name="capacity" href="/source/s?defs=capacity">capacity</a> () 
	public int <a class="d" name="length" href="/source/s?defs=length">length</a> () 
	public void <a class="d" name="ensureCapacity" href="/source/s?defs=ensureCapacity">ensureCapacity</a> (int) 
		int required
		int available
	public void <a class="d" name="setLength" href="/source/s?defs=setLength">setLength</a> (int) 
		int len
	public boolean <a class="d" name="isEmpty" href="/source/s?defs=isEmpty">isEmpty</a> () 
	public boolean <a class="d" name="isFull" href="/source/s?defs=isFull">isFull</a> () 
	public int <a class="d" name="indexOf" href="/source/s?defs=indexOf">indexOf</a> (int, int, int) 
		int i
		int ch
		int beginIndex
		int endIndex
	public int <a class="d" name="indexOf" href="/source/s?defs=indexOf">indexOf</a> (int) 
		int ch
	public java.lang.String <a class="d" name="substring" href="/source/s?defs=substring">substring</a> (int, int) 
		int beginIndex
		int endIndex
	public java.lang.String <a class="d" name="substringTrimmed" href="/source/s?defs=substringTrimmed">substringTrimmed</a> (int, int) 
		int beginIndex
		int endIndex
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/util/EncodingUtils.class</b><pre><a href="/source/s?path=EncodingUtils.java">EncodingUtils.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.EncodingUtils" href="/source/s?defs=org.apache.http.util.EncodingUtils">org.apache.http.util.EncodingUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static java.lang.String <a class="d" name="getString" href="/source/s?defs=getString">getString</a> (byte[], int, int, java.lang.String) 
		java.io.UnsupportedEncodingException e
		byte[] data
		int offset
		int length
		String charset
	public static java.lang.String <a class="d" name="getString" href="/source/s?defs=getString">getString</a> (byte[], java.lang.String) 
		byte[] data
		String charset
	public static byte[] <a class="d" name="getBytes" href="/source/s?defs=getBytes">getBytes</a> (java.lang.String, java.lang.String) 
		java.io.UnsupportedEncodingException e
		String data
		String charset
	public static byte[] <a class="d" name="getAsciiBytes" href="/source/s?defs=getAsciiBytes">getAsciiBytes</a> (java.lang.String) 
		java.io.UnsupportedEncodingException e
		String data
	public static java.lang.String <a class="d" name="getAsciiString" href="/source/s?defs=getAsciiString">getAsciiString</a> (byte[], int, int) 
		java.io.UnsupportedEncodingException e
		byte[] data
		int offset
		int length
	public static java.lang.String <a class="d" name="getAsciiString" href="/source/s?defs=getAsciiString">getAsciiString</a> (byte[]) 
		byte[] data
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/util/VersionInfo.class</b><pre><a href="/source/s?path=VersionInfo.java">VersionInfo.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public <a class="d" name="org.apache.http.util.VersionInfo" href="/source/s?defs=org.apache.http.util.VersionInfo">org.apache.http.util.VersionInfo</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="UNAVAILABLE" href="/source/s?defs=UNAVAILABLE">UNAVAILABLE</a>
	public static final String <a class="d" name="VERSION_PROPERTY_FILE" href="/source/s?defs=VERSION_PROPERTY_FILE">VERSION_PROPERTY_FILE</a>
	public static final String <a class="d" name="PROPERTY_MODULE" href="/source/s?defs=PROPERTY_MODULE">PROPERTY_MODULE</a>
	public static final String <a class="d" name="PROPERTY_RELEASE" href="/source/s?defs=PROPERTY_RELEASE">PROPERTY_RELEASE</a>
	public static final String <a class="d" name="PROPERTY_TIMESTAMP" href="/source/s?defs=PROPERTY_TIMESTAMP">PROPERTY_TIMESTAMP</a>
	private final String <a class="d" name="infoPackage" href="/source/s?defs=infoPackage">infoPackage</a>
	private final String <a class="d" name="infoModule" href="/source/s?defs=infoModule">infoModule</a>
	private final String <a class="d" name="infoRelease" href="/source/s?defs=infoRelease">infoRelease</a>
	private final String <a class="d" name="infoTimestamp" href="/source/s?defs=infoTimestamp">infoTimestamp</a>
	private final String <a class="d" name="infoClassloader" href="/source/s?defs=infoClassloader">infoClassloader</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 
		String pckg
		String module
		String release
		String time
		String clsldr
	public final java.lang.String <a class="d" name="getPackage" href="/source/s?defs=getPackage">getPackage</a> () 
	public final java.lang.String <a class="d" name="getModule" href="/source/s?defs=getModule">getModule</a> () 
	public final java.lang.String <a class="d" name="getRelease" href="/source/s?defs=getRelease">getRelease</a> () 
	public final java.lang.String <a class="d" name="getTimestamp" href="/source/s?defs=getTimestamp">getTimestamp</a> () 
	public final java.lang.String <a class="d" name="getClassloader" href="/source/s?defs=getClassloader">getClassloader</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuffer sb
	public static final org.apache.http.util.VersionInfo[] <a class="d" name="loadVersionInfo" href="/source/s?defs=loadVersionInfo">loadVersionInfo</a> (java.lang.String[], java.lang.ClassLoader) 
		org.apache.http.util.VersionInfo vi
		int i
		String[] pckgs
		ClassLoader clsldr
		java.util.ArrayList vil
	public static final org.apache.http.util.VersionInfo <a class="d" name="loadVersionInfo" href="/source/s?defs=loadVersionInfo">loadVersionInfo</a> (java.lang.String, java.lang.ClassLoader) 
		java.util.Properties props
		java.io.InputStream is
		java.io.IOException ex
		String pckg
		ClassLoader clsldr
		java.util.Properties vip
		org.apache.http.util.VersionInfo result
	protected static final org.apache.http.util.VersionInfo <a class="d" name="fromMap" href="/source/s?defs=fromMap">fromMap</a> (java.lang.String, java.util.Map, java.lang.ClassLoader) 
		String pckg
		java.util.Map info
		ClassLoader clsldr
		String module
		String release
		String timestamp
		String clsldrstr
}
</pre><br/><b>org/apache/http/util/ByteArrayBuffer.class</b><pre><a href="/source/s?path=ByteArrayBuffer.java">ByteArrayBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.ByteArrayBuffer" href="/source/s?defs=org.apache.http.util.ByteArrayBuffer">org.apache.http.util.ByteArrayBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private byte[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a>
	private int <a class="d" name="len" href="/source/s?defs=len">len</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int) 
		int capacity
	private void <a class="d" name="expand" href="/source/s?defs=expand">expand</a> (int) 
		int newlen
		byte[] newbuffer
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (byte[], int, int) 
		byte[] b
		int off
		int len
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (int) 
		int b
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (char[], int, int) 
		int i1
		int i2
		char[] b
		int off
		int len
		int oldlen
		int newlen
	public void <a class="d" name="append" href="/source/s?defs=append">append</a> (org.apache.http.util.CharArrayBuffer, int, int) 
		org.apache.http.util.CharArrayBuffer b
		int off
		int len
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public byte[] <a class="d" name="toByteArray" href="/source/s?defs=toByteArray">toByteArray</a> () 
		byte[] b
	public int <a class="d" name="byteAt" href="/source/s?defs=byteAt">byteAt</a> (int) 
		int i
	public int <a class="d" name="capacity" href="/source/s?defs=capacity">capacity</a> () 
	public int <a class="d" name="length" href="/source/s?defs=length">length</a> () 
	public void <a class="d" name="ensureCapacity" href="/source/s?defs=ensureCapacity">ensureCapacity</a> (int) 
		int required
		int available
	public byte[] <a class="d" name="buffer" href="/source/s?defs=buffer">buffer</a> () 
	public void <a class="d" name="setLength" href="/source/s?defs=setLength">setLength</a> (int) 
		int len
	public boolean <a class="d" name="isEmpty" href="/source/s?defs=isEmpty">isEmpty</a> () 
	public boolean <a class="d" name="isFull" href="/source/s?defs=isFull">isFull</a> () 
	public int <a class="d" name="indexOf" href="/source/s?defs=indexOf">indexOf</a> (byte, int, int) 
		int i
		byte b
		int beginIndex
		int endIndex
	public int <a class="d" name="indexOf" href="/source/s?defs=indexOf">indexOf</a> (byte) 
		byte b
}
</pre><br/><b>org/apache/http/util/EntityUtils.class</b><pre><a href="/source/s?path=EntityUtils.java">EntityUtils.java</a>
package <a href="/source/s?defs=org.apache.http.util">org.apache.http.util</a>
public final <a class="d" name="org.apache.http.util.EntityUtils" href="/source/s?defs=org.apache.http.util.EntityUtils">org.apache.http.util.EntityUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static void <a class="d" name="consume" href="/source/s?defs=consume">consume</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream instream
		org.apache.http.HttpEntity entity
	public static byte[] <a class="d" name="toByteArray" href="/source/s?defs=toByteArray">toByteArray</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] tmp
		int l
		org.apache.http.HttpEntity entity
		java.io.InputStream instream
		int i
		org.apache.http.util.ByteArrayBuffer buffer
	public static java.lang.String <a class="d" name="getContentCharSet" href="/source/s?defs=getContentCharSet">getContentCharSet</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.NameValuePair param
		org.apache.http.HeaderElement[] values
		org.apache.http.HttpEntity entity
		String charset
	public static java.lang.String <a class="d" name="getContentMimeType" href="/source/s?defs=getContentMimeType">getContentMimeType</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.HeaderElement[] values
		org.apache.http.HttpEntity entity
		String mimeType
	public static java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> (org.apache.http.HttpEntity, java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		char[] tmp
		int l
		org.apache.http.HttpEntity entity
		String defaultCharset
		java.io.InputStream instream
		int i
		String charset
		java.io.Reader reader
		org.apache.http.util.CharArrayBuffer buffer
	public static java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.HttpEntity entity
}
</pre><br/><b>org/apache/http/version.properties</b><br/><b>org/apache/http/protocol/ResponseDate.class</b><pre><a href="/source/s?path=ResponseDate.java">ResponseDate.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.ResponseDate" href="/source/s?defs=org.apache.http.protocol.ResponseDate">org.apache.http.protocol.ResponseDate</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	private static final org.apache.http.protocol.HttpDateGenerator <a class="d" name="DATE_GENERATOR" href="/source/s?defs=DATE_GENERATOR">DATE_GENERATOR</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String httpdate
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int status
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/protocol/HttpExpectationVerifier.class</b><pre><a href="/source/s?path=HttpExpectationVerifier.java">HttpExpectationVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpExpectationVerifier" href="/source/s?defs=org.apache.http.protocol.HttpExpectationVerifier">org.apache.http.protocol.HttpExpectationVerifier</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
}
</pre><br/><b>org/apache/http/protocol/HttpContext.class</b><pre><a href="/source/s?path=HttpContext.java">HttpContext.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpContext" href="/source/s?defs=org.apache.http.protocol.HttpContext">org.apache.http.protocol.HttpContext</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="RESERVED_PREFIX" href="/source/s?defs=RESERVED_PREFIX">RESERVED_PREFIX</a>
	public abstract java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
	public abstract void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
	public abstract java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
}
</pre><br/><b>org/apache/http/protocol/RequestUserAgent.class</b><pre><a href="/source/s?path=RequestUserAgent.java">RequestUserAgent.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestUserAgent" href="/source/s?defs=org.apache.http.protocol.RequestUserAgent">org.apache.http.protocol.RequestUserAgent</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String useragent
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/HttpResponseInterceptorList.class</b><pre><a href="/source/s?path=HttpResponseInterceptorList.java">HttpResponseInterceptorList.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpResponseInterceptorList" href="/source/s?defs=org.apache.http.protocol.HttpResponseInterceptorList">org.apache.http.protocol.HttpResponseInterceptorList</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor) 
	public abstract void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor, int) 
	public abstract int <a class="d" name="getResponseInterceptorCount" href="/source/s?defs=getResponseInterceptorCount">getResponseInterceptorCount</a> () 
	public abstract org.apache.http.HttpResponseInterceptor <a class="d" name="getResponseInterceptor" href="/source/s?defs=getResponseInterceptor">getResponseInterceptor</a> (int) 
	public abstract void <a class="d" name="clearResponseInterceptors" href="/source/s?defs=clearResponseInterceptors">clearResponseInterceptors</a> () 
	public abstract void <a class="d" name="removeResponseInterceptorByClass" href="/source/s?defs=removeResponseInterceptorByClass">removeResponseInterceptorByClass</a> (java.lang.Class) 
	public abstract void <a class="d" name="setInterceptors" href="/source/s?defs=setInterceptors">setInterceptors</a> (java.util.List) 
}
</pre><br/><b>org/apache/http/protocol/DefaultedHttpContext.class</b><pre><a href="/source/s?path=DefaultedHttpContext.java">DefaultedHttpContext.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public final <a class="d" name="org.apache.http.protocol.DefaultedHttpContext" href="/source/s?defs=org.apache.http.protocol.DefaultedHttpContext">org.apache.http.protocol.DefaultedHttpContext</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.protocol.HttpContext">org.apache.http.protocol.HttpContext</a>  {
	private final org.apache.http.protocol.HttpContext <a class="d" name="local" href="/source/s?defs=local">local</a>
	private final org.apache.http.protocol.HttpContext <a class="d" name="defaults" href="/source/s?defs=defaults">defaults</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpContext, org.apache.http.protocol.HttpContext) 
		org.apache.http.protocol.HttpContext local
		org.apache.http.protocol.HttpContext defaults
	public java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String id
		Object obj
	public java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
		String id
	public void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
		String id
		Object obj
	public org.apache.http.protocol.HttpContext <a class="d" name="getDefaults" href="/source/s?defs=getDefaults">getDefaults</a> () 
}
</pre><br/><b>org/apache/http/protocol/RequestDate.class</b><pre><a href="/source/s?path=RequestDate.java">RequestDate.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestDate" href="/source/s?defs=org.apache.http.protocol.RequestDate">org.apache.http.protocol.RequestDate</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private static final org.apache.http.protocol.HttpDateGenerator <a class="d" name="DATE_GENERATOR" href="/source/s?defs=DATE_GENERATOR">DATE_GENERATOR</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String httpdate
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/protocol/HttpProcessor.class</b><pre><a href="/source/s?path=HttpProcessor.java">HttpProcessor.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpProcessor" href="/source/s?defs=org.apache.http.protocol.HttpProcessor">org.apache.http.protocol.HttpProcessor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a> <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
}
</pre><br/><b>org/apache/http/protocol/BasicHttpContext.class</b><pre><a href="/source/s?path=BasicHttpContext.java">BasicHttpContext.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.BasicHttpContext" href="/source/s?defs=org.apache.http.protocol.BasicHttpContext">org.apache.http.protocol.BasicHttpContext</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.protocol.HttpContext">org.apache.http.protocol.HttpContext</a>  {
	private final org.apache.http.protocol.HttpContext <a class="d" name="parentContext" href="/source/s?defs=parentContext">parentContext</a>
	private java.util.Map <a class="d" name="map" href="/source/s?defs=map">map</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpContext) 
		org.apache.http.protocol.HttpContext parentContext
	public java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String id
		Object obj
	public void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
		String id
		Object obj
	public java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
		String id
}
</pre><br/><b>org/apache/http/protocol/HttpRequestHandlerRegistry.class</b><pre><a href="/source/s?path=HttpRequestHandlerRegistry.java">HttpRequestHandlerRegistry.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.HttpRequestHandlerRegistry" href="/source/s?defs=org.apache.http.protocol.HttpRequestHandlerRegistry">org.apache.http.protocol.HttpRequestHandlerRegistry</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.protocol.HttpRequestHandlerResolver">org.apache.http.protocol.HttpRequestHandlerResolver</a>  {
	private final org.apache.http.protocol.UriPatternMatcher <a class="d" name="matcher" href="/source/s?defs=matcher">matcher</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="register" href="/source/s?defs=register">register</a> (java.lang.String, org.apache.http.protocol.HttpRequestHandler) 
		String pattern
		org.apache.http.protocol.HttpRequestHandler handler
	public void <a class="d" name="unregister" href="/source/s?defs=unregister">unregister</a> (java.lang.String) 
		String pattern
	public void <a class="d" name="setHandlers" href="/source/s?defs=setHandlers">setHandlers</a> (java.util.Map) 
		java.util.Map map
	public org.apache.http.protocol.HttpRequestHandler <a class="d" name="lookup" href="/source/s?defs=lookup">lookup</a> (java.lang.String) 
		String requestURI
	protected boolean <a class="d" name="matchUriRequestPattern" href="/source/s?defs=matchUriRequestPattern">matchUriRequestPattern</a> (java.lang.String, java.lang.String) 
		String pattern
		String requestUri
}
</pre><br/><b>org/apache/http/protocol/HttpRequestHandlerResolver.class</b><pre><a href="/source/s?path=HttpRequestHandlerResolver.java">HttpRequestHandlerResolver.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpRequestHandlerResolver" href="/source/s?defs=org.apache.http.protocol.HttpRequestHandlerResolver">org.apache.http.protocol.HttpRequestHandlerResolver</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.protocol.HttpRequestHandler <a class="d" name="lookup" href="/source/s?defs=lookup">lookup</a> (java.lang.String) 
}
</pre><br/><b>org/apache/http/protocol/HttpRequestInterceptorList.class</b><pre><a href="/source/s?path=HttpRequestInterceptorList.java">HttpRequestInterceptorList.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpRequestInterceptorList" href="/source/s?defs=org.apache.http.protocol.HttpRequestInterceptorList">org.apache.http.protocol.HttpRequestInterceptorList</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor) 
	public abstract void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor, int) 
	public abstract int <a class="d" name="getRequestInterceptorCount" href="/source/s?defs=getRequestInterceptorCount">getRequestInterceptorCount</a> () 
	public abstract org.apache.http.HttpRequestInterceptor <a class="d" name="getRequestInterceptor" href="/source/s?defs=getRequestInterceptor">getRequestInterceptor</a> (int) 
	public abstract void <a class="d" name="clearRequestInterceptors" href="/source/s?defs=clearRequestInterceptors">clearRequestInterceptors</a> () 
	public abstract void <a class="d" name="removeRequestInterceptorByClass" href="/source/s?defs=removeRequestInterceptorByClass">removeRequestInterceptorByClass</a> (java.lang.Class) 
	public abstract void <a class="d" name="setInterceptors" href="/source/s?defs=setInterceptors">setInterceptors</a> (java.util.List) 
}
</pre><br/><b>org/apache/http/protocol/BasicHttpProcessor.class</b><pre><a href="/source/s?path=BasicHttpProcessor.java">BasicHttpProcessor.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public final <a class="d" name="org.apache.http.protocol.BasicHttpProcessor" href="/source/s?defs=org.apache.http.protocol.BasicHttpProcessor">org.apache.http.protocol.BasicHttpProcessor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.protocol.HttpProcessor">org.apache.http.protocol.HttpProcessor</a> <a href="/source/s?defs=org.apache.http.protocol.HttpRequestInterceptorList">org.apache.http.protocol.HttpRequestInterceptorList</a> <a href="/source/s?defs=org.apache.http.protocol.HttpResponseInterceptorList">org.apache.http.protocol.HttpResponseInterceptorList</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	protected final java.util.List <a class="d" name="requestInterceptors" href="/source/s?defs=requestInterceptors">requestInterceptors</a>
	protected final java.util.List <a class="d" name="responseInterceptors" href="/source/s?defs=responseInterceptors">responseInterceptors</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor) 
		org.apache.http.HttpRequestInterceptor itcp
	public void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor, int) 
		org.apache.http.HttpRequestInterceptor itcp
		int index
	public void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor, int) 
		org.apache.http.HttpResponseInterceptor itcp
		int index
	public void <a class="d" name="removeRequestInterceptorByClass" href="/source/s?defs=removeRequestInterceptorByClass">removeRequestInterceptorByClass</a> (java.lang.Class) 
		Object request
		java.util.Iterator it
		Class clazz
	public void <a class="d" name="removeResponseInterceptorByClass" href="/source/s?defs=removeResponseInterceptorByClass">removeResponseInterceptorByClass</a> (java.lang.Class) 
		Object request
		java.util.Iterator it
		Class clazz
	public final void <a class="d" name="addInterceptor" href="/source/s?defs=addInterceptor">addInterceptor</a> (org.apache.http.HttpRequestInterceptor) 
		org.apache.http.HttpRequestInterceptor interceptor
	public final void <a class="d" name="addInterceptor" href="/source/s?defs=addInterceptor">addInterceptor</a> (org.apache.http.HttpRequestInterceptor, int) 
		org.apache.http.HttpRequestInterceptor interceptor
		int index
	public int <a class="d" name="getRequestInterceptorCount" href="/source/s?defs=getRequestInterceptorCount">getRequestInterceptorCount</a> () 
	public org.apache.http.HttpRequestInterceptor <a class="d" name="getRequestInterceptor" href="/source/s?defs=getRequestInterceptor">getRequestInterceptor</a> (int) 
		int index
	public void <a class="d" name="clearRequestInterceptors" href="/source/s?defs=clearRequestInterceptors">clearRequestInterceptors</a> () 
	public void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor) 
		org.apache.http.HttpResponseInterceptor itcp
	public final void <a class="d" name="addInterceptor" href="/source/s?defs=addInterceptor">addInterceptor</a> (org.apache.http.HttpResponseInterceptor) 
		org.apache.http.HttpResponseInterceptor interceptor
	public final void <a class="d" name="addInterceptor" href="/source/s?defs=addInterceptor">addInterceptor</a> (org.apache.http.HttpResponseInterceptor, int) 
		org.apache.http.HttpResponseInterceptor interceptor
		int index
	public int <a class="d" name="getResponseInterceptorCount" href="/source/s?defs=getResponseInterceptorCount">getResponseInterceptorCount</a> () 
	public org.apache.http.HttpResponseInterceptor <a class="d" name="getResponseInterceptor" href="/source/s?defs=getResponseInterceptor">getResponseInterceptor</a> (int) 
		int index
	public void <a class="d" name="clearResponseInterceptors" href="/source/s?defs=clearResponseInterceptors">clearResponseInterceptors</a> () 
	public void <a class="d" name="setInterceptors" href="/source/s?defs=setInterceptors">setInterceptors</a> (java.util.List) 
		Object obj
		int i
		java.util.List list
	public void <a class="d" name="clearInterceptors" href="/source/s?defs=clearInterceptors">clearInterceptors</a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpRequestInterceptor interceptor
		int i
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpResponseInterceptor interceptor
		int i
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
	protected void <a class="d" name="copyInterceptors" href="/source/s?defs=copyInterceptors">copyInterceptors</a> (org.apache.http.protocol.BasicHttpProcessor) 
		org.apache.http.protocol.BasicHttpProcessor target
	public org.apache.http.protocol.BasicHttpProcessor <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
		org.apache.http.protocol.BasicHttpProcessor clone
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.protocol.BasicHttpProcessor clone
}
</pre><br/><b>org/apache/http/protocol/SyncBasicHttpContext.class</b><pre><a href="/source/s?path=SyncBasicHttpContext.java">SyncBasicHttpContext.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.SyncBasicHttpContext" href="/source/s?defs=org.apache.http.protocol.SyncBasicHttpContext">org.apache.http.protocol.SyncBasicHttpContext</a> extends <a href="/source/s?defs=org.apache.http.protocol.BasicHttpContext">org.apache.http.protocol.BasicHttpContext</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpContext) 
		org.apache.http.protocol.HttpContext parentContext
	public synchronized java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String id
	public synchronized void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
		String id
		Object obj
	public synchronized java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
		String id
}
</pre><br/><b>org/apache/http/protocol/HttpRequestHandler.class</b><pre><a href="/source/s?path=HttpRequestHandler.java">HttpRequestHandler.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.HttpRequestHandler" href="/source/s?defs=org.apache.http.protocol.HttpRequestHandler">org.apache.http.protocol.HttpRequestHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="handle" href="/source/s?defs=handle">handle</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/protocol/RequestTargetHost.class</b><pre><a href="/source/s?path=RequestTargetHost.java">RequestTargetHost.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestTargetHost" href="/source/s?defs=org.apache.http.protocol.RequestTargetHost">org.apache.http.protocol.RequestTargetHost</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.InetAddress address
		int port
		org.apache.http.HttpConnection conn
		org.apache.http.HttpHost targethost
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.ProtocolVersion ver
		String method
}
</pre><br/><b>org/apache/http/protocol/HttpService.class</b><pre><a href="/source/s?path=HttpService.java">HttpService.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.HttpService" href="/source/s?defs=org.apache.http.protocol.HttpService">org.apache.http.protocol.HttpService</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private volatile org.apache.http.params.HttpParams <a class="d" name="params" href="/source/s?defs=params">params</a>
	private volatile org.apache.http.protocol.HttpProcessor <a class="d" name="processor" href="/source/s?defs=processor">processor</a>
	private volatile org.apache.http.protocol.HttpRequestHandlerResolver <a class="d" name="handlerResolver" href="/source/s?defs=handlerResolver">handlerResolver</a>
	private volatile org.apache.http.ConnectionReuseStrategy <a class="d" name="connStrategy" href="/source/s?defs=connStrategy">connStrategy</a>
	private volatile org.apache.http.HttpResponseFactory <a class="d" name="responseFactory" href="/source/s?defs=responseFactory">responseFactory</a>
	private volatile org.apache.http.protocol.HttpExpectationVerifier <a class="d" name="expectationVerifier" href="/source/s?defs=expectationVerifier">expectationVerifier</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.HttpResponseFactory, org.apache.http.protocol.HttpRequestHandlerResolver, org.apache.http.protocol.HttpExpectationVerifier, org.apache.http.params.HttpParams) 
		org.apache.http.protocol.HttpProcessor processor
		org.apache.http.ConnectionReuseStrategy connStrategy
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.protocol.HttpRequestHandlerResolver handlerResolver
		org.apache.http.protocol.HttpExpectationVerifier expectationVerifier
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.HttpResponseFactory, org.apache.http.protocol.HttpRequestHandlerResolver, org.apache.http.params.HttpParams) 
		org.apache.http.protocol.HttpProcessor processor
		org.apache.http.ConnectionReuseStrategy connStrategy
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.protocol.HttpRequestHandlerResolver handlerResolver
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.HttpResponseFactory) 
		org.apache.http.protocol.HttpProcessor proc
		org.apache.http.ConnectionReuseStrategy connStrategy
		org.apache.http.HttpResponseFactory responseFactory
	public void <a class="d" name="setHttpProcessor" href="/source/s?defs=setHttpProcessor">setHttpProcessor</a> (org.apache.http.protocol.HttpProcessor) 
		org.apache.http.protocol.HttpProcessor processor
	public void <a class="d" name="setConnReuseStrategy" href="/source/s?defs=setConnReuseStrategy">setConnReuseStrategy</a> (org.apache.http.ConnectionReuseStrategy) 
		org.apache.http.ConnectionReuseStrategy connStrategy
	public void <a class="d" name="setResponseFactory" href="/source/s?defs=setResponseFactory">setResponseFactory</a> (org.apache.http.HttpResponseFactory) 
		org.apache.http.HttpResponseFactory responseFactory
	public void <a class="d" name="setParams" href="/source/s?defs=setParams">setParams</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setHandlerResolver" href="/source/s?defs=setHandlerResolver">setHandlerResolver</a> (org.apache.http.protocol.HttpRequestHandlerResolver) 
		org.apache.http.protocol.HttpRequestHandlerResolver handlerResolver
	public void <a class="d" name="setExpectationVerifier" href="/source/s?defs=setExpectationVerifier">setExpectationVerifier</a> (org.apache.http.protocol.HttpExpectationVerifier) 
		org.apache.http.protocol.HttpExpectationVerifier expectationVerifier
	public org.apache.http.params.HttpParams <a class="d" name="getParams" href="/source/s?defs=getParams">getParams</a> () 
	public void <a class="d" name="handleRequest" href="/source/s?defs=handleRequest">handleRequest</a> (org.apache.http.HttpServerConnection, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpException ex
		org.apache.http.HttpEntity entity
		org.apache.http.HttpRequest request
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpException ex
		org.apache.http.HttpServerConnection conn
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpResponse response
	protected void <a class="d" name="handleException" href="/source/s?defs=handleException">handleException</a> (org.apache.http.HttpException, org.apache.http.HttpResponse) 
		org.apache.http.HttpException ex
		org.apache.http.HttpResponse response
		byte[] msg
		org.apache.http.entity.ByteArrayEntity entity
	protected void <a class="d" name="doService" href="/source/s?defs=doService">doService</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String requestURI
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.protocol.HttpRequestHandler handler
}
</pre><br/><b>org/apache/http/protocol/HttpDateGenerator.class</b><pre><a href="/source/s?path=HttpDateGenerator.java">HttpDateGenerator.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.HttpDateGenerator" href="/source/s?defs=org.apache.http.protocol.HttpDateGenerator">org.apache.http.protocol.HttpDateGenerator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="PATTERN_RFC1123" href="/source/s?defs=PATTERN_RFC1123">PATTERN_RFC1123</a>
	public static final java.util.TimeZone <a class="d" name="GMT" href="/source/s?defs=GMT">GMT</a>
	private final java.text.DateFormat <a class="d" name="dateformat" href="/source/s?defs=dateformat">dateformat</a>
	private long <a class="d" name="dateAsLong" href="/source/s?defs=dateAsLong">dateAsLong</a>
	private String <a class="d" name="dateAsText" href="/source/s?defs=dateAsText">dateAsText</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public synchronized java.lang.String <a class="d" name="getCurrentDate" href="/source/s?defs=getCurrentDate">getCurrentDate</a> () 
		long now
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/protocol/HTTP.class</b><pre><a href="/source/s?path=HTTP.java">HTTP.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public final <a class="d" name="org.apache.http.protocol.HTTP" href="/source/s?defs=org.apache.http.protocol.HTTP">org.apache.http.protocol.HTTP</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final int <a class="d" name="CR" href="/source/s?defs=CR">CR</a>
	public static final int <a class="d" name="LF" href="/source/s?defs=LF">LF</a>
	public static final int <a class="d" name="SP" href="/source/s?defs=SP">SP</a>
	public static final int <a class="d" name="HT" href="/source/s?defs=HT">HT</a>
	public static final String <a class="d" name="TRANSFER_ENCODING" href="/source/s?defs=TRANSFER_ENCODING">TRANSFER_ENCODING</a>
	public static final String <a class="d" name="CONTENT_LEN" href="/source/s?defs=CONTENT_LEN">CONTENT_LEN</a>
	public static final String <a class="d" name="CONTENT_TYPE" href="/source/s?defs=CONTENT_TYPE">CONTENT_TYPE</a>
	public static final String <a class="d" name="CONTENT_ENCODING" href="/source/s?defs=CONTENT_ENCODING">CONTENT_ENCODING</a>
	public static final String <a class="d" name="EXPECT_DIRECTIVE" href="/source/s?defs=EXPECT_DIRECTIVE">EXPECT_DIRECTIVE</a>
	public static final String <a class="d" name="CONN_DIRECTIVE" href="/source/s?defs=CONN_DIRECTIVE">CONN_DIRECTIVE</a>
	public static final String <a class="d" name="TARGET_HOST" href="/source/s?defs=TARGET_HOST">TARGET_HOST</a>
	public static final String <a class="d" name="USER_AGENT" href="/source/s?defs=USER_AGENT">USER_AGENT</a>
	public static final String <a class="d" name="DATE_HEADER" href="/source/s?defs=DATE_HEADER">DATE_HEADER</a>
	public static final String <a class="d" name="SERVER_HEADER" href="/source/s?defs=SERVER_HEADER">SERVER_HEADER</a>
	public static final String <a class="d" name="EXPECT_CONTINUE" href="/source/s?defs=EXPECT_CONTINUE">EXPECT_CONTINUE</a>
	public static final String <a class="d" name="CONN_CLOSE" href="/source/s?defs=CONN_CLOSE">CONN_CLOSE</a>
	public static final String <a class="d" name="CONN_KEEP_ALIVE" href="/source/s?defs=CONN_KEEP_ALIVE">CONN_KEEP_ALIVE</a>
	public static final String <a class="d" name="CHUNK_CODING" href="/source/s?defs=CHUNK_CODING">CHUNK_CODING</a>
	public static final String <a class="d" name="IDENTITY_CODING" href="/source/s?defs=IDENTITY_CODING">IDENTITY_CODING</a>
	public static final String <a class="d" name="UTF_8" href="/source/s?defs=UTF_8">UTF_8</a>
	public static final String <a class="d" name="UTF_16" href="/source/s?defs=UTF_16">UTF_16</a>
	public static final String <a class="d" name="US_ASCII" href="/source/s?defs=US_ASCII">US_ASCII</a>
	public static final String <a class="d" name="ASCII" href="/source/s?defs=ASCII">ASCII</a>
	public static final String <a class="d" name="ISO_8859_1" href="/source/s?defs=ISO_8859_1">ISO_8859_1</a>
	public static final String <a class="d" name="DEFAULT_CONTENT_CHARSET" href="/source/s?defs=DEFAULT_CONTENT_CHARSET">DEFAULT_CONTENT_CHARSET</a>
	public static final String <a class="d" name="DEFAULT_PROTOCOL_CHARSET" href="/source/s?defs=DEFAULT_PROTOCOL_CHARSET">DEFAULT_PROTOCOL_CHARSET</a>
	public static final String <a class="d" name="OCTET_STREAM_TYPE" href="/source/s?defs=OCTET_STREAM_TYPE">OCTET_STREAM_TYPE</a>
	public static final String <a class="d" name="PLAIN_TEXT_TYPE" href="/source/s?defs=PLAIN_TEXT_TYPE">PLAIN_TEXT_TYPE</a>
	public static final String <a class="d" name="CHARSET_PARAM" href="/source/s?defs=CHARSET_PARAM">CHARSET_PARAM</a>
	public static final String <a class="d" name="DEFAULT_CONTENT_TYPE" href="/source/s?defs=DEFAULT_CONTENT_TYPE">DEFAULT_CONTENT_TYPE</a>
	public static boolean <a class="d" name="isWhitespace" href="/source/s?defs=isWhitespace">isWhitespace</a> (char) 
		char ch
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/protocol/RequestConnControl.class</b><pre><a href="/source/s?path=RequestConnControl.java">RequestConnControl.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestConnControl" href="/source/s?defs=org.apache.http.protocol.RequestConnControl">org.apache.http.protocol.RequestConnControl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		String method
}
</pre><br/><b>org/apache/http/protocol/HttpRequestExecutor.class</b><pre><a href="/source/s?path=HttpRequestExecutor.java">HttpRequestExecutor.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.HttpRequestExecutor" href="/source/s?defs=org.apache.http.protocol.HttpRequestExecutor">org.apache.http.protocol.HttpRequestExecutor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected boolean <a class="d" name="canResponseHaveBody" href="/source/s?defs=canResponseHaveBody">canResponseHaveBody</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse) 
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		int status
	public org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpResponse response
		java.io.IOException ex
		org.apache.http.HttpException ex
		RuntimeException ex
		org.apache.http.HttpRequest request
		org.apache.http.HttpClientConnection conn
		org.apache.http.protocol.HttpContext context
	private static final void <a class="d" name="closeConnection" href="/source/s?defs=closeConnection">closeConnection</a> (org.apache.http.HttpClientConnection) 
		java.io.IOException ignore
		org.apache.http.HttpClientConnection conn
	public void <a class="d" name="preProcess" href="/source/s?defs=preProcess">preProcess</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpProcessor processor
		org.apache.http.protocol.HttpContext context
	protected org.apache.http.HttpResponse <a class="d" name="doSendRequest" href="/source/s?defs=doSendRequest">doSendRequest</a> (org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		int status
		int tms
		boolean sendentity
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpRequest request
		org.apache.http.HttpClientConnection conn
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpResponse response
	protected org.apache.http.HttpResponse <a class="d" name="doReceiveResponse" href="/source/s?defs=doReceiveResponse">doReceiveResponse</a> (org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.HttpClientConnection conn
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpResponse response
		int statuscode
	public void <a class="d" name="postProcess" href="/source/s?defs=postProcess">postProcess</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpProcessor, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpProcessor processor
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/ImmutableHttpProcessor.class</b><pre><a href="/source/s?path=ImmutableHttpProcessor.java">ImmutableHttpProcessor.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public final <a class="d" name="org.apache.http.protocol.ImmutableHttpProcessor" href="/source/s?defs=org.apache.http.protocol.ImmutableHttpProcessor">org.apache.http.protocol.ImmutableHttpProcessor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.protocol.HttpProcessor">org.apache.http.protocol.HttpProcessor</a>  {
	private final org.apache.http.HttpRequestInterceptor[] <a class="d" name="requestInterceptors" href="/source/s?defs=requestInterceptors">requestInterceptors</a>
	private final org.apache.http.HttpResponseInterceptor[] <a class="d" name="responseInterceptors" href="/source/s?defs=responseInterceptors">responseInterceptors</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpRequestInterceptor[], org.apache.http.HttpResponseInterceptor[]) 
		int i
		int count
		int i
		int count
		org.apache.http.HttpRequestInterceptor[] requestInterceptors
		org.apache.http.HttpResponseInterceptor[] responseInterceptors
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpRequestInterceptorList, org.apache.http.protocol.HttpResponseInterceptorList) 
		int i
		int count
		int i
		int count
		org.apache.http.protocol.HttpRequestInterceptorList requestInterceptors
		org.apache.http.protocol.HttpResponseInterceptorList responseInterceptors
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpRequestInterceptor[]) 
		org.apache.http.HttpRequestInterceptor[] requestInterceptors
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpResponseInterceptor[]) 
		org.apache.http.HttpResponseInterceptor[] responseInterceptors
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		int i
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		int i
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/ResponseConnControl.class</b><pre><a href="/source/s?path=ResponseConnControl.java">ResponseConnControl.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.ResponseConnControl" href="/source/s?defs=org.apache.http.protocol.ResponseConnControl">org.apache.http.protocol.ResponseConnControl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.ProtocolVersion ver
		org.apache.http.Header header
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int status
		org.apache.http.HttpEntity entity
		org.apache.http.HttpRequest request
}
</pre><br/><b>org/apache/http/protocol/ExecutionContext.class</b><pre><a href="/source/s?path=ExecutionContext.java">ExecutionContext.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public abstract <a class="d" name="org.apache.http.protocol.ExecutionContext" href="/source/s?defs=org.apache.http.protocol.ExecutionContext">org.apache.http.protocol.ExecutionContext</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="HTTP_CONNECTION" href="/source/s?defs=HTTP_CONNECTION">HTTP_CONNECTION</a>
	public static final String <a class="d" name="HTTP_REQUEST" href="/source/s?defs=HTTP_REQUEST">HTTP_REQUEST</a>
	public static final String <a class="d" name="HTTP_RESPONSE" href="/source/s?defs=HTTP_RESPONSE">HTTP_RESPONSE</a>
	public static final String <a class="d" name="HTTP_TARGET_HOST" href="/source/s?defs=HTTP_TARGET_HOST">HTTP_TARGET_HOST</a>
	public static final String <a class="d" name="HTTP_PROXY_HOST" href="/source/s?defs=HTTP_PROXY_HOST">HTTP_PROXY_HOST</a>
	public static final String <a class="d" name="HTTP_REQ_SENT" href="/source/s?defs=HTTP_REQ_SENT">HTTP_REQ_SENT</a>
}
</pre><br/><b>org/apache/http/protocol/ResponseServer.class</b><pre><a href="/source/s?path=ResponseServer.java">ResponseServer.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.ResponseServer" href="/source/s?defs=org.apache.http.protocol.ResponseServer">org.apache.http.protocol.ResponseServer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/RequestExpectContinue.class</b><pre><a href="/source/s?path=RequestExpectContinue.java">RequestExpectContinue.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestExpectContinue" href="/source/s?defs=org.apache.http.protocol.RequestExpectContinue">org.apache.http.protocol.RequestExpectContinue</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpEntity entity
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/RequestContent.class</b><pre><a href="/source/s?path=RequestContent.java">RequestContent.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.RequestContent" href="/source/s?defs=org.apache.http.protocol.RequestContent">org.apache.http.protocol.RequestContent</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpEntity entity
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/protocol/UriPatternMatcher.class</b><pre><a href="/source/s?path=UriPatternMatcher.java">UriPatternMatcher.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.UriPatternMatcher" href="/source/s?defs=org.apache.http.protocol.UriPatternMatcher">org.apache.http.protocol.UriPatternMatcher</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.Map <a class="d" name="map" href="/source/s?defs=map">map</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public synchronized void <a class="d" name="register" href="/source/s?defs=register">register</a> (java.lang.String, java.lang.Object) 
		String pattern
		Object obj
	public synchronized void <a class="d" name="unregister" href="/source/s?defs=unregister">unregister</a> (java.lang.String) 
		String pattern
	public synchronized void <a class="d" name="setHandlers" href="/source/s?defs=setHandlers">setHandlers</a> (java.util.Map) 
		java.util.Map map
	public synchronized void <a class="d" name="setObjects" href="/source/s?defs=setObjects">setObjects</a> (java.util.Map) 
		java.util.Map map
	public synchronized java.lang.Object <a class="d" name="lookup" href="/source/s?defs=lookup">lookup</a> (java.lang.String) 
		String pattern
		java.util.Iterator it
		String bestMatch
		String requestURI
		int index
		Object obj
	protected boolean <a class="d" name="matchUriRequestPattern" href="/source/s?defs=matchUriRequestPattern">matchUriRequestPattern</a> (java.lang.String, java.lang.String) 
		String pattern
		String requestUri
}
</pre><br/><b>org/apache/http/protocol/ResponseContent.class</b><pre><a href="/source/s?path=ResponseContent.java">ResponseContent.java</a>
package <a href="/source/s?defs=org.apache.http.protocol">org.apache.http.protocol</a>
public <a class="d" name="org.apache.http.protocol.ResponseContent" href="/source/s?defs=org.apache.http.protocol.ResponseContent">org.apache.http.protocol.ResponseContent</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		long len
		int status
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpEntity entity
}
</pre><br/><b>org/apache/http/UnsupportedHttpVersionException.class</b><pre><a href="/source/s?path=UnsupportedHttpVersionException.java">UnsupportedHttpVersionException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.UnsupportedHttpVersionException" href="/source/s?defs=org.apache.http.UnsupportedHttpVersionException">org.apache.http.UnsupportedHttpVersionException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/HttpInetConnection.class</b><pre><a href="/source/s?path=HttpInetConnection.java">HttpInetConnection.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpInetConnection" href="/source/s?defs=org.apache.http.HttpInetConnection">org.apache.http.HttpInetConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpConnection">org.apache.http.HttpConnection</a>  {
	public abstract java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public abstract int <a class="d" name="getLocalPort" href="/source/s?defs=getLocalPort">getLocalPort</a> () 
	public abstract java.net.InetAddress <a class="d" name="getRemoteAddress" href="/source/s?defs=getRemoteAddress">getRemoteAddress</a> () 
	public abstract int <a class="d" name="getRemotePort" href="/source/s?defs=getRemotePort">getRemotePort</a> () 
}
</pre><br/><b>org/apache/http/ConnectionReuseStrategy.class</b><pre><a href="/source/s?path=ConnectionReuseStrategy.java">ConnectionReuseStrategy.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.ConnectionReuseStrategy" href="/source/s?defs=org.apache.http.ConnectionReuseStrategy">org.apache.http.ConnectionReuseStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="keepAlive" href="/source/s?defs=keepAlive">keepAlive</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
}
</pre><br/><b>org/apache/http/HttpResponseInterceptor.class</b><pre><a href="/source/s?path=HttpResponseInterceptor.java">HttpResponseInterceptor.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpResponseInterceptor" href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/HttpHost.class</b><pre><a href="/source/s?path=HttpHost.java">HttpHost.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public final <a class="d" name="org.apache.http.HttpHost" href="/source/s?defs=org.apache.http.HttpHost">org.apache.http.HttpHost</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public static final String <a class="d" name="DEFAULT_SCHEME_NAME" href="/source/s?defs=DEFAULT_SCHEME_NAME">DEFAULT_SCHEME_NAME</a>
	protected final String <a class="d" name="hostname" href="/source/s?defs=hostname">hostname</a>
	protected final String <a class="d" name="lcHostname" href="/source/s?defs=lcHostname">lcHostname</a>
	protected final int <a class="d" name="port" href="/source/s?defs=port">port</a>
	protected final String <a class="d" name="schemeName" href="/source/s?defs=schemeName">schemeName</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, java.lang.String) 
		String hostname
		int port
		String scheme
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
		String hostname
		int port
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String hostname
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost httphost
	public java.lang.String <a class="d" name="getHostName" href="/source/s?defs=getHostName">getHostName</a> () 
	public int <a class="d" name="getPort" href="/source/s?defs=getPort">getPort</a> () 
	public java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public java.lang.String <a class="d" name="toURI" href="/source/s?defs=toURI">toURI</a> () 
		org.apache.http.util.CharArrayBuffer buffer
	public java.lang.String <a class="d" name="toHostString" href="/source/s?defs=toHostString">toHostString</a> () 
		org.apache.http.util.CharArrayBuffer buffer
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.HttpHost that
		Object obj
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/io/HttpTransportMetrics.class</b><pre><a href="/source/s?path=HttpTransportMetrics.java">HttpTransportMetrics.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.HttpTransportMetrics" href="/source/s?defs=org.apache.http.io.HttpTransportMetrics">org.apache.http.io.HttpTransportMetrics</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract long <a class="d" name="getBytesTransferred" href="/source/s?defs=getBytesTransferred">getBytesTransferred</a> () 
	public abstract void <a class="d" name="reset" href="/source/s?defs=reset">reset</a> () 
}
</pre><br/><b>org/apache/http/io/BufferInfo.class</b><pre><a href="/source/s?path=BufferInfo.java">BufferInfo.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.BufferInfo" href="/source/s?defs=org.apache.http.io.BufferInfo">org.apache.http.io.BufferInfo</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract int <a class="d" name="length" href="/source/s?defs=length">length</a> () 
	public abstract int <a class="d" name="capacity" href="/source/s?defs=capacity">capacity</a> () 
	public abstract int <a class="d" name="available" href="/source/s?defs=available">available</a> () 
}
</pre><br/><b>org/apache/http/io/SessionInputBuffer.class</b><pre><a href="/source/s?path=SessionInputBuffer.java">SessionInputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.SessionInputBuffer" href="/source/s?defs=org.apache.http.io.SessionInputBuffer">org.apache.http.io.SessionInputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract int <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract java.lang.String <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract boolean <a class="d" name="isDataAvailable" href="/source/s?defs=isDataAvailable">isDataAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/io/EofSensor.class</b><pre><a href="/source/s?path=EofSensor.java">EofSensor.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.EofSensor" href="/source/s?defs=org.apache.http.io.EofSensor">org.apache.http.io.EofSensor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isEof" href="/source/s?defs=isEof">isEof</a> () 
}
</pre><br/><b>org/apache/http/io/HttpMessageParser.class</b><pre><a href="/source/s?path=HttpMessageParser.java">HttpMessageParser.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.HttpMessageParser" href="/source/s?defs=org.apache.http.io.HttpMessageParser">org.apache.http.io.HttpMessageParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HttpMessage <a class="d" name="parse" href="/source/s?defs=parse">parse</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
}
</pre><br/><b>org/apache/http/io/HttpMessageWriter.class</b><pre><a href="/source/s?path=HttpMessageWriter.java">HttpMessageWriter.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.HttpMessageWriter" href="/source/s?defs=org.apache.http.io.HttpMessageWriter">org.apache.http.io.HttpMessageWriter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="write" href="/source/s?defs=write">write</a> (org.apache.http.HttpMessage)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
}
</pre><br/><b>org/apache/http/io/SessionOutputBuffer.class</b><pre><a href="/source/s?path=SessionOutputBuffer.java">SessionOutputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.io">org.apache.http.io</a>
public abstract <a class="d" name="org.apache.http.io.SessionOutputBuffer" href="/source/s?defs=org.apache.http.io.SessionOutputBuffer">org.apache.http.io.SessionOutputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/HttpRequestFactory.class</b><pre><a href="/source/s?path=HttpRequestFactory.java">HttpRequestFactory.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpRequestFactory" href="/source/s?defs=org.apache.http.HttpRequestFactory">org.apache.http.HttpRequestFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HttpRequest <a class="d" name="newHttpRequest" href="/source/s?defs=newHttpRequest">newHttpRequest</a> (org.apache.http.RequestLine)  throws <a href="/source/s?defs=org.apache.http.MethodNotSupportedException">org.apache.http.MethodNotSupportedException</a> 
	public abstract org.apache.http.HttpRequest <a class="d" name="newHttpRequest" href="/source/s?defs=newHttpRequest">newHttpRequest</a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.MethodNotSupportedException">org.apache.http.MethodNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/MethodNotSupportedException.class</b><pre><a href="/source/s?path=MethodNotSupportedException.java">MethodNotSupportedException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.MethodNotSupportedException" href="/source/s?defs=org.apache.http.MethodNotSupportedException">org.apache.http.MethodNotSupportedException</a> extends <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/HeaderElement.class</b><pre><a href="/source/s?path=HeaderElement.java">HeaderElement.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HeaderElement" href="/source/s?defs=org.apache.http.HeaderElement">org.apache.http.HeaderElement</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public abstract java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public abstract org.apache.http.NameValuePair[] <a class="d" name="getParameters" href="/source/s?defs=getParameters">getParameters</a> () 
	public abstract org.apache.http.NameValuePair <a class="d" name="getParameterByName" href="/source/s?defs=getParameterByName">getParameterByName</a> (java.lang.String) 
	public abstract int <a class="d" name="getParameterCount" href="/source/s?defs=getParameterCount">getParameterCount</a> () 
	public abstract org.apache.http.NameValuePair <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (int) 
}
</pre><br/><b>org/apache/http/params/HttpConnectionParams.class</b><pre><a href="/source/s?path=HttpConnectionParams.java">HttpConnectionParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public final <a class="d" name="org.apache.http.params.HttpConnectionParams" href="/source/s?defs=org.apache.http.params.HttpConnectionParams">org.apache.http.params.HttpConnectionParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.params.CoreConnectionPNames">org.apache.http.params.CoreConnectionPNames</a>  {
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static int <a class="d" name="getSoTimeout" href="/source/s?defs=getSoTimeout">getSoTimeout</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setSoTimeout" href="/source/s?defs=setSoTimeout">setSoTimeout</a> (org.apache.http.params.HttpParams, int) 
		org.apache.http.params.HttpParams params
		int timeout
	public static boolean <a class="d" name="getSoReuseaddr" href="/source/s?defs=getSoReuseaddr">getSoReuseaddr</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setSoReuseaddr" href="/source/s?defs=setSoReuseaddr">setSoReuseaddr</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean reuseaddr
	public static boolean <a class="d" name="getTcpNoDelay" href="/source/s?defs=getTcpNoDelay">getTcpNoDelay</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setTcpNoDelay" href="/source/s?defs=setTcpNoDelay">setTcpNoDelay</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean value
	public static int <a class="d" name="getSocketBufferSize" href="/source/s?defs=getSocketBufferSize">getSocketBufferSize</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setSocketBufferSize" href="/source/s?defs=setSocketBufferSize">setSocketBufferSize</a> (org.apache.http.params.HttpParams, int) 
		org.apache.http.params.HttpParams params
		int size
	public static int <a class="d" name="getLinger" href="/source/s?defs=getLinger">getLinger</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setLinger" href="/source/s?defs=setLinger">setLinger</a> (org.apache.http.params.HttpParams, int) 
		org.apache.http.params.HttpParams params
		int value
	public static int <a class="d" name="getConnectionTimeout" href="/source/s?defs=getConnectionTimeout">getConnectionTimeout</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setConnectionTimeout" href="/source/s?defs=setConnectionTimeout">setConnectionTimeout</a> (org.apache.http.params.HttpParams, int) 
		org.apache.http.params.HttpParams params
		int timeout
	public static boolean <a class="d" name="isStaleCheckingEnabled" href="/source/s?defs=isStaleCheckingEnabled">isStaleCheckingEnabled</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setStaleCheckingEnabled" href="/source/s?defs=setStaleCheckingEnabled">setStaleCheckingEnabled</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean value
}
</pre><br/><b>org/apache/http/params/HttpAbstractParamBean.class</b><pre><a href="/source/s?path=HttpAbstractParamBean.java">HttpAbstractParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public abstract <a class="d" name="org.apache.http.params.HttpAbstractParamBean" href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	protected final org.apache.http.params.HttpParams <a class="d" name="params" href="/source/s?defs=params">params</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/params/CoreProtocolPNames.class</b><pre><a href="/source/s?path=CoreProtocolPNames.java">CoreProtocolPNames.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public abstract <a class="d" name="org.apache.http.params.CoreProtocolPNames" href="/source/s?defs=org.apache.http.params.CoreProtocolPNames">org.apache.http.params.CoreProtocolPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="PROTOCOL_VERSION" href="/source/s?defs=PROTOCOL_VERSION">PROTOCOL_VERSION</a>
	public static final String <a class="d" name="HTTP_ELEMENT_CHARSET" href="/source/s?defs=HTTP_ELEMENT_CHARSET">HTTP_ELEMENT_CHARSET</a>
	public static final String <a class="d" name="HTTP_CONTENT_CHARSET" href="/source/s?defs=HTTP_CONTENT_CHARSET">HTTP_CONTENT_CHARSET</a>
	public static final String <a class="d" name="USER_AGENT" href="/source/s?defs=USER_AGENT">USER_AGENT</a>
	public static final String <a class="d" name="ORIGIN_SERVER" href="/source/s?defs=ORIGIN_SERVER">ORIGIN_SERVER</a>
	public static final String <a class="d" name="STRICT_TRANSFER_ENCODING" href="/source/s?defs=STRICT_TRANSFER_ENCODING">STRICT_TRANSFER_ENCODING</a>
	public static final String <a class="d" name="USE_EXPECT_CONTINUE" href="/source/s?defs=USE_EXPECT_CONTINUE">USE_EXPECT_CONTINUE</a>
	public static final String <a class="d" name="WAIT_FOR_CONTINUE" href="/source/s?defs=WAIT_FOR_CONTINUE">WAIT_FOR_CONTINUE</a>
}
</pre><br/><b>org/apache/http/params/DefaultedHttpParams.class</b><pre><a href="/source/s?path=DefaultedHttpParams.java">DefaultedHttpParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public final <a class="d" name="org.apache.http.params.DefaultedHttpParams" href="/source/s?defs=org.apache.http.params.DefaultedHttpParams">org.apache.http.params.DefaultedHttpParams</a> extends <a href="/source/s?defs=org.apache.http.params.AbstractHttpParams">org.apache.http.params.AbstractHttpParams</a> {
	private final org.apache.http.params.HttpParams <a class="d" name="local" href="/source/s?defs=local">local</a>
	private final org.apache.http.params.HttpParams <a class="d" name="defaults" href="/source/s?defs=defaults">defaults</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams, org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams local
		org.apache.http.params.HttpParams defaults
	public org.apache.http.params.HttpParams <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
		org.apache.http.params.HttpParams clone
	public java.lang.Object <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
		Object obj
	public boolean <a class="d" name="removeParameter" href="/source/s?defs=removeParameter">removeParameter</a> (java.lang.String) 
		String name
	public org.apache.http.params.HttpParams <a class="d" name="setParameter" href="/source/s?defs=setParameter">setParameter</a> (java.lang.String, java.lang.Object) 
		String name
		Object value
	public org.apache.http.params.HttpParams <a class="d" name="getDefaults" href="/source/s?defs=getDefaults">getDefaults</a> () 
}
</pre><br/><b>org/apache/http/params/CoreConnectionPNames.class</b><pre><a href="/source/s?path=CoreConnectionPNames.java">CoreConnectionPNames.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public abstract <a class="d" name="org.apache.http.params.CoreConnectionPNames" href="/source/s?defs=org.apache.http.params.CoreConnectionPNames">org.apache.http.params.CoreConnectionPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="SO_TIMEOUT" href="/source/s?defs=SO_TIMEOUT">SO_TIMEOUT</a>
	public static final String <a class="d" name="TCP_NODELAY" href="/source/s?defs=TCP_NODELAY">TCP_NODELAY</a>
	public static final String <a class="d" name="SOCKET_BUFFER_SIZE" href="/source/s?defs=SOCKET_BUFFER_SIZE">SOCKET_BUFFER_SIZE</a>
	public static final String <a class="d" name="SO_LINGER" href="/source/s?defs=SO_LINGER">SO_LINGER</a>
	public static final String <a class="d" name="SO_REUSEADDR" href="/source/s?defs=SO_REUSEADDR">SO_REUSEADDR</a>
	public static final String <a class="d" name="CONNECTION_TIMEOUT" href="/source/s?defs=CONNECTION_TIMEOUT">CONNECTION_TIMEOUT</a>
	public static final String <a class="d" name="STALE_CONNECTION_CHECK" href="/source/s?defs=STALE_CONNECTION_CHECK">STALE_CONNECTION_CHECK</a>
	public static final String <a class="d" name="MAX_LINE_LENGTH" href="/source/s?defs=MAX_LINE_LENGTH">MAX_LINE_LENGTH</a>
	public static final String <a class="d" name="MAX_HEADER_COUNT" href="/source/s?defs=MAX_HEADER_COUNT">MAX_HEADER_COUNT</a>
	public static final String <a class="d" name="MIN_CHUNK_LIMIT" href="/source/s?defs=MIN_CHUNK_LIMIT">MIN_CHUNK_LIMIT</a>
}
</pre><br/><b>org/apache/http/params/AbstractHttpParams.class</b><pre><a href="/source/s?path=AbstractHttpParams.java">AbstractHttpParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public abstract <a class="d" name="org.apache.http.params.AbstractHttpParams" href="/source/s?defs=org.apache.http.params.AbstractHttpParams">org.apache.http.params.AbstractHttpParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.params.HttpParams">org.apache.http.params.HttpParams</a>  {
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="getLongParameter" href="/source/s?defs=getLongParameter">getLongParameter</a> (java.lang.String, long) 
		String name
		long defaultValue
		Object param
	public org.apache.http.params.HttpParams <a class="d" name="setLongParameter" href="/source/s?defs=setLongParameter">setLongParameter</a> (java.lang.String, long) 
		String name
		long value
	public int <a class="d" name="getIntParameter" href="/source/s?defs=getIntParameter">getIntParameter</a> (java.lang.String, int) 
		String name
		int defaultValue
		Object param
	public org.apache.http.params.HttpParams <a class="d" name="setIntParameter" href="/source/s?defs=setIntParameter">setIntParameter</a> (java.lang.String, int) 
		String name
		int value
	public double <a class="d" name="getDoubleParameter" href="/source/s?defs=getDoubleParameter">getDoubleParameter</a> (java.lang.String, double) 
		String name
		double defaultValue
		Object param
	public org.apache.http.params.HttpParams <a class="d" name="setDoubleParameter" href="/source/s?defs=setDoubleParameter">setDoubleParameter</a> (java.lang.String, double) 
		String name
		double value
	public boolean <a class="d" name="getBooleanParameter" href="/source/s?defs=getBooleanParameter">getBooleanParameter</a> (java.lang.String, boolean) 
		String name
		boolean defaultValue
		Object param
	public org.apache.http.params.HttpParams <a class="d" name="setBooleanParameter" href="/source/s?defs=setBooleanParameter">setBooleanParameter</a> (java.lang.String, boolean) 
		String name
		boolean value
	public boolean <a class="d" name="isParameterTrue" href="/source/s?defs=isParameterTrue">isParameterTrue</a> (java.lang.String) 
		String name
	public boolean <a class="d" name="isParameterFalse" href="/source/s?defs=isParameterFalse">isParameterFalse</a> (java.lang.String) 
		String name
}
</pre><br/><b>org/apache/http/params/HttpParams.class</b><pre><a href="/source/s?path=HttpParams.java">HttpParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public abstract <a class="d" name="org.apache.http.params.HttpParams" href="/source/s?defs=org.apache.http.params.HttpParams">org.apache.http.params.HttpParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.Object <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="setParameter" href="/source/s?defs=setParameter">setParameter</a> (java.lang.String, java.lang.Object) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
	public abstract boolean <a class="d" name="removeParameter" href="/source/s?defs=removeParameter">removeParameter</a> (java.lang.String) 
	public abstract long <a class="d" name="getLongParameter" href="/source/s?defs=getLongParameter">getLongParameter</a> (java.lang.String, long) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="setLongParameter" href="/source/s?defs=setLongParameter">setLongParameter</a> (java.lang.String, long) 
	public abstract int <a class="d" name="getIntParameter" href="/source/s?defs=getIntParameter">getIntParameter</a> (java.lang.String, int) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="setIntParameter" href="/source/s?defs=setIntParameter">setIntParameter</a> (java.lang.String, int) 
	public abstract double <a class="d" name="getDoubleParameter" href="/source/s?defs=getDoubleParameter">getDoubleParameter</a> (java.lang.String, double) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="setDoubleParameter" href="/source/s?defs=setDoubleParameter">setDoubleParameter</a> (java.lang.String, double) 
	public abstract boolean <a class="d" name="getBooleanParameter" href="/source/s?defs=getBooleanParameter">getBooleanParameter</a> (java.lang.String, boolean) 
	public abstract org.apache.http.params.HttpParams <a class="d" name="setBooleanParameter" href="/source/s?defs=setBooleanParameter">setBooleanParameter</a> (java.lang.String, boolean) 
	public abstract boolean <a class="d" name="isParameterTrue" href="/source/s?defs=isParameterTrue">isParameterTrue</a> (java.lang.String) 
	public abstract boolean <a class="d" name="isParameterFalse" href="/source/s?defs=isParameterFalse">isParameterFalse</a> (java.lang.String) 
}
</pre><br/><b>org/apache/http/params/BasicHttpParams.class</b><pre><a href="/source/s?path=BasicHttpParams.java">BasicHttpParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public <a class="d" name="org.apache.http.params.BasicHttpParams" href="/source/s?defs=org.apache.http.params.BasicHttpParams">org.apache.http.params.BasicHttpParams</a> extends <a href="/source/s?defs=org.apache.http.params.AbstractHttpParams">org.apache.http.params.AbstractHttpParams</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final java.util.HashMap <a class="d" name="parameters" href="/source/s?defs=parameters">parameters</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.lang.Object <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
	public org.apache.http.params.HttpParams <a class="d" name="setParameter" href="/source/s?defs=setParameter">setParameter</a> (java.lang.String, java.lang.Object) 
		String name
		Object value
	public boolean <a class="d" name="removeParameter" href="/source/s?defs=removeParameter">removeParameter</a> (java.lang.String) 
		String name
	public void <a class="d" name="setParameters" href="/source/s?defs=setParameters">setParameters</a> (java.lang.String[], java.lang.Object) 
		int i
		String[] names
		Object value
	public boolean <a class="d" name="isParameterSet" href="/source/s?defs=isParameterSet">isParameterSet</a> (java.lang.String) 
		String name
	public boolean <a class="d" name="isParameterSetLocally" href="/source/s?defs=isParameterSetLocally">isParameterSetLocally</a> (java.lang.String) 
		String name
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public org.apache.http.params.HttpParams <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
		CloneNotSupportedException ex
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.params.BasicHttpParams clone
	protected void <a class="d" name="copyParams" href="/source/s?defs=copyParams">copyParams</a> (org.apache.http.params.HttpParams) 
		java.util.Map$Entry me
		org.apache.http.params.HttpParams target
		java.util.Iterator iter
}
</pre><br/><b>org/apache/http/params/HttpProtocolParamBean.class</b><pre><a href="/source/s?path=HttpProtocolParamBean.java">HttpProtocolParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public <a class="d" name="org.apache.http.params.HttpProtocolParamBean" href="/source/s?defs=org.apache.http.params.HttpProtocolParamBean">org.apache.http.params.HttpProtocolParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setHttpElementCharset" href="/source/s?defs=setHttpElementCharset">setHttpElementCharset</a> (java.lang.String) 
		String httpElementCharset
	public void <a class="d" name="setContentCharset" href="/source/s?defs=setContentCharset">setContentCharset</a> (java.lang.String) 
		String contentCharset
	public void <a class="d" name="setVersion" href="/source/s?defs=setVersion">setVersion</a> (org.apache.http.HttpVersion) 
		org.apache.http.HttpVersion version
	public void <a class="d" name="setUserAgent" href="/source/s?defs=setUserAgent">setUserAgent</a> (java.lang.String) 
		String userAgent
	public void <a class="d" name="setUseExpectContinue" href="/source/s?defs=setUseExpectContinue">setUseExpectContinue</a> (boolean) 
		boolean useExpectContinue
}
</pre><br/><b>org/apache/http/params/HttpProtocolParams.class</b><pre><a href="/source/s?path=HttpProtocolParams.java">HttpProtocolParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public final <a class="d" name="org.apache.http.params.HttpProtocolParams" href="/source/s?defs=org.apache.http.params.HttpProtocolParams">org.apache.http.params.HttpProtocolParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.params.CoreProtocolPNames">org.apache.http.params.CoreProtocolPNames</a>  {
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static java.lang.String <a class="d" name="getHttpElementCharset" href="/source/s?defs=getHttpElementCharset">getHttpElementCharset</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		String charset
	public static void <a class="d" name="setHttpElementCharset" href="/source/s?defs=setHttpElementCharset">setHttpElementCharset</a> (org.apache.http.params.HttpParams, java.lang.String) 
		org.apache.http.params.HttpParams params
		String charset
	public static java.lang.String <a class="d" name="getContentCharset" href="/source/s?defs=getContentCharset">getContentCharset</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		String charset
	public static void <a class="d" name="setContentCharset" href="/source/s?defs=setContentCharset">setContentCharset</a> (org.apache.http.params.HttpParams, java.lang.String) 
		org.apache.http.params.HttpParams params
		String charset
	public static org.apache.http.ProtocolVersion <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		Object param
	public static void <a class="d" name="setVersion" href="/source/s?defs=setVersion">setVersion</a> (org.apache.http.params.HttpParams, org.apache.http.ProtocolVersion) 
		org.apache.http.params.HttpParams params
		org.apache.http.ProtocolVersion version
	public static java.lang.String <a class="d" name="getUserAgent" href="/source/s?defs=getUserAgent">getUserAgent</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setUserAgent" href="/source/s?defs=setUserAgent">setUserAgent</a> (org.apache.http.params.HttpParams, java.lang.String) 
		org.apache.http.params.HttpParams params
		String useragent
	public static boolean <a class="d" name="useExpectContinue" href="/source/s?defs=useExpectContinue">useExpectContinue</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setUseExpectContinue" href="/source/s?defs=setUseExpectContinue">setUseExpectContinue</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean b
}
</pre><br/><b>org/apache/http/params/SyncBasicHttpParams.class</b><pre><a href="/source/s?path=SyncBasicHttpParams.java">SyncBasicHttpParams.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public <a class="d" name="org.apache.http.params.SyncBasicHttpParams" href="/source/s?defs=org.apache.http.params.SyncBasicHttpParams">org.apache.http.params.SyncBasicHttpParams</a> extends <a href="/source/s?defs=org.apache.http.params.BasicHttpParams">org.apache.http.params.BasicHttpParams</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public synchronized boolean <a class="d" name="removeParameter" href="/source/s?defs=removeParameter">removeParameter</a> (java.lang.String) 
		String name
	public synchronized org.apache.http.params.HttpParams <a class="d" name="setParameter" href="/source/s?defs=setParameter">setParameter</a> (java.lang.String, java.lang.Object) 
		String name
		Object value
	public synchronized java.lang.Object <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
	public synchronized boolean <a class="d" name="isParameterSet" href="/source/s?defs=isParameterSet">isParameterSet</a> (java.lang.String) 
		String name
	public synchronized boolean <a class="d" name="isParameterSetLocally" href="/source/s?defs=isParameterSetLocally">isParameterSetLocally</a> (java.lang.String) 
		String name
	public synchronized void <a class="d" name="setParameters" href="/source/s?defs=setParameters">setParameters</a> (java.lang.String[], java.lang.Object) 
		String[] names
		Object value
	public synchronized void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public synchronized java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/params/HttpConnectionParamBean.class</b><pre><a href="/source/s?path=HttpConnectionParamBean.java">HttpConnectionParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.params">org.apache.http.params</a>
public <a class="d" name="org.apache.http.params.HttpConnectionParamBean" href="/source/s?defs=org.apache.http.params.HttpConnectionParamBean">org.apache.http.params.HttpConnectionParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setSoTimeout" href="/source/s?defs=setSoTimeout">setSoTimeout</a> (int) 
		int soTimeout
	public void <a class="d" name="setTcpNoDelay" href="/source/s?defs=setTcpNoDelay">setTcpNoDelay</a> (boolean) 
		boolean tcpNoDelay
	public void <a class="d" name="setSocketBufferSize" href="/source/s?defs=setSocketBufferSize">setSocketBufferSize</a> (int) 
		int socketBufferSize
	public void <a class="d" name="setLinger" href="/source/s?defs=setLinger">setLinger</a> (int) 
		int linger
	public void <a class="d" name="setConnectionTimeout" href="/source/s?defs=setConnectionTimeout">setConnectionTimeout</a> (int) 
		int connectionTimeout
	public void <a class="d" name="setStaleCheckingEnabled" href="/source/s?defs=setStaleCheckingEnabled">setStaleCheckingEnabled</a> (boolean) 
		boolean staleCheckingEnabled
}
</pre><br/><b>org/apache/http/ProtocolVersion.class</b><pre><a href="/source/s?path=ProtocolVersion.java">ProtocolVersion.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.ProtocolVersion" href="/source/s?defs=org.apache.http.ProtocolVersion">org.apache.http.ProtocolVersion</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	protected final String <a class="d" name="protocol" href="/source/s?defs=protocol">protocol</a>
	protected final int <a class="d" name="major" href="/source/s?defs=major">major</a>
	protected final int <a class="d" name="minor" href="/source/s?defs=minor">minor</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, int) 
		String protocol
		int major
		int minor
	public final java.lang.String <a class="d" name="getProtocol" href="/source/s?defs=getProtocol">getProtocol</a> () 
	public final int <a class="d" name="getMajor" href="/source/s?defs=getMajor">getMajor</a> () 
	public final int <a class="d" name="getMinor" href="/source/s?defs=getMinor">getMinor</a> () 
	public org.apache.http.ProtocolVersion <a class="d" name="forVersion" href="/source/s?defs=forVersion">forVersion</a> (int, int) 
		int major
		int minor
	public final int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
	public final boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		Object obj
		org.apache.http.ProtocolVersion that
	public boolean <a class="d" name="isComparable" href="/source/s?defs=isComparable">isComparable</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion that
	public int <a class="d" name="compareToVersion" href="/source/s?defs=compareToVersion">compareToVersion</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion that
		int delta
	public final boolean <a class="d" name="greaterEquals" href="/source/s?defs=greaterEquals">greaterEquals</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion version
	public final boolean <a class="d" name="lessEquals" href="/source/s?defs=lessEquals">lessEquals</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion version
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		org.apache.http.util.CharArrayBuffer buffer
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/HttpResponse.class</b><pre><a href="/source/s?path=HttpResponse.java">HttpResponse.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpResponse" href="/source/s?defs=org.apache.http.HttpResponse">org.apache.http.HttpResponse</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpMessage">org.apache.http.HttpMessage</a>  {
	public abstract org.apache.http.StatusLine <a class="d" name="getStatusLine" href="/source/s?defs=getStatusLine">getStatusLine</a> () 
	public abstract void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.StatusLine) 
	public abstract void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.ProtocolVersion, int) 
	public abstract void <a class="d" name="setStatusLine" href="/source/s?defs=setStatusLine">setStatusLine</a> (org.apache.http.ProtocolVersion, int, java.lang.String) 
	public abstract void <a class="d" name="setStatusCode" href="/source/s?defs=setStatusCode">setStatusCode</a> (int)  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public abstract void <a class="d" name="setReasonPhrase" href="/source/s?defs=setReasonPhrase">setReasonPhrase</a> (java.lang.String)  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public abstract org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
	public abstract void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
	public abstract java.util.Locale <a class="d" name="getLocale" href="/source/s?defs=getLocale">getLocale</a> () 
	public abstract void <a class="d" name="setLocale" href="/source/s?defs=setLocale">setLocale</a> (java.util.Locale) 
}
</pre><br/><b>org/apache/http/TruncatedChunkException.class</b><pre><a href="/source/s?path=TruncatedChunkException.java">TruncatedChunkException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.TruncatedChunkException" href="/source/s?defs=org.apache.http.TruncatedChunkException">org.apache.http.TruncatedChunkException</a> extends <a href="/source/s?defs=org.apache.http.MalformedChunkCodingException">org.apache.http.MalformedChunkCodingException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/HttpEntity.class</b><pre><a href="/source/s?path=HttpEntity.java">HttpEntity.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpEntity" href="/source/s?defs=org.apache.http.HttpEntity">org.apache.http.HttpEntity</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public abstract boolean <a class="d" name="isChunked" href="/source/s?defs=isChunked">isChunked</a> () 
	public abstract long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public abstract org.apache.http.Header <a class="d" name="getContentType" href="/source/s?defs=getContentType">getContentType</a> () 
	public abstract org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public abstract java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public abstract void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public abstract void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/ParseException.class</b><pre><a href="/source/s?path=ParseException.java">ParseException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.ParseException" href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> extends <a href="/source/s?defs=java.lang.RuntimeException">java.lang.RuntimeException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/HttpEntityEnclosingRequest.class</b><pre><a href="/source/s?path=HttpEntityEnclosingRequest.java">HttpEntityEnclosingRequest.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpEntityEnclosingRequest" href="/source/s?defs=org.apache.http.HttpEntityEnclosingRequest">org.apache.http.HttpEntityEnclosingRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequest">org.apache.http.HttpRequest</a>  {
	public abstract boolean <a class="d" name="expectContinue" href="/source/s?defs=expectContinue">expectContinue</a> () 
	public abstract void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
	public abstract org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
}
</pre><br/><b>org/apache/http/HeaderIterator.class</b><pre><a href="/source/s?path=HeaderIterator.java">HeaderIterator.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HeaderIterator" href="/source/s?defs=org.apache.http.HeaderIterator">org.apache.http.HeaderIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.util.Iterator">java.util.Iterator</a>  {
	public abstract boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public abstract org.apache.http.Header <a class="d" name="nextHeader" href="/source/s?defs=nextHeader">nextHeader</a> () 
}
</pre><br/><b>org/apache/http/TokenIterator.class</b><pre><a href="/source/s?path=TokenIterator.java">TokenIterator.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.TokenIterator" href="/source/s?defs=org.apache.http.TokenIterator">org.apache.http.TokenIterator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.util.Iterator">java.util.Iterator</a>  {
	public abstract boolean <a class="d" name="hasNext" href="/source/s?defs=hasNext">hasNext</a> () 
	public abstract java.lang.String <a class="d" name="nextToken" href="/source/s?defs=nextToken">nextToken</a> () 
}
</pre><br/><b>org/apache/http/RequestLine.class</b><pre><a href="/source/s?path=RequestLine.java">RequestLine.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.RequestLine" href="/source/s?defs=org.apache.http.RequestLine">org.apache.http.RequestLine</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public abstract org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public abstract java.lang.String <a class="d" name="getUri" href="/source/s?defs=getUri">getUri</a> () 
}
</pre><br/><b>org/apache/http/HttpServerConnection.class</b><pre><a href="/source/s?path=HttpServerConnection.java">HttpServerConnection.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public abstract <a class="d" name="org.apache.http.HttpServerConnection" href="/source/s?defs=org.apache.http.HttpServerConnection">org.apache.http.HttpServerConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpConnection">org.apache.http.HttpConnection</a>  {
	public abstract org.apache.http.HttpRequest <a class="d" name="receiveRequestHeader" href="/source/s?defs=receiveRequestHeader">receiveRequestHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="receiveRequestEntity" href="/source/s?defs=receiveRequestEntity">receiveRequestEntity</a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="sendResponseHeader" href="/source/s?defs=sendResponseHeader">sendResponseHeader</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="sendResponseEntity" href="/source/s?defs=sendResponseEntity">sendResponseEntity</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/ConnectionClosedException.class</b><pre><a href="/source/s?path=ConnectionClosedException.java">ConnectionClosedException.java</a>
package <a href="/source/s?defs=org.apache.http">org.apache.http</a>
public <a class="d" name="org.apache.http.ConnectionClosedException" href="/source/s?defs=org.apache.http.ConnectionClosedException">org.apache.http.ConnectionClosedException</a> extends <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>META-INF/LICENSE.txt</b><br/><b>META-INF/NOTICE.txt</b><br/><b>META-INF/maven/</b><br/><b>META-INF/maven/org.apache.httpcomponents/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpcore/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpcore/pom.xml</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpcore/pom.properties</b></pre>
</div>
    <div id="footer">
<p><a href="http://opengrok.github.com/OpenGrok/"
 title="Served by OpenGrok"><span id="fti"></span></a></p>
<p>
    <a href="http://www.rrzn.uni-hannover.de"><span id="partner_rrzn"></span></a>
    <a href="http://www.uni-hannover.de"><span id="partner_luh"></span></a>
</p>
<p><a href="http://www.metager.de/impressum.html">Impressum (legal notice)</a></p>
    
    </div>
    </div>
</div>
</body>
</html>

