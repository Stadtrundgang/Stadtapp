


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta name="robots" content="index,follow" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="0.11.1 (2b48ae40ea1b)" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<link rel="icon" href="/source/default/img/icon.png" type="image/png" />
<link rel="stylesheet" type="text/css" media="all"
    title="Default" href="/source/default/style.css" />
<link rel="alternate stylesheet" type="text/css" media="all"
    title="Paper White" href="/source/default/print.css" />
<link rel="stylesheet" type="text/css" href="/source/default/print.css" media="print" />
<link rel="stylesheet" type="text/css" href="/source/default/jquery.tooltip.css" />

<link rel="search" href="/source/opensearch"
    type="application/opensearchdescription+xml"
    title="OpenGrok Search for current project(s)" />
<script type="text/javascript" src="/source/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="/source/jquery.tooltip-1.3.pack.js"></script>

<script type="text/javascript" src="/source/utils.js"></script>
<title>Cross Reference: /android/4.4/prebuilts/tools/common/http-client/httpmime-4.1.1.jar</title>
</head>
<body>
<script type="text/javascript">/* <![CDATA[ */
    document.hash = 'null';document.rev = '';document.link = '/source/xref/android/4.4/prebuilts/tools/common/http-client/httpmime-4.1.1.jar';document.annotate = false;
    document.domReady.push(function() {domReadyMast();});
    document.pageReady.push(function() { pageReadyMast();});
/* ]]> */</script>
<div id="page">
    <div id="whole_header">
        <form action="/source/search">
<div id="header">
<a href="/source/" class="cslogo">
    <span style="color: #5a2c00; letter-spacing: -2px;">{</span><span 
        style="color: #0f3368; vertical-align: middle;">Code</span>
    <span style="color: #222222; vertical-align: middle;">Search</span>
</a>
<span id="partner">
    <a href="http://www.metager.de"><span id="partner_metager"></span></a>
</span>



    <div id="pagetitle"><span id="filename"
                    >Cross Reference: httpmime-4.1.1.jar</span></div>
</div>
<div id="Masthead">
    <tt><a href="/source/xref/">xref</a>: /<a href="/source/xref/android/">android</a>/<a href="/source/xref/android/4.4/">4.4</a>/<a href="/source/xref/android/4.4/prebuilts/">prebuilts</a>/<a href="/source/xref/android/4.4/prebuilts/tools/">tools</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/">common</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/">http-client</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/httpmime-4.1.1.jar">httpmime-4.1.1.jar</a></tt>
</div>
<div id="bar">
    <ul>
        <li><a href="/source/"><span id="home"></span>Home</a></li><li><a href="/source/history/android/4.4/prebuilts/tools/common/http-client/httpmime-4.1.1.jar"><span id="history"></span>History</a></li><li><a href="#" onclick="javascript:get_annotations(); return false;"
            ><span class="annotate"></span>Annotate</a></li><li><a href="#" onclick="javascript:lntoggle();return false;"
            title="Show or hide line numbers (might be slower if file has more than 10 000 lines)."><span id="line"></span>Line#</a></li><li><a
            href="#" onclick="javascript:lsttoggle();return false;"
            title="Show or hide symbol list."><span id="defbox"></span>Navigate</a></li><li><a href="/source/raw/android/4.4/prebuilts/tools/common/http-client/httpmime-4.1.1.jar"><span id="download"></span>Download</a></li><li><input type="text" id="search" name="q" class="q" />
            <input type="submit" value="Search" class="submit" /></li><li><input type="checkbox" name="path" value="/android/4.4/prebuilts/tools/common/http-client/" /> only in <b>httpmime-4.1.1.jar</b></li>
        
    </ul>
    <input type="hidden" name="project" value="android" />
</div>
        </form>
    </div>
<div id="content">
<script type="text/javascript">/* <![CDATA[ */
document.pageReady.push(function() { pageReadyList();});
/* ]]> */</script>

<div id="src">
    <pre><br/><b>META-INF/</b><br/><b>META-INF/MANIFEST.MF</b><br/><b>org/</b><br/><b>org/apache/</b><br/><b>org/apache/http/</b><br/><b>org/apache/http/entity/</b><br/><b>org/apache/http/entity/mime/</b><br/><b>org/apache/http/entity/mime/content/</b><br/><b>META-INF/NOTICE.txt</b><br/><b>META-INF/LICENSE.txt</b><br/><b>org/apache/http/entity/mime/HttpMultipart$1.class</b><pre><a href="/source/s?path=HttpMultipart.java">HttpMultipart.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
 <a class="d" name="org.apache.http.entity.mime.HttpMultipart$1" href="/source/s?defs=org.apache.http.entity.mime.HttpMultipart$1">org.apache.http.entity.mime.HttpMultipart$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	static final synthetic int[] <a class="d" name="$SwitchMap$org$apache$http$entity$mime$HttpMultipartMode" href="/source/s?defs=$SwitchMap$org$apache$http$entity$mime$HttpMultipartMode">$SwitchMap$org$apache$http$entity$mime$HttpMultipartMode</a>
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
		NoSuchFieldError ex
		NoSuchFieldError ex
}
</pre><br/><b>org/apache/http/entity/mime/HttpMultipartMode.class</b><pre><a href="/source/s?path=HttpMultipartMode.java">HttpMultipartMode.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public final enum <a class="d" name="org.apache.http.entity.mime.HttpMultipartMode" href="/source/s?defs=org.apache.http.entity.mime.HttpMultipartMode">org.apache.http.entity.mime.HttpMultipartMode</a> extends <a href="/source/s?defs=java.lang.Enum">java.lang.Enum</a> {
	public static final enum org.apache.http.entity.mime.HttpMultipartMode <a class="d" name="STRICT" href="/source/s?defs=STRICT">STRICT</a>
	public static final enum org.apache.http.entity.mime.HttpMultipartMode <a class="d" name="BROWSER_COMPATIBLE" href="/source/s?defs=BROWSER_COMPATIBLE">BROWSER_COMPATIBLE</a>
	private static final synthetic org.apache.http.entity.mime.HttpMultipartMode[] <a class="d" name="$VALUES" href="/source/s?defs=$VALUES">$VALUES</a>
	public static final org.apache.http.entity.mime.HttpMultipartMode[] <a class="d" name="values" href="/source/s?defs=values">values</a> () 
	public static org.apache.http.entity.mime.HttpMultipartMode <a class="d" name="valueOf" href="/source/s?defs=valueOf">valueOf</a> (java.lang.String) 
		String name
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/entity/mime/MIME.class</b><pre><a href="/source/s?path=MIME.java">MIME.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public final <a class="d" name="org.apache.http.entity.mime.MIME" href="/source/s?defs=org.apache.http.entity.mime.MIME">org.apache.http.entity.mime.MIME</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="CONTENT_TYPE" href="/source/s?defs=CONTENT_TYPE">CONTENT_TYPE</a>
	public static final String <a class="d" name="CONTENT_TRANSFER_ENC" href="/source/s?defs=CONTENT_TRANSFER_ENC">CONTENT_TRANSFER_ENC</a>
	public static final String <a class="d" name="CONTENT_DISPOSITION" href="/source/s?defs=CONTENT_DISPOSITION">CONTENT_DISPOSITION</a>
	public static final String <a class="d" name="ENC_8BIT" href="/source/s?defs=ENC_8BIT">ENC_8BIT</a>
	public static final String <a class="d" name="ENC_BINARY" href="/source/s?defs=ENC_BINARY">ENC_BINARY</a>
	public static final java.nio.charset.Charset <a class="d" name="DEFAULT_CHARSET" href="/source/s?defs=DEFAULT_CHARSET">DEFAULT_CHARSET</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/entity/mime/MinimalField.class</b><pre><a href="/source/s?path=MinimalField.java">MinimalField.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public <a class="d" name="org.apache.http.entity.mime.MinimalField" href="/source/s?defs=org.apache.http.entity.mime.MinimalField">org.apache.http.entity.mime.MinimalField</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final String <a class="d" name="value" href="/source/s?defs=value">value</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getBody" href="/source/s?defs=getBody">getBody</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/entity/mime/Header.class</b><pre><a href="/source/s?path=Header.java">Header.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public <a class="d" name="org.apache.http.entity.mime.Header" href="/source/s?defs=org.apache.http.entity.mime.Header">org.apache.http.entity.mime.Header</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.Iterable">java.lang.Iterable</a>  {
	private final java.util.List <a class="d" name="fields" href="/source/s?defs=fields">fields</a>
	private final java.util.Map <a class="d" name="fieldMap" href="/source/s?defs=fieldMap">fieldMap</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="addField" href="/source/s?defs=addField">addField</a> (org.apache.http.entity.mime.MinimalField) 
		org.apache.http.entity.mime.MinimalField field
		String key
		java.util.List values
	public java.util.List <a class="d" name="getFields" href="/source/s?defs=getFields">getFields</a> () 
	public org.apache.http.entity.mime.MinimalField <a class="d" name="getField" href="/source/s?defs=getField">getField</a> (java.lang.String) 
		String name
		String key
		java.util.List list
	public java.util.List <a class="d" name="getFields" href="/source/s?defs=getFields">getFields</a> (java.lang.String) 
		String name
		String key
		java.util.List list
	public int <a class="d" name="removeFields" href="/source/s?defs=removeFields">removeFields</a> (java.lang.String) 
		String name
		String key
		java.util.List removed
	public void <a class="d" name="setField" href="/source/s?defs=setField">setField</a> (org.apache.http.entity.mime.MinimalField) 
		org.apache.http.entity.mime.MinimalField f
		java.util.Iterator it
		org.apache.http.entity.mime.MinimalField field
		String key
		java.util.List list
		int firstOccurrence
		int index
	public java.util.Iterator <a class="d" name="iterator" href="/source/s?defs=iterator">iterator</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/ContentDescriptor.class</b><pre><a href="/source/s?path=ContentDescriptor.java">ContentDescriptor.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public abstract <a class="d" name="org.apache.http.entity.mime.content.ContentDescriptor" href="/source/s?defs=org.apache.http.entity.mime.content.ContentDescriptor">org.apache.http.entity.mime.content.ContentDescriptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getMimeType" href="/source/s?defs=getMimeType">getMimeType</a> () 
	public abstract java.lang.String <a class="d" name="getMediaType" href="/source/s?defs=getMediaType">getMediaType</a> () 
	public abstract java.lang.String <a class="d" name="getSubType" href="/source/s?defs=getSubType">getSubType</a> () 
	public abstract java.lang.String <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public abstract java.lang.String <a class="d" name="getTransferEncoding" href="/source/s?defs=getTransferEncoding">getTransferEncoding</a> () 
	public abstract long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/FileBody.class</b><pre><a href="/source/s?path=FileBody.java">FileBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public <a class="d" name="org.apache.http.entity.mime.content.FileBody" href="/source/s?defs=org.apache.http.entity.mime.content.FileBody">org.apache.http.entity.mime.content.FileBody</a> extends <a href="/source/s?defs=org.apache.http.entity.mime.content.AbstractContentBody">org.apache.http.entity.mime.content.AbstractContentBody</a> {
	private final java.io.File <a class="d" name="file" href="/source/s?defs=file">file</a>
	private final String <a class="d" name="filename" href="/source/s?defs=filename">filename</a>
	private final String <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.File, java.lang.String, java.lang.String, java.lang.String) 
		java.io.File file
		String filename
		String mimeType
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.File, java.lang.String, java.lang.String) 
		java.io.File file
		String mimeType
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.File, java.lang.String) 
		java.io.File file
		String mimeType
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.File) 
		java.io.File file
	public java.io.InputStream <a class="d" name="getInputStream" href="/source/s?defs=getInputStream">getInputStream</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
		int mode
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] tmp
		int l
		java.io.OutputStream out
		java.io.InputStream in
	public java.lang.String <a class="d" name="getTransferEncoding" href="/source/s?defs=getTransferEncoding">getTransferEncoding</a> () 
	public java.lang.String <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.lang.String <a class="d" name="getFilename" href="/source/s?defs=getFilename">getFilename</a> () 
	public java.io.File <a class="d" name="getFile" href="/source/s?defs=getFile">getFile</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/ContentBody.class</b><pre><a href="/source/s?path=ContentBody.java">ContentBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public abstract <a class="d" name="org.apache.http.entity.mime.content.ContentBody" href="/source/s?defs=org.apache.http.entity.mime.content.ContentBody">org.apache.http.entity.mime.content.ContentBody</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.entity.mime.content.ContentDescriptor">org.apache.http.entity.mime.content.ContentDescriptor</a>  {
	public abstract java.lang.String <a class="d" name="getFilename" href="/source/s?defs=getFilename">getFilename</a> () 
	public abstract void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/entity/mime/content/InputStreamBody.class</b><pre><a href="/source/s?path=InputStreamBody.java">InputStreamBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public <a class="d" name="org.apache.http.entity.mime.content.InputStreamBody" href="/source/s?defs=org.apache.http.entity.mime.content.InputStreamBody">org.apache.http.entity.mime.content.InputStreamBody</a> extends <a href="/source/s?defs=org.apache.http.entity.mime.content.AbstractContentBody">org.apache.http.entity.mime.content.AbstractContentBody</a> {
	private final java.io.InputStream <a class="d" name="in" href="/source/s?defs=in">in</a>
	private final String <a class="d" name="filename" href="/source/s?defs=filename">filename</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.InputStream, java.lang.String, java.lang.String) 
		java.io.InputStream in
		String mimeType
		String filename
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.InputStream, java.lang.String) 
		java.io.InputStream in
		String filename
	public java.io.InputStream <a class="d" name="getInputStream" href="/source/s?defs=getInputStream">getInputStream</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
		int mode
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] tmp
		int l
		java.io.OutputStream out
	public java.lang.String <a class="d" name="getTransferEncoding" href="/source/s?defs=getTransferEncoding">getTransferEncoding</a> () 
	public java.lang.String <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.lang.String <a class="d" name="getFilename" href="/source/s?defs=getFilename">getFilename</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/StringBody.class</b><pre><a href="/source/s?path=StringBody.java">StringBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public <a class="d" name="org.apache.http.entity.mime.content.StringBody" href="/source/s?defs=org.apache.http.entity.mime.content.StringBody">org.apache.http.entity.mime.content.StringBody</a> extends <a href="/source/s?defs=org.apache.http.entity.mime.content.AbstractContentBody">org.apache.http.entity.mime.content.AbstractContentBody</a> {
	private final byte[] <a class="d" name="content" href="/source/s?defs=content">content</a>
	private final java.nio.charset.Charset <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	public static org.apache.http.entity.mime.content.StringBody <a class="d" name="create" href="/source/s?defs=create">create</a> (java.lang.String, java.lang.String, java.nio.charset.Charset)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.io.UnsupportedEncodingException ex
		String text
		String mimeType
		java.nio.charset.Charset charset
	public static org.apache.http.entity.mime.content.StringBody <a class="d" name="create" href="/source/s?defs=create">create</a> (java.lang.String, java.nio.charset.Charset)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		String text
		java.nio.charset.Charset charset
	public static org.apache.http.entity.mime.content.StringBody <a class="d" name="create" href="/source/s?defs=create">create</a> (java.lang.String)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		String text
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, java.nio.charset.Charset)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String text
		String mimeType
		java.nio.charset.Charset charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.nio.charset.Charset)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String text
		java.nio.charset.Charset charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		String text
	public java.io.Reader <a class="d" name="getReader" href="/source/s?defs=getReader">getReader</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
		int mode
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
		java.io.InputStream in
		byte[] tmp
		int l
	public java.lang.String <a class="d" name="getTransferEncoding" href="/source/s?defs=getTransferEncoding">getTransferEncoding</a> () 
	public java.lang.String <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public java.lang.String <a class="d" name="getFilename" href="/source/s?defs=getFilename">getFilename</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/AbstractContentBody.class</b><pre><a href="/source/s?path=AbstractContentBody.java">AbstractContentBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public abstract <a class="d" name="org.apache.http.entity.mime.content.AbstractContentBody" href="/source/s?defs=org.apache.http.entity.mime.content.AbstractContentBody">org.apache.http.entity.mime.content.AbstractContentBody</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.entity.mime.content.ContentBody">org.apache.http.entity.mime.content.ContentBody</a>  {
	private final String <a class="d" name="mimeType" href="/source/s?defs=mimeType">mimeType</a>
	private final String <a class="d" name="mediaType" href="/source/s?defs=mediaType">mediaType</a>
	private final String <a class="d" name="subType" href="/source/s?defs=subType">subType</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String mimeType
		int i
	public java.lang.String <a class="d" name="getMimeType" href="/source/s?defs=getMimeType">getMimeType</a> () 
	public java.lang.String <a class="d" name="getMediaType" href="/source/s?defs=getMediaType">getMediaType</a> () 
	public java.lang.String <a class="d" name="getSubType" href="/source/s?defs=getSubType">getSubType</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/content/ByteArrayBody.class</b><pre><a href="/source/s?path=ByteArrayBody.java">ByteArrayBody.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime.content">org.apache.http.entity.mime.content</a>
public <a class="d" name="org.apache.http.entity.mime.content.ByteArrayBody" href="/source/s?defs=org.apache.http.entity.mime.content.ByteArrayBody">org.apache.http.entity.mime.content.ByteArrayBody</a> extends <a href="/source/s?defs=org.apache.http.entity.mime.content.AbstractContentBody">org.apache.http.entity.mime.content.AbstractContentBody</a> {
	private final byte[] <a class="d" name="data" href="/source/s?defs=data">data</a>
	private final String <a class="d" name="filename" href="/source/s?defs=filename">filename</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (byte[], java.lang.String, java.lang.String) 
		byte[] data
		String mimeType
		String filename
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (byte[], java.lang.String) 
		byte[] data
		String filename
	public java.lang.String <a class="d" name="getFilename" href="/source/s?defs=getFilename">getFilename</a> () 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
	public java.lang.String <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public java.lang.String <a class="d" name="getTransferEncoding" href="/source/s?defs=getTransferEncoding">getTransferEncoding</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
}
</pre><br/><b>org/apache/http/entity/mime/HttpMultipart.class</b><pre><a href="/source/s?path=HttpMultipart.java">HttpMultipart.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public <a class="d" name="org.apache.http.entity.mime.HttpMultipart" href="/source/s?defs=org.apache.http.entity.mime.HttpMultipart">org.apache.http.entity.mime.HttpMultipart</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final org.apache.http.util.ByteArrayBuffer <a class="d" name="FIELD_SEP" href="/source/s?defs=FIELD_SEP">FIELD_SEP</a>
	private static final org.apache.http.util.ByteArrayBuffer <a class="d" name="CR_LF" href="/source/s?defs=CR_LF">CR_LF</a>
	private static final org.apache.http.util.ByteArrayBuffer <a class="d" name="TWO_DASHES" href="/source/s?defs=TWO_DASHES">TWO_DASHES</a>
	private final String <a class="d" name="subType" href="/source/s?defs=subType">subType</a>
	private final java.nio.charset.Charset <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	private final String <a class="d" name="boundary" href="/source/s?defs=boundary">boundary</a>
	private final java.util.List <a class="d" name="parts" href="/source/s?defs=parts">parts</a>
	private final org.apache.http.entity.mime.HttpMultipartMode <a class="d" name="mode" href="/source/s?defs=mode">mode</a>
	private static org.apache.http.util.ByteArrayBuffer <a class="d" name="encode" href="/source/s?defs=encode">encode</a> (java.nio.charset.Charset, java.lang.String) 
		java.nio.charset.Charset charset
		String string
		java.nio.ByteBuffer encoded
		org.apache.http.util.ByteArrayBuffer bab
	private static void <a class="d" name="writeBytes" href="/source/s?defs=writeBytes">writeBytes</a> (org.apache.http.util.ByteArrayBuffer, java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.util.ByteArrayBuffer b
		java.io.OutputStream out
	private static void <a class="d" name="writeBytes" href="/source/s?defs=writeBytes">writeBytes</a> (java.lang.String, java.nio.charset.Charset, java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		java.nio.charset.Charset charset
		java.io.OutputStream out
		org.apache.http.util.ByteArrayBuffer b
	private static void <a class="d" name="writeBytes" href="/source/s?defs=writeBytes">writeBytes</a> (java.lang.String, java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		java.io.OutputStream out
		org.apache.http.util.ByteArrayBuffer b
	private static void <a class="d" name="writeField" href="/source/s?defs=writeField">writeField</a> (org.apache.http.entity.mime.MinimalField, java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.entity.mime.MinimalField field
		java.io.OutputStream out
	private static void <a class="d" name="writeField" href="/source/s?defs=writeField">writeField</a> (org.apache.http.entity.mime.MinimalField, java.nio.charset.Charset, java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.entity.mime.MinimalField field
		java.nio.charset.Charset charset
		java.io.OutputStream out
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.nio.charset.Charset, java.lang.String, org.apache.http.entity.mime.HttpMultipartMode) 
		String subType
		java.nio.charset.Charset charset
		String boundary
		org.apache.http.entity.mime.HttpMultipartMode mode
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.nio.charset.Charset, java.lang.String) 
		String subType
		java.nio.charset.Charset charset
		String boundary
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String subType
		String boundary
	public java.lang.String <a class="d" name="getSubType" href="/source/s?defs=getSubType">getSubType</a> () 
	public java.nio.charset.Charset <a class="d" name="getCharset" href="/source/s?defs=getCharset">getCharset</a> () 
	public org.apache.http.entity.mime.HttpMultipartMode <a class="d" name="getMode" href="/source/s?defs=getMode">getMode</a> () 
	public java.util.List <a class="d" name="getBodyParts" href="/source/s?defs=getBodyParts">getBodyParts</a> () 
	public void <a class="d" name="addBodyPart" href="/source/s?defs=addBodyPart">addBodyPart</a> (org.apache.http.entity.mime.FormBodyPart) 
		org.apache.http.entity.mime.FormBodyPart part
	public java.lang.String <a class="d" name="getBoundary" href="/source/s?defs=getBoundary">getBoundary</a> () 
	private void <a class="d" name="doWriteTo" href="/source/s?defs=doWriteTo">doWriteTo</a> (org.apache.http.entity.mime.HttpMultipartMode, java.io.OutputStream, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.entity.mime.MinimalField field
		java.util.Iterator i$
		org.apache.http.entity.mime.MinimalField ct
		org.apache.http.entity.mime.MinimalField cd
		String filename
		org.apache.http.entity.mime.Header header
		org.apache.http.entity.mime.FormBodyPart part
		java.util.Iterator i$
		org.apache.http.entity.mime.HttpMultipartMode mode
		java.io.OutputStream out
		boolean writeContent
		org.apache.http.util.ByteArrayBuffer boundary
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream out
	public long <a class="d" name="getTotalLength" href="/source/s?defs=getTotalLength">getTotalLength</a> () 
		org.apache.http.entity.mime.content.ContentBody body
		long len
		org.apache.http.entity.mime.FormBodyPart part
		java.util.Iterator i$
		byte[] extra
		java.io.IOException ex
		long contentLen
		java.io.ByteArrayOutputStream out
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/entity/mime/version.properties</b><br/><b>org/apache/http/entity/mime/FormBodyPart.class</b><pre><a href="/source/s?path=FormBodyPart.java">FormBodyPart.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public <a class="d" name="org.apache.http.entity.mime.FormBodyPart" href="/source/s?defs=org.apache.http.entity.mime.FormBodyPart">org.apache.http.entity.mime.FormBodyPart</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final org.apache.http.entity.mime.Header <a class="d" name="header" href="/source/s?defs=header">header</a>
	private final org.apache.http.entity.mime.content.ContentBody <a class="d" name="body" href="/source/s?defs=body">body</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, org.apache.http.entity.mime.content.ContentBody) 
		String name
		org.apache.http.entity.mime.content.ContentBody body
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public org.apache.http.entity.mime.content.ContentBody <a class="d" name="getBody" href="/source/s?defs=getBody">getBody</a> () 
	public org.apache.http.entity.mime.Header <a class="d" name="getHeader" href="/source/s?defs=getHeader">getHeader</a> () 
	public void <a class="d" name="addField" href="/source/s?defs=addField">addField</a> (java.lang.String, java.lang.String) 
		String name
		String value
	protected void <a class="d" name="generateContentDisp" href="/source/s?defs=generateContentDisp">generateContentDisp</a> (org.apache.http.entity.mime.content.ContentBody) 
		org.apache.http.entity.mime.content.ContentBody body
		StringBuilder buffer
	protected void <a class="d" name="generateContentType" href="/source/s?defs=generateContentType">generateContentType</a> (org.apache.http.entity.mime.content.ContentBody) 
		org.apache.http.entity.mime.content.ContentBody body
		StringBuilder buffer
	protected void <a class="d" name="generateTransferEncoding" href="/source/s?defs=generateTransferEncoding">generateTransferEncoding</a> (org.apache.http.entity.mime.content.ContentBody) 
		org.apache.http.entity.mime.content.ContentBody body
}
</pre><br/><b>org/apache/http/entity/mime/MultipartEntity.class</b><pre><a href="/source/s?path=MultipartEntity.java">MultipartEntity.java</a>
package <a href="/source/s?defs=org.apache.http.entity.mime">org.apache.http.entity.mime</a>
public <a class="d" name="org.apache.http.entity.mime.MultipartEntity" href="/source/s?defs=org.apache.http.entity.mime.MultipartEntity">org.apache.http.entity.mime.MultipartEntity</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpEntity">org.apache.http.HttpEntity</a>  {
	private static final char[] <a class="d" name="MULTIPART_CHARS" href="/source/s?defs=MULTIPART_CHARS">MULTIPART_CHARS</a>
	private final org.apache.http.entity.mime.HttpMultipart <a class="d" name="multipart" href="/source/s?defs=multipart">multipart</a>
	private final org.apache.http.Header <a class="d" name="contentType" href="/source/s?defs=contentType">contentType</a>
	private long <a class="d" name="length" href="/source/s?defs=length">length</a>
	private volatile boolean <a class="d" name="dirty" href="/source/s?defs=dirty">dirty</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.entity.mime.HttpMultipartMode, java.lang.String, java.nio.charset.Charset) 
		org.apache.http.entity.mime.HttpMultipartMode mode
		String boundary
		java.nio.charset.Charset charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.entity.mime.HttpMultipartMode) 
		org.apache.http.entity.mime.HttpMultipartMode mode
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected java.lang.String <a class="d" name="generateContentType" href="/source/s?defs=generateContentType">generateContentType</a> (java.lang.String, java.nio.charset.Charset) 
		String boundary
		java.nio.charset.Charset charset
		StringBuilder buffer
	protected java.lang.String <a class="d" name="generateBoundary" href="/source/s?defs=generateBoundary">generateBoundary</a> () 
		int i
		StringBuilder buffer
		java.util.Random rand
		int count
	public void <a class="d" name="addPart" href="/source/s?defs=addPart">addPart</a> (org.apache.http.entity.mime.FormBodyPart) 
		org.apache.http.entity.mime.FormBodyPart bodyPart
	public void <a class="d" name="addPart" href="/source/s?defs=addPart">addPart</a> (java.lang.String, org.apache.http.entity.mime.content.ContentBody) 
		String name
		org.apache.http.entity.mime.content.ContentBody contentBody
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
		org.apache.http.entity.mime.content.ContentBody body
		org.apache.http.entity.mime.FormBodyPart part
		java.util.Iterator i$
	public boolean <a class="d" name="isChunked" href="/source/s?defs=isChunked">isChunked</a> () 
	public boolean <a class="d" name="isStreaming" href="/source/s?defs=isStreaming">isStreaming</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
	public org.apache.http.Header <a class="d" name="getContentType" href="/source/s?defs=getContentType">getContentType</a> () 
	public org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>META-INF/maven/</b><br/><b>META-INF/maven/org.apache.httpcomponents/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpmime/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpmime/pom.xml</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpmime/pom.properties</b></pre>
</div>
    <div id="footer">
<p><a href="http://opengrok.github.com/OpenGrok/"
 title="Served by OpenGrok"><span id="fti"></span></a></p>
<p>
    <a href="http://www.rrzn.uni-hannover.de"><span id="partner_rrzn"></span></a>
    <a href="http://www.uni-hannover.de"><span id="partner_luh"></span></a>
</p>
<p><a href="http://www.metager.de/impressum.html">Impressum (legal notice)</a></p>
    
    </div>
    </div>
</div>
</body>
</html>

