


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta name="robots" content="index,follow" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="0.11.1 (2b48ae40ea1b)" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<link rel="icon" href="/source/default/img/icon.png" type="image/png" />
<link rel="stylesheet" type="text/css" media="all"
    title="Default" href="/source/default/style.css" />
<link rel="alternate stylesheet" type="text/css" media="all"
    title="Paper White" href="/source/default/print.css" />
<link rel="stylesheet" type="text/css" href="/source/default/print.css" media="print" />
<link rel="stylesheet" type="text/css" href="/source/default/jquery.tooltip.css" />

<link rel="search" href="/source/opensearch"
    type="application/opensearchdescription+xml"
    title="OpenGrok Search for current project(s)" />
<script type="text/javascript" src="/source/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="/source/jquery.tooltip-1.3.pack.js"></script>

<script type="text/javascript" src="/source/utils.js"></script>
<title>Cross Reference: /android/4.4/prebuilts/tools/common/http-client/httpclient-4.1.1.jar</title>
</head>
<body>
<script type="text/javascript">/* <![CDATA[ */
    document.hash = 'null';document.rev = '';document.link = '/source/xref/android/4.4/prebuilts/tools/common/http-client/httpclient-4.1.1.jar';document.annotate = false;
    document.domReady.push(function() {domReadyMast();});
    document.pageReady.push(function() { pageReadyMast();});
/* ]]> */</script>
<div id="page">
    <div id="whole_header">
        <form action="/source/search">
<div id="header">
<a href="/source/" class="cslogo">
    <span style="color: #5a2c00; letter-spacing: -2px;">{</span><span 
        style="color: #0f3368; vertical-align: middle;">Code</span>
    <span style="color: #222222; vertical-align: middle;">Search</span>
</a>
<span id="partner">
    <a href="http://www.metager.de"><span id="partner_metager"></span></a>
</span>



    <div id="pagetitle"><span id="filename"
                    >Cross Reference: httpclient-4.1.1.jar</span></div>
</div>
<div id="Masthead">
    <tt><a href="/source/xref/">xref</a>: /<a href="/source/xref/android/">android</a>/<a href="/source/xref/android/4.4/">4.4</a>/<a href="/source/xref/android/4.4/prebuilts/">prebuilts</a>/<a href="/source/xref/android/4.4/prebuilts/tools/">tools</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/">common</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/">http-client</a>/<a href="/source/xref/android/4.4/prebuilts/tools/common/http-client/httpclient-4.1.1.jar">httpclient-4.1.1.jar</a></tt>
</div>
<div id="bar">
    <ul>
        <li><a href="/source/"><span id="home"></span>Home</a></li><li><a href="/source/history/android/4.4/prebuilts/tools/common/http-client/httpclient-4.1.1.jar"><span id="history"></span>History</a></li><li><a href="#" onclick="javascript:get_annotations(); return false;"
            ><span class="annotate"></span>Annotate</a></li><li><a href="#" onclick="javascript:lntoggle();return false;"
            title="Show or hide line numbers (might be slower if file has more than 10 000 lines)."><span id="line"></span>Line#</a></li><li><a
            href="#" onclick="javascript:lsttoggle();return false;"
            title="Show or hide symbol list."><span id="defbox"></span>Navigate</a></li><li><a href="/source/raw/android/4.4/prebuilts/tools/common/http-client/httpclient-4.1.1.jar"><span id="download"></span>Download</a></li><li><input type="text" id="search" name="q" class="q" />
            <input type="submit" value="Search" class="submit" /></li><li><input type="checkbox" name="path" value="/android/4.4/prebuilts/tools/common/http-client/" /> only in <b>httpclient-4.1.1.jar</b></li>
        
    </ul>
    <input type="hidden" name="project" value="android" />
</div>
        </form>
    </div>
<div id="content">
<script type="text/javascript">/* <![CDATA[ */
document.pageReady.push(function() { pageReadyList();});
/* ]]> */</script>

<div id="src">
    <pre><br/><b>META-INF/</b><br/><b>META-INF/MANIFEST.MF</b><br/><b>org/</b><br/><b>org/apache/</b><br/><b>org/apache/http/</b><br/><b>org/apache/http/impl/</b><br/><b>org/apache/http/impl/cookie/</b><br/><b>org/apache/http/impl/client/</b><br/><b>org/apache/http/impl/conn/</b><br/><b>org/apache/http/impl/conn/tsccm/</b><br/><b>org/apache/http/impl/auth/</b><br/><b>org/apache/http/cookie/</b><br/><b>org/apache/http/cookie/params/</b><br/><b>org/apache/http/annotation/</b><br/><b>org/apache/http/client/</b><br/><b>org/apache/http/client/methods/</b><br/><b>org/apache/http/client/params/</b><br/><b>org/apache/http/client/utils/</b><br/><b>org/apache/http/client/protocol/</b><br/><b>org/apache/http/client/entity/</b><br/><b>org/apache/http/conn/</b><br/><b>org/apache/http/conn/util/</b><br/><b>org/apache/http/conn/ssl/</b><br/><b>org/apache/http/conn/params/</b><br/><b>org/apache/http/conn/routing/</b><br/><b>org/apache/http/conn/scheme/</b><br/><b>org/apache/http/auth/</b><br/><b>org/apache/http/auth/params/</b><br/><b>META-INF/NOTICE.txt</b><br/><b>META-INF/LICENSE.txt</b><br/><b>org/apache/http/impl/cookie/BasicExpiresHandler.class</b><pre><a href="/source/s?path=BasicExpiresHandler.java">BasicExpiresHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicExpiresHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicExpiresHandler">org.apache.http.impl.cookie.BasicExpiresHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> {
	private final String[] <a class="d" name="datepatterns" href="/source/s?defs=datepatterns">datepatterns</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[]) 
		String[] datepatterns
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.impl.cookie.DateParseException dpe
		org.apache.http.cookie.SetCookie cookie
		String value
}
</pre><br/><b>org/apache/http/impl/cookie/DateParseException.class</b><pre><a href="/source/s?path=DateParseException.java">DateParseException.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.DateParseException" href="/source/s?defs=org.apache.http.impl.cookie.DateParseException">org.apache.http.impl.cookie.DateParseException</a> extends <a href="/source/s?defs=java.lang.Exception">java.lang.Exception</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/impl/cookie/IgnoreSpecFactory.class</b><pre><a href="/source/s?path=IgnoreSpecFactory.java">IgnoreSpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.IgnoreSpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.IgnoreSpecFactory">org.apache.http.impl.cookie.IgnoreSpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/BestMatchSpecFactory.class</b><pre><a href="/source/s?path=BestMatchSpecFactory.java">BestMatchSpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BestMatchSpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.BestMatchSpecFactory">org.apache.http.impl.cookie.BestMatchSpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		String[] patterns
		java.util.Collection param
		boolean singleHeader
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/NetscapeDraftSpecFactory.class</b><pre><a href="/source/s?path=NetscapeDraftSpecFactory.java">NetscapeDraftSpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.NetscapeDraftSpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.NetscapeDraftSpecFactory">org.apache.http.impl.cookie.NetscapeDraftSpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		String[] patterns
		java.util.Collection param
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/AbstractCookieAttributeHandler.class</b><pre><a href="/source/s?path=AbstractCookieAttributeHandler.java">AbstractCookieAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public abstract <a class="d" name="org.apache.http.impl.cookie.AbstractCookieAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965DiscardAttributeHandler.class</b><pre><a href="/source/s?path=RFC2965DiscardAttributeHandler.java">RFC2965DiscardAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler">org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie2 cookie2
		org.apache.http.cookie.SetCookie cookie
		String commenturl
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965VersionAttributeHandler.class</b><pre><a href="/source/s?path=RFC2965VersionAttributeHandler.java">RFC2965VersionAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965VersionAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965VersionAttributeHandler">org.apache.http.impl.cookie.RFC2965VersionAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		NumberFormatException e
		org.apache.http.cookie.SetCookie cookie
		String value
		int version
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/BasicClientCookie.class</b><pre><a href="/source/s?path=BasicClientCookie.java">BasicClientCookie.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicClientCookie" href="/source/s?defs=org.apache.http.impl.cookie.BasicClientCookie">org.apache.http.impl.cookie.BasicClientCookie</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.SetCookie">org.apache.http.cookie.SetCookie</a> <a href="/source/s?defs=org.apache.http.cookie.ClientCookie">org.apache.http.cookie.ClientCookie</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private java.util.Map <a class="d" name="attribs" href="/source/s?defs=attribs">attribs</a>
	private String <a class="d" name="value" href="/source/s?defs=value">value</a>
	private String <a class="d" name="cookieComment" href="/source/s?defs=cookieComment">cookieComment</a>
	private String <a class="d" name="cookieDomain" href="/source/s?defs=cookieDomain">cookieDomain</a>
	private java.util.Date <a class="d" name="cookieExpiryDate" href="/source/s?defs=cookieExpiryDate">cookieExpiryDate</a>
	private String <a class="d" name="cookiePath" href="/source/s?defs=cookiePath">cookiePath</a>
	private boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a>
	private int <a class="d" name="cookieVersion" href="/source/s?defs=cookieVersion">cookieVersion</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public void <a class="d" name="setValue" href="/source/s?defs=setValue">setValue</a> (java.lang.String) 
		String value
	public java.lang.String <a class="d" name="getComment" href="/source/s?defs=getComment">getComment</a> () 
	public void <a class="d" name="setComment" href="/source/s?defs=setComment">setComment</a> (java.lang.String) 
		String comment
	public java.lang.String <a class="d" name="getCommentURL" href="/source/s?defs=getCommentURL">getCommentURL</a> () 
	public java.util.Date <a class="d" name="getExpiryDate" href="/source/s?defs=getExpiryDate">getExpiryDate</a> () 
	public void <a class="d" name="setExpiryDate" href="/source/s?defs=setExpiryDate">setExpiryDate</a> (java.util.Date) 
		java.util.Date expiryDate
	public boolean <a class="d" name="isPersistent" href="/source/s?defs=isPersistent">isPersistent</a> () 
	public java.lang.String <a class="d" name="getDomain" href="/source/s?defs=getDomain">getDomain</a> () 
	public void <a class="d" name="setDomain" href="/source/s?defs=setDomain">setDomain</a> (java.lang.String) 
		String domain
	public java.lang.String <a class="d" name="getPath" href="/source/s?defs=getPath">getPath</a> () 
	public void <a class="d" name="setPath" href="/source/s?defs=setPath">setPath</a> (java.lang.String) 
		String path
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public void <a class="d" name="setSecure" href="/source/s?defs=setSecure">setSecure</a> (boolean) 
		boolean secure
	public int[] <a class="d" name="getPorts" href="/source/s?defs=getPorts">getPorts</a> () 
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public void <a class="d" name="setVersion" href="/source/s?defs=setVersion">setVersion</a> (int) 
		int version
	public boolean <a class="d" name="isExpired" href="/source/s?defs=isExpired">isExpired</a> (java.util.Date) 
		java.util.Date date
	public void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.String) 
		String name
		String value
	public java.lang.String <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String name
	public boolean <a class="d" name="containsAttribute" href="/source/s?defs=containsAttribute">containsAttribute</a> (java.lang.String) 
		String name
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.impl.cookie.BasicClientCookie clone
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/impl/cookie/BasicPathHandler.class</b><pre><a href="/source/s?path=BasicPathHandler.java">BasicPathHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicPathHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicPathHandler">org.apache.http.impl.cookie.BasicPathHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String targetpath
		String topmostPath
		boolean match
}
</pre><br/><b>org/apache/http/impl/cookie/NetscapeDraftSpec.class</b><pre><a href="/source/s?path=NetscapeDraftSpec.java">NetscapeDraftSpec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.NetscapeDraftSpec" href="/source/s?defs=org.apache.http.impl.cookie.NetscapeDraftSpec">org.apache.http.impl.cookie.NetscapeDraftSpec</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.CookieSpecBase">org.apache.http.impl.cookie.CookieSpecBase</a> {
	protected static final String <a class="d" name="EXPIRES_PATTERN" href="/source/s?defs=EXPIRES_PATTERN">EXPIRES_PATTERN</a>
	private final String[] <a class="d" name="datepatterns" href="/source/s?defs=datepatterns">datepatterns</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[]) 
		String[] datepatterns
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		String s
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
		org.apache.http.impl.cookie.NetscapeDraftHeaderParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
	public java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
		org.apache.http.cookie.Cookie cookie
		String s
		int i
		java.util.List cookies
		org.apache.http.util.CharArrayBuffer buffer
		java.util.List headers
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965Spec.class</b><pre><a href="/source/s?path=RFC2965Spec.java">RFC2965Spec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965Spec" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965Spec">org.apache.http.impl.cookie.RFC2965Spec</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.RFC2109Spec">org.apache.http.impl.cookie.RFC2109Spec</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[], boolean) 
		String[] datepatterns
		boolean oneHeader
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
		org.apache.http.HeaderElement[] elems
	protected java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.HeaderElement[] elems
		org.apache.http.cookie.CookieOrigin origin
	private java.util.List <a class="d" name="createCookies" href="/source/s?defs=createCookies">createCookies</a> (org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.NameValuePair param
		int j
		org.apache.http.NameValuePair attrib
		String s
		org.apache.http.cookie.CookieAttributeHandler handler
		java.util.Map$Entry entry
		java.util.Iterator i$
		String name
		String value
		org.apache.http.impl.cookie.BasicClientCookie2 cookie
		org.apache.http.NameValuePair[] attribs
		java.util.Map attribmap
		org.apache.http.HeaderElement headerelement
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.HeaderElement[] elems
		org.apache.http.cookie.CookieOrigin origin
		java.util.List cookies
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	protected void <a class="d" name="formatCookieAsVer" href="/source/s?defs=formatCookieAsVer">formatCookieAsVer</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int) 
		int i
		int len
		int[] ports
		String s
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.cookie.Cookie cookie
		int version
	private static org.apache.http.cookie.CookieOrigin <a class="d" name="adjustEffectiveHost" href="/source/s?defs=adjustEffectiveHost">adjustEffectiveHost</a> (org.apache.http.cookie.CookieOrigin) 
		char ch
		int i
		org.apache.http.cookie.CookieOrigin origin
		String host
		boolean isLocalHost
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
		org.apache.http.util.CharArrayBuffer buffer
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/BasicDomainHandler.class</b><pre><a href="/source/s?path=BasicDomainHandler.java">BasicDomainHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicDomainHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicDomainHandler">org.apache.http.impl.cookie.BasicDomainHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2109SpecFactory.class</b><pre><a href="/source/s?path=RFC2109SpecFactory.java">RFC2109SpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2109SpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.RFC2109SpecFactory">org.apache.http.impl.cookie.RFC2109SpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		String[] patterns
		java.util.Collection param
		boolean singleHeader
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/CookieSpecBase.class</b><pre><a href="/source/s?path=CookieSpecBase.java">CookieSpecBase.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public abstract <a class="d" name="org.apache.http.impl.cookie.CookieSpecBase" href="/source/s?defs=org.apache.http.impl.cookie.CookieSpecBase">org.apache.http.impl.cookie.CookieSpecBase</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieSpec">org.apache.http.impl.cookie.AbstractCookieSpec</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected static java.lang.String <a class="d" name="getDefaultPath" href="/source/s?defs=getDefaultPath">getDefaultPath</a> (org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.CookieOrigin origin
		String defaultPath
		int lastSlashIndex
	protected static java.lang.String <a class="d" name="getDefaultDomain" href="/source/s?defs=getDefaultDomain">getDefaultDomain</a> (org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.CookieOrigin origin
	protected java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.NameValuePair attrib
		String s
		org.apache.http.cookie.CookieAttributeHandler handler
		int j
		String name
		String value
		org.apache.http.impl.cookie.BasicClientCookie cookie
		org.apache.http.NameValuePair[] attribs
		org.apache.http.HeaderElement headerelement
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.HeaderElement[] elems
		org.apache.http.cookie.CookieOrigin origin
		java.util.List cookies
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.CookieAttributeHandler handler
		java.util.Iterator i$
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.CookieAttributeHandler handler
		java.util.Iterator i$
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2109Spec.class</b><pre><a href="/source/s?path=RFC2109Spec.java">RFC2109Spec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2109Spec" href="/source/s?defs=org.apache.http.impl.cookie.RFC2109Spec">org.apache.http.impl.cookie.RFC2109Spec</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.CookieSpecBase">org.apache.http.impl.cookie.CookieSpecBase</a> {
	private static final org.apache.http.cookie.CookiePathComparator <a class="d" name="PATH_COMPARATOR" href="/source/s?defs=PATH_COMPARATOR">PATH_COMPARATOR</a>
	private static final String[] <a class="d" name="DATE_PATTERNS" href="/source/s?defs=DATE_PATTERNS">DATE_PATTERNS</a>
	private final String[] <a class="d" name="datepatterns" href="/source/s?defs=datepatterns">datepatterns</a>
	private final boolean <a class="d" name="oneHeader" href="/source/s?defs=oneHeader">oneHeader</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[], boolean) 
		String[] datepatterns
		boolean oneHeader
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
		org.apache.http.HeaderElement[] elems
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String name
	public java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
		java.util.List cookies
	private java.util.List <a class="d" name="doFormatOneHeader" href="/source/s?defs=doFormatOneHeader">doFormatOneHeader</a> (java.util.List) 
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.Cookie cooky
		java.util.Iterator i$
		java.util.List cookies
		int version
		org.apache.http.util.CharArrayBuffer buffer
		java.util.List headers
	private java.util.List <a class="d" name="doFormatManyHeaders" href="/source/s?defs=doFormatManyHeaders">doFormatManyHeaders</a> (java.util.List) 
		int version
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		java.util.List cookies
		java.util.List headers
	protected void <a class="d" name="formatParamAsVer" href="/source/s?defs=formatParamAsVer">formatParamAsVer</a> (org.apache.http.util.CharArrayBuffer, java.lang.String, java.lang.String, int) 
		org.apache.http.util.CharArrayBuffer buffer
		String name
		String value
		int version
	protected void <a class="d" name="formatCookieAsVer" href="/source/s?defs=formatCookieAsVer">formatCookieAsVer</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int) 
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.cookie.Cookie cookie
		int version
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/DateUtils.class</b><pre><a href="/source/s?path=DateUtils.java">DateUtils.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public final <a class="d" name="org.apache.http.impl.cookie.DateUtils" href="/source/s?defs=org.apache.http.impl.cookie.DateUtils">org.apache.http.impl.cookie.DateUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="PATTERN_RFC1123" href="/source/s?defs=PATTERN_RFC1123">PATTERN_RFC1123</a>
	public static final String <a class="d" name="PATTERN_RFC1036" href="/source/s?defs=PATTERN_RFC1036">PATTERN_RFC1036</a>
	public static final String <a class="d" name="PATTERN_ASCTIME" href="/source/s?defs=PATTERN_ASCTIME">PATTERN_ASCTIME</a>
	private static final String[] <a class="d" name="DEFAULT_PATTERNS" href="/source/s?defs=DEFAULT_PATTERNS">DEFAULT_PATTERNS</a>
	private static final java.util.Date <a class="d" name="DEFAULT_TWO_DIGIT_YEAR_START" href="/source/s?defs=DEFAULT_TWO_DIGIT_YEAR_START">DEFAULT_TWO_DIGIT_YEAR_START</a>
	public static final java.util.TimeZone <a class="d" name="GMT" href="/source/s?defs=GMT">GMT</a>
	public static java.util.Date <a class="d" name="parseDate" href="/source/s?defs=parseDate">parseDate</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.cookie.DateParseException">org.apache.http.impl.cookie.DateParseException</a> 
		String dateValue
	public static java.util.Date <a class="d" name="parseDate" href="/source/s?defs=parseDate">parseDate</a> (java.lang.String, java.lang.String[])  throws <a href="/source/s?defs=org.apache.http.impl.cookie.DateParseException">org.apache.http.impl.cookie.DateParseException</a> 
		String dateValue
		String[] dateFormats
	public static java.util.Date <a class="d" name="parseDate" href="/source/s?defs=parseDate">parseDate</a> (java.lang.String, java.lang.String[], java.util.Date)  throws <a href="/source/s?defs=org.apache.http.impl.cookie.DateParseException">org.apache.http.impl.cookie.DateParseException</a> 
		java.text.ParseException pe
		java.text.SimpleDateFormat dateParser
		String dateFormat
		String[] arr$
		int len$
		int i$
		String dateValue
		String[] dateFormats
		java.util.Date startDate
	public static java.lang.String <a class="d" name="formatDate" href="/source/s?defs=formatDate">formatDate</a> (java.util.Date) 
		java.util.Date date
	public static java.lang.String <a class="d" name="formatDate" href="/source/s?defs=formatDate">formatDate</a> (java.util.Date, java.lang.String) 
		java.util.Date date
		String pattern
		java.text.SimpleDateFormat formatter
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
		java.util.Calendar calendar
}
</pre><br/><b>org/apache/http/impl/cookie/DateUtils$DateFormatHolder.class</b><pre><a href="/source/s?path=DateUtils.java">DateUtils.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
final <a class="d" name="org.apache.http.impl.cookie.DateUtils$DateFormatHolder" href="/source/s?defs=org.apache.http.impl.cookie.DateUtils$DateFormatHolder">org.apache.http.impl.cookie.DateUtils$DateFormatHolder</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final ThreadLocal <a class="d" name="THREADLOCAL_FORMATS" href="/source/s?defs=THREADLOCAL_FORMATS">THREADLOCAL_FORMATS</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static java.text.SimpleDateFormat <a class="d" name="formatFor" href="/source/s?defs=formatFor">formatFor</a> (java.lang.String) 
		String pattern
		java.lang.ref.SoftReference ref
		java.util.Map formats
		java.text.SimpleDateFormat format
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/PublicSuffixFilter.class</b><pre><a href="/source/s?path=PublicSuffixFilter.java">PublicSuffixFilter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.PublicSuffixFilter" href="/source/s?defs=org.apache.http.impl.cookie.PublicSuffixFilter">org.apache.http.impl.cookie.PublicSuffixFilter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	private final org.apache.http.cookie.CookieAttributeHandler <a class="d" name="wrapped" href="/source/s?defs=wrapped">wrapped</a>
	private java.util.Set <a class="d" name="exceptions" href="/source/s?defs=exceptions">exceptions</a>
	private java.util.Set <a class="d" name="suffixes" href="/source/s?defs=suffixes">suffixes</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.cookie.CookieAttributeHandler) 
		org.apache.http.cookie.CookieAttributeHandler wrapped
	public void <a class="d" name="setPublicSuffixes" href="/source/s?defs=setPublicSuffixes">setPublicSuffixes</a> (java.util.Collection) 
		java.util.Collection suffixes
	public void <a class="d" name="setExceptions" href="/source/s?defs=setExceptions">setExceptions</a> (java.util.Collection) 
		java.util.Collection exceptions
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	private boolean <a class="d" name="isForPublicSuffix" href="/source/s?defs=isForPublicSuffix">isForPublicSuffix</a> (org.apache.http.cookie.Cookie) 
		int nextdot
		org.apache.http.cookie.Cookie cookie
		String domain
}
</pre><br/><b>org/apache/http/impl/cookie/BrowserCompatSpecFactory.class</b><pre><a href="/source/s?path=BrowserCompatSpecFactory.java">BrowserCompatSpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BrowserCompatSpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.BrowserCompatSpecFactory">org.apache.http.impl.cookie.BrowserCompatSpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		String[] patterns
		java.util.Collection param
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/IgnoreSpec.class</b><pre><a href="/source/s?path=IgnoreSpec.java">IgnoreSpec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.IgnoreSpec" href="/source/s?defs=org.apache.http.impl.cookie.IgnoreSpec">org.apache.http.impl.cookie.IgnoreSpec</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.CookieSpecBase">org.apache.http.impl.cookie.CookieSpecBase</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
	public java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
		java.util.List cookies
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/NetscapeDomainHandler.class</b><pre><a href="/source/s?path=NetscapeDomainHandler.java">NetscapeDomainHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.NetscapeDomainHandler" href="/source/s?defs=org.apache.http.impl.cookie.NetscapeDomainHandler">org.apache.http.impl.cookie.NetscapeDomainHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.BasicDomainHandler">org.apache.http.impl.cookie.BasicDomainHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		int domainParts
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
	private static boolean <a class="d" name="isSpecialDomain" href="/source/s?defs=isSpecialDomain">isSpecialDomain</a> (java.lang.String) 
		String domain
		String ucDomain
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2109VersionHandler.class</b><pre><a href="/source/s?path=RFC2109VersionHandler.java">RFC2109VersionHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2109VersionHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2109VersionHandler">org.apache.http.impl.cookie.RFC2109VersionHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		NumberFormatException e
		org.apache.http.cookie.SetCookie cookie
		String value
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2109DomainHandler.class</b><pre><a href="/source/s?path=RFC2109DomainHandler.java">RFC2109DomainHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2109DomainHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2109DomainHandler">org.apache.http.impl.cookie.RFC2109DomainHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		int dotIndex
		String hostWithoutDomain
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String domain
}
</pre><br/><b>org/apache/http/impl/cookie/BrowserCompatSpec.class</b><pre><a href="/source/s?path=BrowserCompatSpec.java">BrowserCompatSpec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BrowserCompatSpec" href="/source/s?defs=org.apache.http.impl.cookie.BrowserCompatSpec">org.apache.http.impl.cookie.BrowserCompatSpec</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.CookieSpecBase">org.apache.http.impl.cookie.CookieSpecBase</a> {
	protected static final String[] <a class="d" name="DATE_PATTERNS" href="/source/s?defs=DATE_PATTERNS">DATE_PATTERNS</a>
	private static final String[] <a class="d" name="DEFAULT_DATE_PATTERNS" href="/source/s?defs=DEFAULT_DATE_PATTERNS">DEFAULT_DATE_PATTERNS</a>
	private final String[] <a class="d" name="datepatterns" href="/source/s?defs=datepatterns">datepatterns</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[]) 
		String[] datepatterns
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.HeaderElement helem
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		String s
		org.apache.http.impl.cookie.NetscapeDraftHeaderParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
		String headername
		org.apache.http.HeaderElement[] helems
		boolean versioned
		boolean netscape
	public java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
		org.apache.http.cookie.Cookie cookie
		String s
		int i
		java.util.List cookies
		org.apache.http.util.CharArrayBuffer buffer
		java.util.List headers
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/NetscapeDraftHeaderParser.class</b><pre><a href="/source/s?path=NetscapeDraftHeaderParser.java">NetscapeDraftHeaderParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.NetscapeDraftHeaderParser" href="/source/s?defs=org.apache.http.impl.cookie.NetscapeDraftHeaderParser">org.apache.http.impl.cookie.NetscapeDraftHeaderParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final org.apache.http.impl.cookie.NetscapeDraftHeaderParser <a class="d" name="DEFAULT" href="/source/s?defs=DEFAULT">DEFAULT</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.HeaderElement <a class="d" name="parseHeader" href="/source/s?defs=parseHeader">parseHeader</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)  throws <a href="/source/s?defs=org.apache.http.ParseException">org.apache.http.ParseException</a> 
		org.apache.http.NameValuePair param
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		org.apache.http.NameValuePair nvp
		java.util.List params
	private org.apache.http.NameValuePair <a class="d" name="parseNameValuePair" href="/source/s?defs=parseNameValuePair">parseNameValuePair</a> (org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor) 
		char ch
		char ch
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		boolean terminated
		int pos
		int indexFrom
		int indexTo
		String name
		String value
		int i1
		int i2
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965SpecFactory.class</b><pre><a href="/source/s?path=RFC2965SpecFactory.java">RFC2965SpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965SpecFactory" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965SpecFactory">org.apache.http.impl.cookie.RFC2965SpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		String[] patterns
		java.util.Collection param
		boolean singleHeader
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/cookie/BasicClientCookie2.class</b><pre><a href="/source/s?path=BasicClientCookie2.java">BasicClientCookie2.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicClientCookie2" href="/source/s?defs=org.apache.http.impl.cookie.BasicClientCookie2">org.apache.http.impl.cookie.BasicClientCookie2</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.BasicClientCookie">org.apache.http.impl.cookie.BasicClientCookie</a> implements <a href="/source/s?defs=org.apache.http.cookie.SetCookie2">org.apache.http.cookie.SetCookie2</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private String <a class="d" name="commentURL" href="/source/s?defs=commentURL">commentURL</a>
	private int[] <a class="d" name="ports" href="/source/s?defs=ports">ports</a>
	private boolean <a class="d" name="discard" href="/source/s?defs=discard">discard</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String name
		String value
	public int[] <a class="d" name="getPorts" href="/source/s?defs=getPorts">getPorts</a> () 
	public void <a class="d" name="setPorts" href="/source/s?defs=setPorts">setPorts</a> (int[]) 
		int[] ports
	public java.lang.String <a class="d" name="getCommentURL" href="/source/s?defs=getCommentURL">getCommentURL</a> () 
	public void <a class="d" name="setCommentURL" href="/source/s?defs=setCommentURL">setCommentURL</a> (java.lang.String) 
		String commentURL
	public void <a class="d" name="setDiscard" href="/source/s?defs=setDiscard">setDiscard</a> (boolean) 
		boolean discard
	public boolean <a class="d" name="isPersistent" href="/source/s?defs=isPersistent">isPersistent</a> () 
	public boolean <a class="d" name="isExpired" href="/source/s?defs=isExpired">isExpired</a> (java.util.Date) 
		java.util.Date date
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.impl.cookie.BasicClientCookie2 clone
}
</pre><br/><b>org/apache/http/impl/cookie/DateUtils$DateFormatHolder$1.class</b><pre><a href="/source/s?path=DateUtils.java">DateUtils.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
 <a class="d" name="org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1" href="/source/s?defs=org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1">org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1</a> extends <a href="/source/s?defs=java.lang.ThreadLocal">java.lang.ThreadLocal</a> {
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected java.lang.ref.SoftReference <a class="d" name="initialValue" href="/source/s?defs=initialValue">initialValue</a> () 
	protected volatile synthetic java.lang.Object <a class="d" name="initialValue" href="/source/s?defs=initialValue">initialValue</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler.class</b><pre><a href="/source/s?path=RFC2965CommentUrlAttributeHandler.java">RFC2965CommentUrlAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler">org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie2 cookie2
		org.apache.http.cookie.SetCookie cookie
		String commenturl
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/BasicMaxAgeHandler.class</b><pre><a href="/source/s?path=BasicMaxAgeHandler.java">BasicMaxAgeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicMaxAgeHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicMaxAgeHandler">org.apache.http.impl.cookie.BasicMaxAgeHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		NumberFormatException e
		org.apache.http.cookie.SetCookie cookie
		String value
		int age
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965DomainAttributeHandler.class</b><pre><a href="/source/s?path=RFC2965DomainAttributeHandler.java">RFC2965DomainAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965DomainAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965DomainAttributeHandler">org.apache.http.impl.cookie.RFC2965DomainAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String domain
	public boolean <a class="d" name="domainMatch" href="/source/s?defs=domainMatch">domainMatch</a> (java.lang.String, java.lang.String) 
		String host
		String domain
		boolean match
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		int dotIndex
		String effectiveHostWithoutDomain
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String cookieDomain
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		String host
		String cookieDomain
		String effectiveHostWithoutDomain
}
</pre><br/><b>org/apache/http/impl/cookie/BasicSecureHandler.class</b><pre><a href="/source/s?path=BasicSecureHandler.java">BasicSecureHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicSecureHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicSecureHandler">org.apache.http.impl.cookie.BasicSecureHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
}
</pre><br/><b>org/apache/http/impl/cookie/PublicSuffixListParser.class</b><pre><a href="/source/s?path=PublicSuffixListParser.java">PublicSuffixListParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.PublicSuffixListParser" href="/source/s?defs=org.apache.http.impl.cookie.PublicSuffixListParser">org.apache.http.impl.cookie.PublicSuffixListParser</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final int <a class="d" name="MAX_LINE_LEN" href="/source/s?defs=MAX_LINE_LEN">MAX_LINE_LEN</a>
	private final org.apache.http.impl.cookie.PublicSuffixFilter <a class="d" name="filter" href="/source/s?defs=filter">filter</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.cookie.PublicSuffixFilter) 
		org.apache.http.impl.cookie.PublicSuffixFilter filter
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (java.io.Reader)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String line
		boolean isException
		java.io.Reader list
		java.util.Collection rules
		java.util.Collection exceptions
		java.io.BufferedReader r
		StringBuilder sb
		boolean more
	private boolean <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> (java.io.Reader, java.lang.StringBuilder)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		char c
		java.io.Reader r
		StringBuilder sb
		int b
		boolean hitWhitespace
}
</pre><br/><b>org/apache/http/impl/cookie/AbstractCookieSpec.class</b><pre><a href="/source/s?path=AbstractCookieSpec.java">AbstractCookieSpec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public abstract <a class="d" name="org.apache.http.impl.cookie.AbstractCookieSpec" href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieSpec">org.apache.http.impl.cookie.AbstractCookieSpec</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpec">org.apache.http.cookie.CookieSpec</a>  {
	private final java.util.Map <a class="d" name="attribHandlerMap" href="/source/s?defs=attribHandlerMap">attribHandlerMap</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="registerAttribHandler" href="/source/s?defs=registerAttribHandler">registerAttribHandler</a> (java.lang.String, org.apache.http.cookie.CookieAttributeHandler) 
		String name
		org.apache.http.cookie.CookieAttributeHandler handler
	protected org.apache.http.cookie.CookieAttributeHandler <a class="d" name="findAttribHandler" href="/source/s?defs=findAttribHandler">findAttribHandler</a> (java.lang.String) 
		String name
	protected org.apache.http.cookie.CookieAttributeHandler <a class="d" name="getAttribHandler" href="/source/s?defs=getAttribHandler">getAttribHandler</a> (java.lang.String) 
		String name
		org.apache.http.cookie.CookieAttributeHandler handler
	protected java.util.Collection <a class="d" name="getAttribHandlers" href="/source/s?defs=getAttribHandlers">getAttribHandlers</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/RFC2965PortAttributeHandler.class</b><pre><a href="/source/s?path=RFC2965PortAttributeHandler.java">RFC2965PortAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.RFC2965PortAttributeHandler" href="/source/s?defs=org.apache.http.impl.cookie.RFC2965PortAttributeHandler">org.apache.http.impl.cookie.RFC2965PortAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	private static int[] <a class="d" name="parsePortAttribute" href="/source/s?defs=parsePortAttribute">parsePortAttribute</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		int i
		NumberFormatException e
		String portValue
		java.util.StringTokenizer st
		int[] ports
	private static boolean <a class="d" name="portMatch" href="/source/s?defs=portMatch">portMatch</a> (int, int[]) 
		int i
		int len
		int port
		int[] ports
		boolean portInList
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		int[] ports
		org.apache.http.cookie.SetCookie2 cookie2
		org.apache.http.cookie.SetCookie cookie
		String portValue
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		int port
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
		int port
}
</pre><br/><b>org/apache/http/impl/cookie/BestMatchSpec.class</b><pre><a href="/source/s?path=BestMatchSpec.java">BestMatchSpec.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BestMatchSpec" href="/source/s?defs=org.apache.http.impl.cookie.BestMatchSpec">org.apache.http.impl.cookie.BestMatchSpec</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.CookieSpec">org.apache.http.cookie.CookieSpec</a>  {
	private final String[] <a class="d" name="datepatterns" href="/source/s?defs=datepatterns">datepatterns</a>
	private final boolean <a class="d" name="oneHeader" href="/source/s?defs=oneHeader">oneHeader</a>
	private org.apache.http.impl.cookie.RFC2965Spec <a class="d" name="strict" href="/source/s?defs=strict">strict</a>
	private org.apache.http.impl.cookie.RFC2109Spec <a class="d" name="obsoleteStrict" href="/source/s?defs=obsoleteStrict">obsoleteStrict</a>
	private org.apache.http.impl.cookie.BrowserCompatSpec <a class="d" name="compat" href="/source/s?defs=compat">compat</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String[], boolean) 
		String[] datepatterns
		boolean oneHeader
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	private org.apache.http.impl.cookie.RFC2965Spec <a class="d" name="getStrict" href="/source/s?defs=getStrict">getStrict</a> () 
	private org.apache.http.impl.cookie.RFC2109Spec <a class="d" name="getObsoleteStrict" href="/source/s?defs=getObsoleteStrict">getObsoleteStrict</a> () 
	private org.apache.http.impl.cookie.BrowserCompatSpec <a class="d" name="getCompat" href="/source/s?defs=getCompat">getCompat</a> () 
	public java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.HeaderElement helem
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		String s
		org.apache.http.impl.cookie.NetscapeDraftHeaderParser parser
		org.apache.http.util.CharArrayBuffer buffer
		org.apache.http.message.ParserCursor cursor
		org.apache.http.Header header
		org.apache.http.cookie.CookieOrigin origin
		org.apache.http.HeaderElement[] helems
		boolean versioned
		boolean netscape
	public void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
		org.apache.http.cookie.Cookie cookie
		org.apache.http.cookie.CookieOrigin origin
	public java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		java.util.List cookies
		int version
		boolean isSetCookie2
	public int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/cookie/BasicCommentHandler.class</b><pre><a href="/source/s?path=BasicCommentHandler.java">BasicCommentHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.cookie">org.apache.http.impl.cookie</a>
public <a class="d" name="org.apache.http.impl.cookie.BasicCommentHandler" href="/source/s?defs=org.apache.http.impl.cookie.BasicCommentHandler">org.apache.http.impl.cookie.BasicCommentHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.cookie.AbstractCookieAttributeHandler">org.apache.http.impl.cookie.AbstractCookieAttributeHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
		org.apache.http.cookie.SetCookie cookie
		String value
}
</pre><br/><b>org/apache/http/impl/client/DefaultRedirectStrategy.class</b><pre><a href="/source/s?path=DefaultRedirectStrategy.java">DefaultRedirectStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultRedirectStrategy" href="/source/s?defs=org.apache.http.impl.client.DefaultRedirectStrategy">org.apache.http.impl.client.DefaultRedirectStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.RedirectStrategy">org.apache.http.client.RedirectStrategy</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public static final String <a class="d" name="REDIRECT_LOCATIONS" href="/source/s?defs=REDIRECT_LOCATIONS">REDIRECT_LOCATIONS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isRedirected" href="/source/s?defs=isRedirected">isRedirected</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int statusCode
		String method
		org.apache.http.Header locationHeader
	public java.net.URI <a class="d" name="getLocationURI" href="/source/s?defs=getLocationURI">getLocationURI</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		java.net.URI requestURI
		java.net.URI absoluteRequestURI
		java.net.URISyntaxException ex
		org.apache.http.HttpHost target
		org.apache.http.HttpHost target
		java.net.URISyntaxException ex
		org.apache.http.impl.client.RedirectLocations redirectLocations
		java.net.URI redirectURI
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.Header locationHeader
		String location
		java.net.URI uri
		org.apache.http.params.HttpParams params
	protected java.net.URI <a class="d" name="createLocationURI" href="/source/s?defs=createLocationURI">createLocationURI</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		java.net.URISyntaxException ex
		String location
	public org.apache.http.client.methods.HttpUriRequest <a class="d" name="getRedirect" href="/source/s?defs=getRedirect">getRedirect</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		java.net.URI uri
		String method
}
</pre><br/><b>org/apache/http/impl/client/BasicResponseHandler.class</b><pre><a href="/source/s?path=BasicResponseHandler.java">BasicResponseHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.BasicResponseHandler" href="/source/s?defs=org.apache.http.impl.client.BasicResponseHandler">org.apache.http.impl.client.BasicResponseHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.ResponseHandler">org.apache.http.client.ResponseHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.lang.String <a class="d" name="handleResponse" href="/source/s?defs=handleResponse">handleResponse</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.client.HttpResponseException">org.apache.http.client.HttpResponseException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.StatusLine statusLine
		org.apache.http.HttpEntity entity
	public volatile synthetic java.lang.Object <a class="d" name="handleResponse" href="/source/s?defs=handleResponse">handleResponse</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse x0
}
</pre><br/><b>org/apache/http/impl/client/BasicCredentialsProvider.class</b><pre><a href="/source/s?path=BasicCredentialsProvider.java">BasicCredentialsProvider.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.BasicCredentialsProvider" href="/source/s?defs=org.apache.http.impl.client.BasicCredentialsProvider">org.apache.http.impl.client.BasicCredentialsProvider</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.CredentialsProvider">org.apache.http.client.CredentialsProvider</a>  {
	private final java.util.concurrent.ConcurrentHashMap <a class="d" name="credMap" href="/source/s?defs=credMap">credMap</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="setCredentials" href="/source/s?defs=setCredentials">setCredentials</a> (org.apache.http.auth.AuthScope, org.apache.http.auth.Credentials) 
		org.apache.http.auth.AuthScope authscope
		org.apache.http.auth.Credentials credentials
	private static org.apache.http.auth.Credentials <a class="d" name="matchCredentials" href="/source/s?defs=matchCredentials">matchCredentials</a> (java.util.Map, org.apache.http.auth.AuthScope) 
		int factor
		org.apache.http.auth.AuthScope current
		java.util.Iterator i$
		int bestMatchFactor
		org.apache.http.auth.AuthScope bestMatch
		java.util.Map map
		org.apache.http.auth.AuthScope authscope
		org.apache.http.auth.Credentials creds
	public org.apache.http.auth.Credentials <a class="d" name="getCredentials" href="/source/s?defs=getCredentials">getCredentials</a> (org.apache.http.auth.AuthScope) 
		org.apache.http.auth.AuthScope authscope
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultHttpRequestRetryHandler.class</b><pre><a href="/source/s?path=DefaultHttpRequestRetryHandler.java">DefaultHttpRequestRetryHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultHttpRequestRetryHandler" href="/source/s?defs=org.apache.http.impl.client.DefaultHttpRequestRetryHandler">org.apache.http.impl.client.DefaultHttpRequestRetryHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.HttpRequestRetryHandler">org.apache.http.client.HttpRequestRetryHandler</a>  {
	private final int <a class="d" name="retryCount" href="/source/s?defs=retryCount">retryCount</a>
	private final boolean <a class="d" name="requestSentRetryEnabled" href="/source/s?defs=requestSentRetryEnabled">requestSentRetryEnabled</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int, boolean) 
		int retryCount
		boolean requestSentRetryEnabled
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="retryRequest" href="/source/s?defs=retryRequest">retryRequest</a> (java.io.IOException, int, org.apache.http.protocol.HttpContext) 
		java.io.IOException exception
		int executionCount
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpRequest request
		Boolean b
		boolean sent
	public boolean <a class="d" name="isRequestSentRetryEnabled" href="/source/s?defs=isRequestSentRetryEnabled">isRequestSentRetryEnabled</a> () 
	public int <a class="d" name="getRetryCount" href="/source/s?defs=getRetryCount">getRetryCount</a> () 
	private boolean <a class="d" name="handleAsIdempotent" href="/source/s?defs=handleAsIdempotent">handleAsIdempotent</a> (org.apache.http.HttpRequest) 
		org.apache.http.HttpRequest request
}
</pre><br/><b>org/apache/http/impl/client/DefaultTargetAuthenticationHandler.class</b><pre><a href="/source/s?path=DefaultTargetAuthenticationHandler.java">DefaultTargetAuthenticationHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultTargetAuthenticationHandler" href="/source/s?defs=org.apache.http.impl.client.DefaultTargetAuthenticationHandler">org.apache.http.impl.client.DefaultTargetAuthenticationHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.client.AbstractAuthenticationHandler">org.apache.http.impl.client.AbstractAuthenticationHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isAuthenticationRequested" href="/source/s?defs=isAuthenticationRequested">isAuthenticationRequested</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int status
	public java.util.Map <a class="d" name="getChallenges" href="/source/s?defs=getChallenges">getChallenges</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.Header[] headers
	protected java.util.List <a class="d" name="getAuthPreferences" href="/source/s?defs=getAuthPreferences">getAuthPreferences</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		java.util.List authpref
}
</pre><br/><b>org/apache/http/impl/client/EntityEnclosingRequestWrapper.class</b><pre><a href="/source/s?path=EntityEnclosingRequestWrapper.java">EntityEnclosingRequestWrapper.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.EntityEnclosingRequestWrapper" href="/source/s?defs=org.apache.http.impl.client.EntityEnclosingRequestWrapper">org.apache.http.impl.client.EntityEnclosingRequestWrapper</a> extends <a href="/source/s?defs=org.apache.http.impl.client.RequestWrapper">org.apache.http.impl.client.RequestWrapper</a> implements <a href="/source/s?defs=org.apache.http.HttpEntityEnclosingRequest">org.apache.http.HttpEntityEnclosingRequest</a>  {
	private org.apache.http.HttpEntity <a class="d" name="entity" href="/source/s?defs=entity">entity</a>
	private boolean <a class="d" name="consumed" href="/source/s?defs=consumed">consumed</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpEntityEnclosingRequest request
	public org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
	public void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public boolean <a class="d" name="expectContinue" href="/source/s?defs=expectContinue">expectContinue</a> () 
		org.apache.http.Header expect
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	static synthetic boolean <a class="d" name="access$002" href="/source/s?defs=access$002">access$002</a> (org.apache.http.impl.client.EntityEnclosingRequestWrapper, boolean) 
		org.apache.http.impl.client.EntityEnclosingRequestWrapper x0
		boolean x1
}
</pre><br/><b>org/apache/http/impl/client/BasicCookieStore.class</b><pre><a href="/source/s?path=BasicCookieStore.java">BasicCookieStore.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.BasicCookieStore" href="/source/s?defs=org.apache.http.impl.client.BasicCookieStore">org.apache.http.impl.client.BasicCookieStore</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.CookieStore">org.apache.http.client.CookieStore</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final java.util.TreeSet <a class="d" name="cookies" href="/source/s?defs=cookies">cookies</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public synchronized void <a class="d" name="addCookie" href="/source/s?defs=addCookie">addCookie</a> (org.apache.http.cookie.Cookie) 
		org.apache.http.cookie.Cookie cookie
	public synchronized void <a class="d" name="addCookies" href="/source/s?defs=addCookies">addCookies</a> (org.apache.http.cookie.Cookie[]) 
		org.apache.http.cookie.Cookie cooky
		org.apache.http.cookie.Cookie[] arr$
		int len$
		int i$
		org.apache.http.cookie.Cookie[] cookies
	public synchronized java.util.List <a class="d" name="getCookies" href="/source/s?defs=getCookies">getCookies</a> () 
	public synchronized boolean <a class="d" name="clearExpired" href="/source/s?defs=clearExpired">clearExpired</a> (java.util.Date) 
		java.util.Iterator it
		java.util.Date date
		boolean removed
	public synchronized void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public synchronized java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultConnectionKeepAliveStrategy.class</b><pre><a href="/source/s?path=DefaultConnectionKeepAliveStrategy.java">DefaultConnectionKeepAliveStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy" href="/source/s?defs=org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy">org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ConnectionKeepAliveStrategy">org.apache.http.conn.ConnectionKeepAliveStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public long <a class="d" name="getKeepAliveDuration" href="/source/s?defs=getKeepAliveDuration">getKeepAliveDuration</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		NumberFormatException ignore
		org.apache.http.HeaderElement he
		String param
		String value
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.HeaderElementIterator it
}
</pre><br/><b>org/apache/http/impl/client/DefaultRequestDirector.class</b><pre><a href="/source/s?path=DefaultRequestDirector.java">DefaultRequestDirector.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultRequestDirector" href="/source/s?defs=org.apache.http.impl.client.DefaultRequestDirector">org.apache.http.impl.client.DefaultRequestDirector</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.RequestDirector">org.apache.http.client.RequestDirector</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	protected final org.apache.http.conn.ClientConnectionManager <a class="d" name="connManager" href="/source/s?defs=connManager">connManager</a>
	protected final org.apache.http.conn.routing.HttpRoutePlanner <a class="d" name="routePlanner" href="/source/s?defs=routePlanner">routePlanner</a>
	protected final org.apache.http.ConnectionReuseStrategy <a class="d" name="reuseStrategy" href="/source/s?defs=reuseStrategy">reuseStrategy</a>
	protected final org.apache.http.conn.ConnectionKeepAliveStrategy <a class="d" name="keepAliveStrategy" href="/source/s?defs=keepAliveStrategy">keepAliveStrategy</a>
	protected final org.apache.http.protocol.HttpRequestExecutor <a class="d" name="requestExec" href="/source/s?defs=requestExec">requestExec</a>
	protected final org.apache.http.protocol.HttpProcessor <a class="d" name="httpProcessor" href="/source/s?defs=httpProcessor">httpProcessor</a>
	protected final org.apache.http.client.HttpRequestRetryHandler <a class="d" name="retryHandler" href="/source/s?defs=retryHandler">retryHandler</a>
	protected final org.apache.http.client.RedirectHandler <a class="d" name="redirectHandler" href="/source/s?defs=redirectHandler">redirectHandler</a>
	protected final org.apache.http.client.RedirectStrategy <a class="d" name="redirectStrategy" href="/source/s?defs=redirectStrategy">redirectStrategy</a>
	protected final org.apache.http.client.AuthenticationHandler <a class="d" name="targetAuthHandler" href="/source/s?defs=targetAuthHandler">targetAuthHandler</a>
	protected final org.apache.http.client.AuthenticationHandler <a class="d" name="proxyAuthHandler" href="/source/s?defs=proxyAuthHandler">proxyAuthHandler</a>
	protected final org.apache.http.client.UserTokenHandler <a class="d" name="userTokenHandler" href="/source/s?defs=userTokenHandler">userTokenHandler</a>
	protected final org.apache.http.params.HttpParams <a class="d" name="params" href="/source/s?defs=params">params</a>
	protected org.apache.http.conn.ManagedClientConnection <a class="d" name="managedConn" href="/source/s?defs=managedConn">managedConn</a>
	protected final org.apache.http.auth.AuthState <a class="d" name="targetAuthState" href="/source/s?defs=targetAuthState">targetAuthState</a>
	protected final org.apache.http.auth.AuthState <a class="d" name="proxyAuthState" href="/source/s?defs=proxyAuthState">proxyAuthState</a>
	private int <a class="d" name="execCount" href="/source/s?defs=execCount">execCount</a>
	private int <a class="d" name="redirectCount" href="/source/s?defs=redirectCount">redirectCount</a>
	private int <a class="d" name="maxRedirects" href="/source/s?defs=maxRedirects">maxRedirects</a>
	private org.apache.http.HttpHost <a class="d" name="virtualHost" href="/source/s?defs=virtualHost">virtualHost</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams) 
		org.apache.http.protocol.HttpRequestExecutor requestExec
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.ConnectionReuseStrategy reustrat
		org.apache.http.conn.ConnectionKeepAliveStrategy kastrat
		org.apache.http.conn.routing.HttpRoutePlanner rouplan
		org.apache.http.protocol.HttpProcessor httpProcessor
		org.apache.http.client.HttpRequestRetryHandler retryHandler
		org.apache.http.client.RedirectHandler redirectHandler
		org.apache.http.client.AuthenticationHandler targetAuthHandler
		org.apache.http.client.AuthenticationHandler proxyAuthHandler
		org.apache.http.client.UserTokenHandler userTokenHandler
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.commons.logging.Log, org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectStrategy, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams) 
		org.apache.commons.logging.Log log
		org.apache.http.protocol.HttpRequestExecutor requestExec
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.ConnectionReuseStrategy reustrat
		org.apache.http.conn.ConnectionKeepAliveStrategy kastrat
		org.apache.http.conn.routing.HttpRoutePlanner rouplan
		org.apache.http.protocol.HttpProcessor httpProcessor
		org.apache.http.client.HttpRequestRetryHandler retryHandler
		org.apache.http.client.RedirectStrategy redirectStrategy
		org.apache.http.client.AuthenticationHandler targetAuthHandler
		org.apache.http.client.AuthenticationHandler proxyAuthHandler
		org.apache.http.client.UserTokenHandler userTokenHandler
		org.apache.http.params.HttpParams params
	private org.apache.http.impl.client.RequestWrapper <a class="d" name="wrapRequest" href="/source/s?defs=wrapRequest">wrapRequest</a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpRequest request
	protected void <a class="d" name="rewriteRequestURI" href="/source/s?defs=rewriteRequestURI">rewriteRequestURI</a> (org.apache.http.impl.client.RequestWrapper, org.apache.http.conn.routing.HttpRoute)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpHost target
		java.net.URI uri
		java.net.URISyntaxException ex
		org.apache.http.impl.client.RequestWrapper request
		org.apache.http.conn.routing.HttpRoute route
	public org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InterruptedIOException iox
		InterruptedException interrupted
		org.apache.http.conn.ClientConnectionRequest connRequest
		org.apache.http.impl.client.TunnelRefusedException ex
		String s
		String s
		long duration
		org.apache.http.HttpEntity entity
		org.apache.http.impl.client.RequestWrapper wrapper
		org.apache.http.conn.routing.HttpRoute route
		Object userToken
		org.apache.http.HttpHost proxy
		org.apache.http.impl.client.RoutedRequest followup
		org.apache.http.HttpEntity entity
		org.apache.http.HttpResponse response
		java.io.InterruptedIOException ioex
		org.apache.http.impl.conn.ConnectionShutdownException ex
		org.apache.http.HttpException ex
		java.io.IOException ex
		RuntimeException ex
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpRequest orig
		org.apache.http.impl.client.RequestWrapper origWrapper
		org.apache.http.conn.routing.HttpRoute origRoute
		org.apache.http.impl.client.RoutedRequest roureq
		long timeout
		boolean reuse
		boolean done
	private void <a class="d" name="tryConnect" href="/source/s?defs=tryConnect">tryConnect</a> (org.apache.http.impl.client.RoutedRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ignore
		java.io.IOException ex
		org.apache.http.impl.client.RoutedRequest req
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.routing.HttpRoute route
		int connectCount
	private org.apache.http.HttpResponse <a class="d" name="tryExecute" href="/source/s?defs=tryExecute">tryExecute</a> (org.apache.http.impl.client.RoutedRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ignore
		java.io.IOException ex
		org.apache.http.impl.client.RoutedRequest req
		org.apache.http.protocol.HttpContext context
		org.apache.http.impl.client.RequestWrapper wrapper
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.HttpResponse response
		Exception retryReason
	protected void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> () 
		java.io.IOException ignored
	protected org.apache.http.conn.routing.HttpRoute <a class="d" name="determineRoute" href="/source/s?defs=determineRoute">determineRoute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	protected void <a class="d" name="establishRoute" href="/source/s?defs=establishRoute">establishRoute</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean secure
		int hop
		boolean secure
		org.apache.http.conn.routing.HttpRoute fact
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.routing.HttpRouteDirector rowdy
		int step
	protected boolean <a class="d" name="createTunnelToTarget" href="/source/s?defs=createTunnelToTarget">createTunnelToTarget</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.auth.AuthenticationException ex
		org.apache.http.HttpEntity entity
		java.util.Map challenges
		org.apache.http.HttpRequest connect
		int status
		org.apache.http.client.CredentialsProvider credsProvider
		org.apache.http.HttpEntity entity
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpHost proxy
		org.apache.http.HttpHost target
		org.apache.http.HttpResponse response
		boolean done
		int status
	protected boolean <a class="d" name="createTunnelToProxy" href="/source/s?defs=createTunnelToProxy">createTunnelToProxy</a> (org.apache.http.conn.routing.HttpRoute, int, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.routing.HttpRoute route
		int hop
		org.apache.http.protocol.HttpContext context
	protected org.apache.http.HttpRequest <a class="d" name="createConnectRequest" href="/source/s?defs=createConnectRequest">createConnectRequest</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) 
		org.apache.http.conn.scheme.Scheme scheme
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpHost target
		String host
		int port
		StringBuilder buffer
		String authority
		org.apache.http.ProtocolVersion ver
		org.apache.http.HttpRequest req
	protected org.apache.http.impl.client.RoutedRequest <a class="d" name="handleResponse" href="/source/s?defs=handleResponse">handleResponse</a> (org.apache.http.impl.client.RoutedRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.client.methods.HttpUriRequest redirect
		org.apache.http.HttpRequest orig
		java.net.URI uri
		org.apache.http.HttpHost newTarget
		org.apache.http.impl.client.RequestWrapper wrapper
		org.apache.http.conn.routing.HttpRoute newRoute
		org.apache.http.impl.client.RoutedRequest newRequest
		org.apache.http.auth.AuthenticationException ex
		org.apache.http.HttpHost target
		java.util.Map challenges
		org.apache.http.auth.AuthenticationException ex
		org.apache.http.HttpHost proxy
		java.util.Map challenges
		org.apache.http.impl.client.RoutedRequest roureq
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.impl.client.RequestWrapper request
		org.apache.http.params.HttpParams params
		org.apache.http.client.CredentialsProvider credsProvider
	private void <a class="d" name="abortConnection" href="/source/s?defs=abortConnection">abortConnection</a> () 
		java.io.IOException ex
		java.io.IOException ignored
		org.apache.http.conn.ManagedClientConnection mcc
	private void <a class="d" name="processChallenges" href="/source/s?defs=processChallenges">processChallenges</a> (java.util.Map, org.apache.http.auth.AuthState, org.apache.http.client.AuthenticationHandler, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		java.util.Map challenges
		org.apache.http.auth.AuthState authState
		org.apache.http.client.AuthenticationHandler authHandler
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.auth.AuthScheme authScheme
		String id
		org.apache.http.Header challenge
	private void <a class="d" name="updateAuthState" href="/source/s?defs=updateAuthState">updateAuthState</a> (org.apache.http.auth.AuthState, org.apache.http.HttpHost, org.apache.http.client.CredentialsProvider) 
		org.apache.http.conn.scheme.Scheme scheme
		org.apache.http.auth.AuthState authState
		org.apache.http.HttpHost host
		org.apache.http.client.CredentialsProvider credsProvider
		String hostname
		int port
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.auth.AuthScope authScope
		org.apache.http.auth.Credentials creds
}
</pre><br/><b>org/apache/http/impl/client/DefaultUserTokenHandler.class</b><pre><a href="/source/s?path=DefaultUserTokenHandler.java">DefaultUserTokenHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultUserTokenHandler" href="/source/s?defs=org.apache.http.impl.client.DefaultUserTokenHandler">org.apache.http.impl.client.DefaultUserTokenHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.UserTokenHandler">org.apache.http.client.UserTokenHandler</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.lang.Object <a class="d" name="getUserToken" href="/source/s?defs=getUserToken">getUserToken</a> (org.apache.http.protocol.HttpContext) 
		org.apache.http.auth.AuthState proxyAuthState
		javax.net.ssl.SSLSession sslsession
		org.apache.http.conn.HttpRoutedConnection conn
		org.apache.http.protocol.HttpContext context
		java.security.Principal userPrincipal
		org.apache.http.auth.AuthState targetAuthState
	private static java.security.Principal <a class="d" name="getAuthPrincipal" href="/source/s?defs=getAuthPrincipal">getAuthPrincipal</a> (org.apache.http.auth.AuthState) 
		org.apache.http.auth.Credentials creds
		org.apache.http.auth.AuthState authState
		org.apache.http.auth.AuthScheme scheme
}
</pre><br/><b>org/apache/http/impl/client/RedirectLocations.class</b><pre><a href="/source/s?path=RedirectLocations.java">RedirectLocations.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.RedirectLocations" href="/source/s?defs=org.apache.http.impl.client.RedirectLocations">org.apache.http.impl.client.RedirectLocations</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.Set <a class="d" name="unique" href="/source/s?defs=unique">unique</a>
	private final java.util.List <a class="d" name="all" href="/source/s?defs=all">all</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="contains" href="/source/s?defs=contains">contains</a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="add" href="/source/s?defs=add">add</a> (java.net.URI) 
		java.net.URI uri
	public boolean <a class="d" name="remove" href="/source/s?defs=remove">remove</a> (java.net.URI) 
		java.net.URI current
		java.util.Iterator it
		java.net.URI uri
		boolean removed
	public java.util.List <a class="d" name="getAll" href="/source/s?defs=getAll">getAll</a> () 
}
</pre><br/><b>org/apache/http/impl/client/EntityEnclosingRequestWrapper$EntityWrapper.class</b><pre><a href="/source/s?path=EntityEnclosingRequestWrapper.java">EntityEnclosingRequestWrapper.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
 <a class="d" name="org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper" href="/source/s?defs=org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper">org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper</a> extends <a href="/source/s?defs=org.apache.http.entity.HttpEntityWrapper">org.apache.http.entity.HttpEntityWrapper</a> {
	final synthetic org.apache.http.impl.client.EntityEnclosingRequestWrapper <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.client.EntityEnclosingRequestWrapper, org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
}
</pre><br/><b>org/apache/http/impl/client/ContentEncodingHttpClient.class</b><pre><a href="/source/s?path=ContentEncodingHttpClient.java">ContentEncodingHttpClient.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.ContentEncodingHttpClient" href="/source/s?defs=org.apache.http.impl.client.ContentEncodingHttpClient">org.apache.http.impl.client.ContentEncodingHttpClient</a> extends <a href="/source/s?defs=org.apache.http.impl.client.DefaultHttpClient">org.apache.http.impl.client.DefaultHttpClient</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager, org.apache.http.params.HttpParams) 
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected org.apache.http.protocol.BasicHttpProcessor <a class="d" name="createHttpProcessor" href="/source/s?defs=createHttpProcessor">createHttpProcessor</a> () 
		org.apache.http.protocol.BasicHttpProcessor result
}
</pre><br/><b>org/apache/http/impl/client/AbstractHttpClient.class</b><pre><a href="/source/s?path=AbstractHttpClient.java">AbstractHttpClient.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public abstract <a class="d" name="org.apache.http.impl.client.AbstractHttpClient" href="/source/s?defs=org.apache.http.impl.client.AbstractHttpClient">org.apache.http.impl.client.AbstractHttpClient</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.HttpClient">org.apache.http.client.HttpClient</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private org.apache.http.params.HttpParams <a class="d" name="defaultParams" href="/source/s?defs=defaultParams">defaultParams</a>
	private org.apache.http.protocol.HttpRequestExecutor <a class="d" name="requestExec" href="/source/s?defs=requestExec">requestExec</a>
	private org.apache.http.conn.ClientConnectionManager <a class="d" name="connManager" href="/source/s?defs=connManager">connManager</a>
	private org.apache.http.ConnectionReuseStrategy <a class="d" name="reuseStrategy" href="/source/s?defs=reuseStrategy">reuseStrategy</a>
	private org.apache.http.conn.ConnectionKeepAliveStrategy <a class="d" name="keepAliveStrategy" href="/source/s?defs=keepAliveStrategy">keepAliveStrategy</a>
	private org.apache.http.cookie.CookieSpecRegistry <a class="d" name="supportedCookieSpecs" href="/source/s?defs=supportedCookieSpecs">supportedCookieSpecs</a>
	private org.apache.http.auth.AuthSchemeRegistry <a class="d" name="supportedAuthSchemes" href="/source/s?defs=supportedAuthSchemes">supportedAuthSchemes</a>
	private org.apache.http.protocol.BasicHttpProcessor <a class="d" name="mutableProcessor" href="/source/s?defs=mutableProcessor">mutableProcessor</a>
	private org.apache.http.protocol.ImmutableHttpProcessor <a class="d" name="protocolProcessor" href="/source/s?defs=protocolProcessor">protocolProcessor</a>
	private org.apache.http.client.HttpRequestRetryHandler <a class="d" name="retryHandler" href="/source/s?defs=retryHandler">retryHandler</a>
	private org.apache.http.client.RedirectStrategy <a class="d" name="redirectStrategy" href="/source/s?defs=redirectStrategy">redirectStrategy</a>
	private org.apache.http.client.AuthenticationHandler <a class="d" name="targetAuthHandler" href="/source/s?defs=targetAuthHandler">targetAuthHandler</a>
	private org.apache.http.client.AuthenticationHandler <a class="d" name="proxyAuthHandler" href="/source/s?defs=proxyAuthHandler">proxyAuthHandler</a>
	private org.apache.http.client.CookieStore <a class="d" name="cookieStore" href="/source/s?defs=cookieStore">cookieStore</a>
	private org.apache.http.client.CredentialsProvider <a class="d" name="credsProvider" href="/source/s?defs=credsProvider">credsProvider</a>
	private org.apache.http.conn.routing.HttpRoutePlanner <a class="d" name="routePlanner" href="/source/s?defs=routePlanner">routePlanner</a>
	private org.apache.http.client.UserTokenHandler <a class="d" name="userTokenHandler" href="/source/s?defs=userTokenHandler">userTokenHandler</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager, org.apache.http.params.HttpParams) 
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.params.HttpParams params
	protected abstract org.apache.http.params.HttpParams <a class="d" name="createHttpParams" href="/source/s?defs=createHttpParams">createHttpParams</a> () 
	protected abstract org.apache.http.protocol.BasicHttpProcessor <a class="d" name="createHttpProcessor" href="/source/s?defs=createHttpProcessor">createHttpProcessor</a> () 
	protected org.apache.http.protocol.HttpContext <a class="d" name="createHttpContext" href="/source/s?defs=createHttpContext">createHttpContext</a> () 
		org.apache.http.protocol.HttpContext context
	protected org.apache.http.conn.ClientConnectionManager <a class="d" name="createClientConnectionManager" href="/source/s?defs=createClientConnectionManager">createClientConnectionManager</a> () 
		Class clazz
		ClassNotFoundException ex
		IllegalAccessException ex
		InstantiationException ex
		org.apache.http.conn.scheme.SchemeRegistry registry
		org.apache.http.conn.ClientConnectionManager connManager
		org.apache.http.params.HttpParams params
		org.apache.http.conn.ClientConnectionManagerFactory factory
		String className
	protected org.apache.http.auth.AuthSchemeRegistry <a class="d" name="createAuthSchemeRegistry" href="/source/s?defs=createAuthSchemeRegistry">createAuthSchemeRegistry</a> () 
		org.apache.http.auth.AuthSchemeRegistry registry
	protected org.apache.http.cookie.CookieSpecRegistry <a class="d" name="createCookieSpecRegistry" href="/source/s?defs=createCookieSpecRegistry">createCookieSpecRegistry</a> () 
		org.apache.http.cookie.CookieSpecRegistry registry
	protected org.apache.http.protocol.HttpRequestExecutor <a class="d" name="createRequestExecutor" href="/source/s?defs=createRequestExecutor">createRequestExecutor</a> () 
	protected org.apache.http.ConnectionReuseStrategy <a class="d" name="createConnectionReuseStrategy" href="/source/s?defs=createConnectionReuseStrategy">createConnectionReuseStrategy</a> () 
	protected org.apache.http.conn.ConnectionKeepAliveStrategy <a class="d" name="createConnectionKeepAliveStrategy" href="/source/s?defs=createConnectionKeepAliveStrategy">createConnectionKeepAliveStrategy</a> () 
	protected org.apache.http.client.HttpRequestRetryHandler <a class="d" name="createHttpRequestRetryHandler" href="/source/s?defs=createHttpRequestRetryHandler">createHttpRequestRetryHandler</a> () 
	protected org.apache.http.client.RedirectHandler <a class="d" name="createRedirectHandler" href="/source/s?defs=createRedirectHandler">createRedirectHandler</a> () 
	protected org.apache.http.client.AuthenticationHandler <a class="d" name="createTargetAuthenticationHandler" href="/source/s?defs=createTargetAuthenticationHandler">createTargetAuthenticationHandler</a> () 
	protected org.apache.http.client.AuthenticationHandler <a class="d" name="createProxyAuthenticationHandler" href="/source/s?defs=createProxyAuthenticationHandler">createProxyAuthenticationHandler</a> () 
	protected org.apache.http.client.CookieStore <a class="d" name="createCookieStore" href="/source/s?defs=createCookieStore">createCookieStore</a> () 
	protected org.apache.http.client.CredentialsProvider <a class="d" name="createCredentialsProvider" href="/source/s?defs=createCredentialsProvider">createCredentialsProvider</a> () 
	protected org.apache.http.conn.routing.HttpRoutePlanner <a class="d" name="createHttpRoutePlanner" href="/source/s?defs=createHttpRoutePlanner">createHttpRoutePlanner</a> () 
	protected org.apache.http.client.UserTokenHandler <a class="d" name="createUserTokenHandler" href="/source/s?defs=createUserTokenHandler">createUserTokenHandler</a> () 
	public final synchronized org.apache.http.params.HttpParams <a class="d" name="getParams" href="/source/s?defs=getParams">getParams</a> () 
	public synchronized void <a class="d" name="setParams" href="/source/s?defs=setParams">setParams</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public final synchronized org.apache.http.conn.ClientConnectionManager <a class="d" name="getConnectionManager" href="/source/s?defs=getConnectionManager">getConnectionManager</a> () 
	public final synchronized org.apache.http.protocol.HttpRequestExecutor <a class="d" name="getRequestExecutor" href="/source/s?defs=getRequestExecutor">getRequestExecutor</a> () 
	public final synchronized org.apache.http.auth.AuthSchemeRegistry <a class="d" name="getAuthSchemes" href="/source/s?defs=getAuthSchemes">getAuthSchemes</a> () 
	public synchronized void <a class="d" name="setAuthSchemes" href="/source/s?defs=setAuthSchemes">setAuthSchemes</a> (org.apache.http.auth.AuthSchemeRegistry) 
		org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry
	public final synchronized org.apache.http.cookie.CookieSpecRegistry <a class="d" name="getCookieSpecs" href="/source/s?defs=getCookieSpecs">getCookieSpecs</a> () 
	public synchronized void <a class="d" name="setCookieSpecs" href="/source/s?defs=setCookieSpecs">setCookieSpecs</a> (org.apache.http.cookie.CookieSpecRegistry) 
		org.apache.http.cookie.CookieSpecRegistry cookieSpecRegistry
	public final synchronized org.apache.http.ConnectionReuseStrategy <a class="d" name="getConnectionReuseStrategy" href="/source/s?defs=getConnectionReuseStrategy">getConnectionReuseStrategy</a> () 
	public synchronized void <a class="d" name="setReuseStrategy" href="/source/s?defs=setReuseStrategy">setReuseStrategy</a> (org.apache.http.ConnectionReuseStrategy) 
		org.apache.http.ConnectionReuseStrategy reuseStrategy
	public final synchronized org.apache.http.conn.ConnectionKeepAliveStrategy <a class="d" name="getConnectionKeepAliveStrategy" href="/source/s?defs=getConnectionKeepAliveStrategy">getConnectionKeepAliveStrategy</a> () 
	public synchronized void <a class="d" name="setKeepAliveStrategy" href="/source/s?defs=setKeepAliveStrategy">setKeepAliveStrategy</a> (org.apache.http.conn.ConnectionKeepAliveStrategy) 
		org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy
	public final synchronized org.apache.http.client.HttpRequestRetryHandler <a class="d" name="getHttpRequestRetryHandler" href="/source/s?defs=getHttpRequestRetryHandler">getHttpRequestRetryHandler</a> () 
	public synchronized void <a class="d" name="setHttpRequestRetryHandler" href="/source/s?defs=setHttpRequestRetryHandler">setHttpRequestRetryHandler</a> (org.apache.http.client.HttpRequestRetryHandler) 
		org.apache.http.client.HttpRequestRetryHandler retryHandler
	public final synchronized org.apache.http.client.RedirectHandler <a class="d" name="getRedirectHandler" href="/source/s?defs=getRedirectHandler">getRedirectHandler</a> () 
	public synchronized void <a class="d" name="setRedirectHandler" href="/source/s?defs=setRedirectHandler">setRedirectHandler</a> (org.apache.http.client.RedirectHandler) 
		org.apache.http.client.RedirectHandler redirectHandler
	public final synchronized org.apache.http.client.RedirectStrategy <a class="d" name="getRedirectStrategy" href="/source/s?defs=getRedirectStrategy">getRedirectStrategy</a> () 
	public synchronized void <a class="d" name="setRedirectStrategy" href="/source/s?defs=setRedirectStrategy">setRedirectStrategy</a> (org.apache.http.client.RedirectStrategy) 
		org.apache.http.client.RedirectStrategy redirectStrategy
	public final synchronized org.apache.http.client.AuthenticationHandler <a class="d" name="getTargetAuthenticationHandler" href="/source/s?defs=getTargetAuthenticationHandler">getTargetAuthenticationHandler</a> () 
	public synchronized void <a class="d" name="setTargetAuthenticationHandler" href="/source/s?defs=setTargetAuthenticationHandler">setTargetAuthenticationHandler</a> (org.apache.http.client.AuthenticationHandler) 
		org.apache.http.client.AuthenticationHandler targetAuthHandler
	public final synchronized org.apache.http.client.AuthenticationHandler <a class="d" name="getProxyAuthenticationHandler" href="/source/s?defs=getProxyAuthenticationHandler">getProxyAuthenticationHandler</a> () 
	public synchronized void <a class="d" name="setProxyAuthenticationHandler" href="/source/s?defs=setProxyAuthenticationHandler">setProxyAuthenticationHandler</a> (org.apache.http.client.AuthenticationHandler) 
		org.apache.http.client.AuthenticationHandler proxyAuthHandler
	public final synchronized org.apache.http.client.CookieStore <a class="d" name="getCookieStore" href="/source/s?defs=getCookieStore">getCookieStore</a> () 
	public synchronized void <a class="d" name="setCookieStore" href="/source/s?defs=setCookieStore">setCookieStore</a> (org.apache.http.client.CookieStore) 
		org.apache.http.client.CookieStore cookieStore
	public final synchronized org.apache.http.client.CredentialsProvider <a class="d" name="getCredentialsProvider" href="/source/s?defs=getCredentialsProvider">getCredentialsProvider</a> () 
	public synchronized void <a class="d" name="setCredentialsProvider" href="/source/s?defs=setCredentialsProvider">setCredentialsProvider</a> (org.apache.http.client.CredentialsProvider) 
		org.apache.http.client.CredentialsProvider credsProvider
	public final synchronized org.apache.http.conn.routing.HttpRoutePlanner <a class="d" name="getRoutePlanner" href="/source/s?defs=getRoutePlanner">getRoutePlanner</a> () 
	public synchronized void <a class="d" name="setRoutePlanner" href="/source/s?defs=setRoutePlanner">setRoutePlanner</a> (org.apache.http.conn.routing.HttpRoutePlanner) 
		org.apache.http.conn.routing.HttpRoutePlanner routePlanner
	public final synchronized org.apache.http.client.UserTokenHandler <a class="d" name="getUserTokenHandler" href="/source/s?defs=getUserTokenHandler">getUserTokenHandler</a> () 
	public synchronized void <a class="d" name="setUserTokenHandler" href="/source/s?defs=setUserTokenHandler">setUserTokenHandler</a> (org.apache.http.client.UserTokenHandler) 
		org.apache.http.client.UserTokenHandler userTokenHandler
	protected final synchronized org.apache.http.protocol.BasicHttpProcessor <a class="d" name="getHttpProcessor" href="/source/s?defs=getHttpProcessor">getHttpProcessor</a> () 
	private final synchronized org.apache.http.protocol.HttpProcessor <a class="d" name="getProtocolProcessor" href="/source/s?defs=getProtocolProcessor">getProtocolProcessor</a> () 
		int i
		int i
		org.apache.http.protocol.BasicHttpProcessor proc
		int reqc
		org.apache.http.HttpRequestInterceptor[] reqinterceptors
		int resc
		org.apache.http.HttpResponseInterceptor[] resinterceptors
	public synchronized int <a class="d" name="getResponseInterceptorCount" href="/source/s?defs=getResponseInterceptorCount">getResponseInterceptorCount</a> () 
	public synchronized org.apache.http.HttpResponseInterceptor <a class="d" name="getResponseInterceptor" href="/source/s?defs=getResponseInterceptor">getResponseInterceptor</a> (int) 
		int index
	public synchronized org.apache.http.HttpRequestInterceptor <a class="d" name="getRequestInterceptor" href="/source/s?defs=getRequestInterceptor">getRequestInterceptor</a> (int) 
		int index
	public synchronized int <a class="d" name="getRequestInterceptorCount" href="/source/s?defs=getRequestInterceptorCount">getRequestInterceptorCount</a> () 
	public synchronized void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor) 
		org.apache.http.HttpResponseInterceptor itcp
	public synchronized void <a class="d" name="addResponseInterceptor" href="/source/s?defs=addResponseInterceptor">addResponseInterceptor</a> (org.apache.http.HttpResponseInterceptor, int) 
		org.apache.http.HttpResponseInterceptor itcp
		int index
	public synchronized void <a class="d" name="clearResponseInterceptors" href="/source/s?defs=clearResponseInterceptors">clearResponseInterceptors</a> () 
	public synchronized void <a class="d" name="removeResponseInterceptorByClass" href="/source/s?defs=removeResponseInterceptorByClass">removeResponseInterceptorByClass</a> (java.lang.Class) 
		Class clazz
	public synchronized void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor) 
		org.apache.http.HttpRequestInterceptor itcp
	public synchronized void <a class="d" name="addRequestInterceptor" href="/source/s?defs=addRequestInterceptor">addRequestInterceptor</a> (org.apache.http.HttpRequestInterceptor, int) 
		org.apache.http.HttpRequestInterceptor itcp
		int index
	public synchronized void <a class="d" name="clearRequestInterceptors" href="/source/s?defs=clearRequestInterceptors">clearRequestInterceptors</a> () 
	public synchronized void <a class="d" name="removeRequestInterceptorByClass" href="/source/s?defs=removeRequestInterceptorByClass">removeRequestInterceptorByClass</a> (java.lang.Class) 
		Class clazz
	public final org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.client.methods.HttpUriRequest request
	public final org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.client.methods.HttpUriRequest request
		org.apache.http.protocol.HttpContext context
	private static org.apache.http.HttpHost <a class="d" name="determineTarget" href="/source/s?defs=determineTarget">determineTarget</a> (org.apache.http.client.methods.HttpUriRequest)  throws <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.client.methods.HttpUriRequest request
		org.apache.http.HttpHost target
		java.net.URI requestURI
	public final org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
	public final org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.protocol.HttpContext defaultContext
		org.apache.http.HttpException httpException
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.protocol.HttpContext execContext
		org.apache.http.client.RequestDirector director
	protected org.apache.http.client.RequestDirector <a class="d" name="createClientRequestDirector" href="/source/s?defs=createClientRequestDirector">createClientRequestDirector</a> (org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams) 
		org.apache.http.protocol.HttpRequestExecutor requestExec
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.ConnectionReuseStrategy reustrat
		org.apache.http.conn.ConnectionKeepAliveStrategy kastrat
		org.apache.http.conn.routing.HttpRoutePlanner rouplan
		org.apache.http.protocol.HttpProcessor httpProcessor
		org.apache.http.client.HttpRequestRetryHandler retryHandler
		org.apache.http.client.RedirectHandler redirectHandler
		org.apache.http.client.AuthenticationHandler targetAuthHandler
		org.apache.http.client.AuthenticationHandler proxyAuthHandler
		org.apache.http.client.UserTokenHandler stateHandler
		org.apache.http.params.HttpParams params
	protected org.apache.http.client.RequestDirector <a class="d" name="createClientRequestDirector" href="/source/s?defs=createClientRequestDirector">createClientRequestDirector</a> (org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectStrategy, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams) 
		org.apache.http.protocol.HttpRequestExecutor requestExec
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.ConnectionReuseStrategy reustrat
		org.apache.http.conn.ConnectionKeepAliveStrategy kastrat
		org.apache.http.conn.routing.HttpRoutePlanner rouplan
		org.apache.http.protocol.HttpProcessor httpProcessor
		org.apache.http.client.HttpRequestRetryHandler retryHandler
		org.apache.http.client.RedirectStrategy redirectStrategy
		org.apache.http.client.AuthenticationHandler targetAuthHandler
		org.apache.http.client.AuthenticationHandler proxyAuthHandler
		org.apache.http.client.UserTokenHandler stateHandler
		org.apache.http.params.HttpParams params
	protected org.apache.http.params.HttpParams <a class="d" name="determineParams" href="/source/s?defs=determineParams">determineParams</a> (org.apache.http.HttpRequest) 
		org.apache.http.HttpRequest req
	public java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.client.methods.HttpUriRequest request
		org.apache.http.client.ResponseHandler responseHandler
	public java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.client.methods.HttpUriRequest request
		org.apache.http.client.ResponseHandler responseHandler
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpHost target
	public java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.client.ResponseHandler responseHandler
	public java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
		Exception t2
		org.apache.http.HttpEntity entity
		Throwable t
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.client.ResponseHandler responseHandler
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpResponse response
		Object result
		org.apache.http.HttpEntity entity
}
</pre><br/><b>org/apache/http/impl/client/ClientParamsStack.class</b><pre><a href="/source/s?path=ClientParamsStack.java">ClientParamsStack.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.ClientParamsStack" href="/source/s?defs=org.apache.http.impl.client.ClientParamsStack">org.apache.http.impl.client.ClientParamsStack</a> extends <a href="/source/s?defs=org.apache.http.params.AbstractHttpParams">org.apache.http.params.AbstractHttpParams</a> {
	protected final org.apache.http.params.HttpParams <a class="d" name="applicationParams" href="/source/s?defs=applicationParams">applicationParams</a>
	protected final org.apache.http.params.HttpParams <a class="d" name="clientParams" href="/source/s?defs=clientParams">clientParams</a>
	protected final org.apache.http.params.HttpParams <a class="d" name="requestParams" href="/source/s?defs=requestParams">requestParams</a>
	protected final org.apache.http.params.HttpParams <a class="d" name="overrideParams" href="/source/s?defs=overrideParams">overrideParams</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams, org.apache.http.params.HttpParams, org.apache.http.params.HttpParams, org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams aparams
		org.apache.http.params.HttpParams cparams
		org.apache.http.params.HttpParams rparams
		org.apache.http.params.HttpParams oparams
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.client.ClientParamsStack) 
		org.apache.http.impl.client.ClientParamsStack stack
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.client.ClientParamsStack, org.apache.http.params.HttpParams, org.apache.http.params.HttpParams, org.apache.http.params.HttpParams, org.apache.http.params.HttpParams) 
		org.apache.http.impl.client.ClientParamsStack stack
		org.apache.http.params.HttpParams aparams
		org.apache.http.params.HttpParams cparams
		org.apache.http.params.HttpParams rparams
		org.apache.http.params.HttpParams oparams
	public final org.apache.http.params.HttpParams <a class="d" name="getApplicationParams" href="/source/s?defs=getApplicationParams">getApplicationParams</a> () 
	public final org.apache.http.params.HttpParams <a class="d" name="getClientParams" href="/source/s?defs=getClientParams">getClientParams</a> () 
	public final org.apache.http.params.HttpParams <a class="d" name="getRequestParams" href="/source/s?defs=getRequestParams">getRequestParams</a> () 
	public final org.apache.http.params.HttpParams <a class="d" name="getOverrideParams" href="/source/s?defs=getOverrideParams">getOverrideParams</a> () 
	public java.lang.Object <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
		Object result
	public org.apache.http.params.HttpParams <a class="d" name="setParameter" href="/source/s?defs=setParameter">setParameter</a> (java.lang.String, java.lang.Object)  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
		String name
		Object value
	public boolean <a class="d" name="removeParameter" href="/source/s?defs=removeParameter">removeParameter</a> (java.lang.String) 
		String name
	public org.apache.http.params.HttpParams <a class="d" name="copy" href="/source/s?defs=copy">copy</a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultProxyAuthenticationHandler.class</b><pre><a href="/source/s?path=DefaultProxyAuthenticationHandler.java">DefaultProxyAuthenticationHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultProxyAuthenticationHandler" href="/source/s?defs=org.apache.http.impl.client.DefaultProxyAuthenticationHandler">org.apache.http.impl.client.DefaultProxyAuthenticationHandler</a> extends <a href="/source/s?defs=org.apache.http.impl.client.AbstractAuthenticationHandler">org.apache.http.impl.client.AbstractAuthenticationHandler</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isAuthenticationRequested" href="/source/s?defs=isAuthenticationRequested">isAuthenticationRequested</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int status
	public java.util.Map <a class="d" name="getChallenges" href="/source/s?defs=getChallenges">getChallenges</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.Header[] headers
	protected java.util.List <a class="d" name="getAuthPreferences" href="/source/s?defs=getAuthPreferences">getAuthPreferences</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		java.util.List authpref
}
</pre><br/><b>org/apache/http/impl/client/RoutedRequest.class</b><pre><a href="/source/s?path=RoutedRequest.java">RoutedRequest.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.RoutedRequest" href="/source/s?defs=org.apache.http.impl.client.RoutedRequest">org.apache.http.impl.client.RoutedRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	protected final org.apache.http.impl.client.RequestWrapper <a class="d" name="request" href="/source/s?defs=request">request</a>
	protected final org.apache.http.conn.routing.HttpRoute <a class="d" name="route" href="/source/s?defs=route">route</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.client.RequestWrapper, org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.impl.client.RequestWrapper req
		org.apache.http.conn.routing.HttpRoute route
	public final org.apache.http.impl.client.RequestWrapper <a class="d" name="getRequest" href="/source/s?defs=getRequest">getRequest</a> () 
	public final org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultRedirectHandler.class</b><pre><a href="/source/s?path=DefaultRedirectHandler.java">DefaultRedirectHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultRedirectHandler" href="/source/s?defs=org.apache.http.impl.client.DefaultRedirectHandler">org.apache.http.impl.client.DefaultRedirectHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.RedirectHandler">org.apache.http.client.RedirectHandler</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private static final String <a class="d" name="REDIRECT_LOCATIONS" href="/source/s?defs=REDIRECT_LOCATIONS">REDIRECT_LOCATIONS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isRedirectRequested" href="/source/s?defs=isRedirectRequested">isRedirectRequested</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpRequest request
		String method
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		int statusCode
	public java.net.URI <a class="d" name="getLocationURI" href="/source/s?defs=getLocationURI">getLocationURI</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		java.net.URISyntaxException ex
		java.net.URI requestURI
		java.net.URI absoluteRequestURI
		java.net.URISyntaxException ex
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.HttpHost target
		java.net.URISyntaxException ex
		org.apache.http.impl.client.RedirectLocations redirectLocations
		java.net.URI redirectURI
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.Header locationHeader
		String location
		java.net.URI uri
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/client/BasicAuthCache.class</b><pre><a href="/source/s?path=BasicAuthCache.java">BasicAuthCache.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.BasicAuthCache" href="/source/s?defs=org.apache.http.impl.client.BasicAuthCache">org.apache.http.impl.client.BasicAuthCache</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.AuthCache">org.apache.http.client.AuthCache</a>  {
	private final java.util.HashMap <a class="d" name="map" href="/source/s?defs=map">map</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="put" href="/source/s?defs=put">put</a> (org.apache.http.HttpHost, org.apache.http.auth.AuthScheme) 
		org.apache.http.HttpHost host
		org.apache.http.auth.AuthScheme authScheme
	public org.apache.http.auth.AuthScheme <a class="d" name="get" href="/source/s?defs=get">get</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost host
	public void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost host
	public void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/client/AbstractAuthenticationHandler.class</b><pre><a href="/source/s?path=AbstractAuthenticationHandler.java">AbstractAuthenticationHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public abstract <a class="d" name="org.apache.http.impl.client.AbstractAuthenticationHandler" href="/source/s?defs=org.apache.http.impl.client.AbstractAuthenticationHandler">org.apache.http.impl.client.AbstractAuthenticationHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.AuthenticationHandler">org.apache.http.client.AuthenticationHandler</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private static final java.util.List <a class="d" name="DEFAULT_SCHEME_PRIORITY" href="/source/s?defs=DEFAULT_SCHEME_PRIORITY">DEFAULT_SCHEME_PRIORITY</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected java.util.Map <a class="d" name="parseChallenges" href="/source/s?defs=parseChallenges">parseChallenges</a> (org.apache.http.Header[])  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		int pos
		String s
		org.apache.http.util.CharArrayBuffer buffer
		int pos
		int beginIndex
		int endIndex
		String s
		org.apache.http.Header header
		org.apache.http.Header[] arr$
		int len$
		int i$
		org.apache.http.Header[] headers
		java.util.Map map
	protected java.util.List <a class="d" name="getAuthPreferences" href="/source/s?defs=getAuthPreferences">getAuthPreferences</a> () 
	protected java.util.List <a class="d" name="getAuthPreferences" href="/source/s?defs=getAuthPreferences">getAuthPreferences</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
	public org.apache.http.auth.AuthScheme <a class="d" name="selectScheme" href="/source/s?defs=selectScheme">selectScheme</a> (java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		IllegalStateException e
		org.apache.http.Header challenge
		String id
		java.util.Iterator i$
		java.util.Map challenges
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.auth.AuthSchemeRegistry registry
		java.util.Collection authPrefs
		org.apache.http.auth.AuthScheme authScheme
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultHttpClient.class</b><pre><a href="/source/s?path=DefaultHttpClient.java">DefaultHttpClient.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.DefaultHttpClient" href="/source/s?defs=org.apache.http.impl.client.DefaultHttpClient">org.apache.http.impl.client.DefaultHttpClient</a> extends <a href="/source/s?defs=org.apache.http.impl.client.AbstractHttpClient">org.apache.http.impl.client.AbstractHttpClient</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager, org.apache.http.params.HttpParams) 
		org.apache.http.conn.ClientConnectionManager conman
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager) 
		org.apache.http.conn.ClientConnectionManager conman
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected org.apache.http.params.HttpParams <a class="d" name="createHttpParams" href="/source/s?defs=createHttpParams">createHttpParams</a> () 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setDefaultHttpParams" href="/source/s?defs=setDefaultHttpParams">setDefaultHttpParams</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		org.apache.http.util.VersionInfo vi
		String release
	protected org.apache.http.protocol.BasicHttpProcessor <a class="d" name="createHttpProcessor" href="/source/s?defs=createHttpProcessor">createHttpProcessor</a> () 
		org.apache.http.protocol.BasicHttpProcessor httpproc
}
</pre><br/><b>org/apache/http/impl/client/RequestWrapper.class</b><pre><a href="/source/s?path=RequestWrapper.java">RequestWrapper.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.RequestWrapper" href="/source/s?defs=org.apache.http.impl.client.RequestWrapper">org.apache.http.impl.client.RequestWrapper</a> extends <a href="/source/s?defs=org.apache.http.message.AbstractHttpMessage">org.apache.http.message.AbstractHttpMessage</a> implements <a href="/source/s?defs=org.apache.http.client.methods.HttpUriRequest">org.apache.http.client.methods.HttpUriRequest</a>  {
	private final org.apache.http.HttpRequest <a class="d" name="original" href="/source/s?defs=original">original</a>
	private java.net.URI <a class="d" name="uri" href="/source/s?defs=uri">uri</a>
	private String <a class="d" name="method" href="/source/s?defs=method">method</a>
	private org.apache.http.ProtocolVersion <a class="d" name="version" href="/source/s?defs=version">version</a>
	private int <a class="d" name="execCount" href="/source/s?defs=execCount">execCount</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		java.net.URISyntaxException ex
		org.apache.http.RequestLine requestLine
		org.apache.http.HttpRequest request
	public void <a class="d" name="resetHeaders" href="/source/s?defs=resetHeaders">resetHeaders</a> () 
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public void <a class="d" name="setMethod" href="/source/s?defs=setMethod">setMethod</a> (java.lang.String) 
		String method
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public void <a class="d" name="setProtocolVersion" href="/source/s?defs=setProtocolVersion">setProtocolVersion</a> (org.apache.http.ProtocolVersion) 
		org.apache.http.ProtocolVersion version
	public java.net.URI <a class="d" name="getURI" href="/source/s?defs=getURI">getURI</a> () 
	public void <a class="d" name="setURI" href="/source/s?defs=setURI">setURI</a> (java.net.URI) 
		java.net.URI uri
	public org.apache.http.RequestLine <a class="d" name="getRequestLine" href="/source/s?defs=getRequestLine">getRequestLine</a> () 
		String method
		org.apache.http.ProtocolVersion ver
		String uritext
	public void <a class="d" name="abort" href="/source/s?defs=abort">abort</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
	public boolean <a class="d" name="isAborted" href="/source/s?defs=isAborted">isAborted</a> () 
	public org.apache.http.HttpRequest <a class="d" name="getOriginal" href="/source/s?defs=getOriginal">getOriginal</a> () 
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public int <a class="d" name="getExecCount" href="/source/s?defs=getExecCount">getExecCount</a> () 
	public void <a class="d" name="incrementExecCount" href="/source/s?defs=incrementExecCount">incrementExecCount</a> () 
}
</pre><br/><b>org/apache/http/impl/client/DefaultRedirectStrategyAdaptor.class</b><pre><a href="/source/s?path=DefaultRedirectStrategyAdaptor.java">DefaultRedirectStrategyAdaptor.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
 <a class="d" name="org.apache.http.impl.client.DefaultRedirectStrategyAdaptor" href="/source/s?defs=org.apache.http.impl.client.DefaultRedirectStrategyAdaptor">org.apache.http.impl.client.DefaultRedirectStrategyAdaptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.RedirectStrategy">org.apache.http.client.RedirectStrategy</a>  {
	private final org.apache.http.client.RedirectHandler <a class="d" name="handler" href="/source/s?defs=handler">handler</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.client.RedirectHandler) 
		org.apache.http.client.RedirectHandler handler
	public boolean <a class="d" name="isRedirected" href="/source/s?defs=isRedirected">isRedirected</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
	public org.apache.http.client.methods.HttpUriRequest <a class="d" name="getRedirect" href="/source/s?defs=getRedirect">getRedirect</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		java.net.URI uri
		String method
}
</pre><br/><b>org/apache/http/impl/client/TunnelRefusedException.class</b><pre><a href="/source/s?path=TunnelRefusedException.java">TunnelRefusedException.java</a>
package <a href="/source/s?defs=org.apache.http.impl.client">org.apache.http.impl.client</a>
public <a class="d" name="org.apache.http.impl.client.TunnelRefusedException" href="/source/s?defs=org.apache.http.impl.client.TunnelRefusedException">org.apache.http.impl.client.TunnelRefusedException</a> extends <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.HttpResponse <a class="d" name="response" href="/source/s?defs=response">response</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, org.apache.http.HttpResponse) 
		String message
		org.apache.http.HttpResponse response
	public org.apache.http.HttpResponse <a class="d" name="getResponse" href="/source/s?defs=getResponse">getResponse</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/ConnPoolByRoute$1.class</b><pre><a href="/source/s?path=ConnPoolByRoute.java">ConnPoolByRoute.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
 <a class="d" name="org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1" href="/source/s?defs=org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1">org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.impl.conn.tsccm.PoolEntryRequest">org.apache.http.impl.conn.tsccm.PoolEntryRequest</a>  {
	final synthetic org.apache.http.impl.conn.tsccm.WaitingThreadAborter <a class="d" name="val$aborter" href="/source/s?defs=val$aborter">val$aborter</a>
	final synthetic org.apache.http.conn.routing.HttpRoute <a class="d" name="val$route" href="/source/s?defs=val$route">val$route</a>
	final synthetic Object <a class="d" name="val$state" href="/source/s?defs=val$state">val$state</a>
	final synthetic org.apache.http.impl.conn.tsccm.ConnPoolByRoute <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.tsccm.ConnPoolByRoute, org.apache.http.impl.conn.tsccm.WaitingThreadAborter, org.apache.http.conn.routing.HttpRoute, java.lang.Object)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> 
	public void <a class="d" name="abortRequest" href="/source/s?defs=abortRequest">abortRequest</a> () 
	public org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="getPoolEntry" href="/source/s?defs=getPoolEntry">getPoolEntry</a> (long, java.util.concurrent.TimeUnit)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> 
		long timeout
		java.util.concurrent.TimeUnit tunit
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/ConnPoolByRoute.class</b><pre><a href="/source/s?path=ConnPoolByRoute.java">ConnPoolByRoute.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.ConnPoolByRoute" href="/source/s?defs=org.apache.http.impl.conn.tsccm.ConnPoolByRoute">org.apache.http.impl.conn.tsccm.ConnPoolByRoute</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.tsccm.AbstractConnPool">org.apache.http.impl.conn.tsccm.AbstractConnPool</a> {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private final java.util.concurrent.locks.Lock <a class="d" name="poolLock" href="/source/s?defs=poolLock">poolLock</a>
	protected final org.apache.http.conn.ClientConnectionOperator <a class="d" name="operator" href="/source/s?defs=operator">operator</a>
	protected final org.apache.http.conn.params.ConnPerRoute <a class="d" name="connPerRoute" href="/source/s?defs=connPerRoute">connPerRoute</a>
	protected final java.util.Set <a class="d" name="leasedConnections" href="/source/s?defs=leasedConnections">leasedConnections</a>
	protected final java.util.Queue <a class="d" name="freeConnections" href="/source/s?defs=freeConnections">freeConnections</a>
	protected final java.util.Queue <a class="d" name="waitingThreads" href="/source/s?defs=waitingThreads">waitingThreads</a>
	protected final java.util.Map <a class="d" name="routeToPool" href="/source/s?defs=routeToPool">routeToPool</a>
	private final long <a class="d" name="connTTL" href="/source/s?defs=connTTL">connTTL</a>
	private final java.util.concurrent.TimeUnit <a class="d" name="connTTLTimeUnit" href="/source/s?defs=connTTLTimeUnit">connTTLTimeUnit</a>
	protected volatile boolean <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a>
	protected volatile int <a class="d" name="maxTotalConnections" href="/source/s?defs=maxTotalConnections">maxTotalConnections</a>
	protected volatile int <a class="d" name="numConnections" href="/source/s?defs=numConnections">numConnections</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.params.ConnPerRoute, int) 
		org.apache.http.conn.ClientConnectionOperator operator
		org.apache.http.conn.params.ConnPerRoute connPerRoute
		int maxTotalConnections
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.params.ConnPerRoute, int, long, java.util.concurrent.TimeUnit) 
		org.apache.http.conn.ClientConnectionOperator operator
		org.apache.http.conn.params.ConnPerRoute connPerRoute
		int maxTotalConnections
		long connTTL
		java.util.concurrent.TimeUnit connTTLTimeUnit
	protected java.util.concurrent.locks.Lock <a class="d" name="getLock" href="/source/s?defs=getLock">getLock</a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.params.HttpParams) 
		org.apache.http.conn.ClientConnectionOperator operator
		org.apache.http.params.HttpParams params
	protected java.util.Queue <a class="d" name="createFreeConnQueue" href="/source/s?defs=createFreeConnQueue">createFreeConnQueue</a> () 
	protected java.util.Queue <a class="d" name="createWaitingThreadQueue" href="/source/s?defs=createWaitingThreadQueue">createWaitingThreadQueue</a> () 
	protected java.util.Map <a class="d" name="createRouteToPoolMap" href="/source/s?defs=createRouteToPoolMap">createRouteToPoolMap</a> () 
	protected org.apache.http.impl.conn.tsccm.RouteSpecificPool <a class="d" name="newRouteSpecificPool" href="/source/s?defs=newRouteSpecificPool">newRouteSpecificPool</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
	protected org.apache.http.impl.conn.tsccm.WaitingThread <a class="d" name="newWaitingThread" href="/source/s?defs=newWaitingThread">newWaitingThread</a> (java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool) 
		java.util.concurrent.locks.Condition cond
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
	private void <a class="d" name="closeConnection" href="/source/s?defs=closeConnection">closeConnection</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry) 
		java.io.IOException ex
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.conn.OperatedClientConnection conn
	protected org.apache.http.impl.conn.tsccm.RouteSpecificPool <a class="d" name="getRoutePool" href="/source/s?defs=getRoutePool">getRoutePool</a> (org.apache.http.conn.routing.HttpRoute, boolean) 
		org.apache.http.conn.routing.HttpRoute route
		boolean create
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
	public int <a class="d" name="getConnectionsInPool" href="/source/s?defs=getConnectionsInPool">getConnectionsInPool</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.conn.routing.HttpRoute route
	public int <a class="d" name="getConnectionsInPool" href="/source/s?defs=getConnectionsInPool">getConnectionsInPool</a> () 
	public org.apache.http.impl.conn.tsccm.PoolEntryRequest <a class="d" name="requestPoolEntry" href="/source/s?defs=requestPoolEntry">requestPoolEntry</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
		org.apache.http.conn.routing.HttpRoute route
		Object state
		org.apache.http.impl.conn.tsccm.WaitingThreadAborter aborter
	protected org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="getEntryBlocking" href="/source/s?defs=getEntryBlocking">getEntryBlocking</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.impl.conn.tsccm.WaitingThreadAborter)  throws <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> 
		boolean success
		boolean hasCapacity
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.impl.conn.tsccm.WaitingThread waitingThread
		org.apache.http.conn.routing.HttpRoute route
		Object state
		long timeout
		java.util.concurrent.TimeUnit tunit
		org.apache.http.impl.conn.tsccm.WaitingThreadAborter aborter
		java.util.Date deadline
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	public void <a class="d" name="freeEntry" href="/source/s?defs=freeEntry">freeEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit) 
		String s
		String s
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		boolean reusable
		long validDuration
		java.util.concurrent.TimeUnit timeUnit
		org.apache.http.conn.routing.HttpRoute route
	protected org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="getFreeEntry" href="/source/s?defs=getFreeEntry">getFreeEntry</a> (org.apache.http.impl.conn.tsccm.RouteSpecificPool, java.lang.Object) 
		boolean done
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		Object state
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	protected org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="createEntry" href="/source/s?defs=createEntry">createEntry</a> (org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator) 
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.conn.ClientConnectionOperator op
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	protected void <a class="d" name="deleteEntry" href="/source/s?defs=deleteEntry">deleteEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry) 
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.conn.routing.HttpRoute route
	protected void <a class="d" name="deleteLeastUsedEntry" href="/source/s?defs=deleteLeastUsedEntry">deleteLeastUsedEntry</a> () 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	protected void <a class="d" name="handleLostEntry" href="/source/s?defs=handleLostEntry">handleLostEntry</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.conn.routing.HttpRoute route
	protected void <a class="d" name="notifyWaitingThread" href="/source/s?defs=notifyWaitingThread">notifyWaitingThread</a> (org.apache.http.impl.conn.tsccm.RouteSpecificPool) 
		org.apache.http.impl.conn.tsccm.RouteSpecificPool rospl
		org.apache.http.impl.conn.tsccm.WaitingThread waitingThread
	public void <a class="d" name="deleteClosedConnections" href="/source/s?defs=deleteClosedConnections">deleteClosedConnections</a> () 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.util.Iterator iter
	public void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long, java.util.concurrent.TimeUnit) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.util.Iterator iter
		long idletime
		java.util.concurrent.TimeUnit tunit
		long deadline
	public void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.util.Iterator iter
		long now
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.impl.conn.tsccm.WaitingThread waiter
		java.util.Iterator iter1
		java.util.Iterator iter2
		java.util.Iterator iwth
	public void <a class="d" name="setMaxTotalConnections" href="/source/s?defs=setMaxTotalConnections">setMaxTotalConnections</a> (int) 
		int max
	public int <a class="d" name="getMaxTotalConnections" href="/source/s?defs=getMaxTotalConnections">getMaxTotalConnections</a> () 
	static synthetic java.util.concurrent.locks.Lock <a class="d" name="access$000" href="/source/s?defs=access$000">access$000</a> (org.apache.http.impl.conn.tsccm.ConnPoolByRoute) 
		org.apache.http.impl.conn.tsccm.ConnPoolByRoute x0
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager$1.class</b><pre><a href="/source/s?path=ThreadSafeClientConnManager.java">ThreadSafeClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
 <a class="d" name="org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1" href="/source/s?defs=org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1">org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ClientConnectionRequest">org.apache.http.conn.ClientConnectionRequest</a>  {
	final synthetic org.apache.http.impl.conn.tsccm.PoolEntryRequest <a class="d" name="val$poolRequest" href="/source/s?defs=val$poolRequest">val$poolRequest</a>
	final synthetic org.apache.http.conn.routing.HttpRoute <a class="d" name="val$route" href="/source/s?defs=val$route">val$route</a>
	final synthetic org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager, org.apache.http.impl.conn.tsccm.PoolEntryRequest, org.apache.http.conn.routing.HttpRoute)  throws <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> 
	public void <a class="d" name="abortRequest" href="/source/s?defs=abortRequest">abortRequest</a> () 
	public org.apache.http.conn.ManagedClientConnection <a class="d" name="getConnection" href="/source/s?defs=getConnection">getConnection</a> (long, java.util.concurrent.TimeUnit)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> 
		long timeout
		java.util.concurrent.TimeUnit tunit
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/BasicPoolEntryRef.class</b><pre><a href="/source/s?path=BasicPoolEntryRef.java">BasicPoolEntryRef.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.BasicPoolEntryRef" href="/source/s?defs=org.apache.http.impl.conn.tsccm.BasicPoolEntryRef">org.apache.http.impl.conn.tsccm.BasicPoolEntryRef</a> extends <a href="/source/s?defs=java.lang.ref.WeakReference">java.lang.ref.WeakReference</a> {
	private final org.apache.http.conn.routing.HttpRoute <a class="d" name="route" href="/source/s?defs=route">route</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry, java.lang.ref.ReferenceQueue) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.lang.ref.ReferenceQueue queue
	public final org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/RouteSpecificPool$1.class</b><pre><a href="/source/s?path=RouteSpecificPool.java">RouteSpecificPool.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
 <a class="d" name="org.apache.http.impl.conn.tsccm.RouteSpecificPool$1" href="/source/s?defs=org.apache.http.impl.conn.tsccm.RouteSpecificPool$1">org.apache.http.impl.conn.tsccm.RouteSpecificPool$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.params.ConnPerRoute">org.apache.http.conn.params.ConnPerRoute</a>  {
	final synthetic org.apache.http.impl.conn.tsccm.RouteSpecificPool <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.tsccm.RouteSpecificPool) 
	public int <a class="d" name="getMaxForRoute" href="/source/s?defs=getMaxForRoute">getMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/RefQueueWorker.class</b><pre><a href="/source/s?path=RefQueueWorker.java">RefQueueWorker.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.RefQueueWorker" href="/source/s?defs=org.apache.http.impl.conn.tsccm.RefQueueWorker">org.apache.http.impl.conn.tsccm.RefQueueWorker</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.Runnable">java.lang.Runnable</a>  {
	protected final java.lang.ref.ReferenceQueue <a class="d" name="refQueue" href="/source/s?defs=refQueue">refQueue</a>
	protected final org.apache.http.impl.conn.tsccm.RefQueueHandler <a class="d" name="refHandler" href="/source/s?defs=refHandler">refHandler</a>
	protected volatile Thread <a class="d" name="workerThread" href="/source/s?defs=workerThread">workerThread</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.ref.ReferenceQueue, org.apache.http.impl.conn.tsccm.RefQueueHandler) 
		java.lang.ref.ReferenceQueue queue
		org.apache.http.impl.conn.tsccm.RefQueueHandler handler
	public void <a class="d" name="run" href="/source/s?defs=run">run</a> () 
		java.lang.ref.Reference ref
		InterruptedException ignore
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
		Thread wt
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/RefQueueHandler.class</b><pre><a href="/source/s?path=RefQueueHandler.java">RefQueueHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public abstract <a class="d" name="org.apache.http.impl.conn.tsccm.RefQueueHandler" href="/source/s?defs=org.apache.http.impl.conn.tsccm.RefQueueHandler">org.apache.http.impl.conn.tsccm.RefQueueHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="handleReference" href="/source/s?defs=handleReference">handleReference</a> (java.lang.ref.Reference) 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/BasicPooledConnAdapter.class</b><pre><a href="/source/s?path=BasicPooledConnAdapter.java">BasicPooledConnAdapter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter" href="/source/s?defs=org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter">org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.AbstractPooledConnAdapter">org.apache.http.impl.conn.AbstractPooledConnAdapter</a> {
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager, org.apache.http.impl.conn.AbstractPoolEntry) 
		org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager tsccm
		org.apache.http.impl.conn.AbstractPoolEntry entry
	protected org.apache.http.conn.ClientConnectionManager <a class="d" name="getManager" href="/source/s?defs=getManager">getManager</a> () 
	protected org.apache.http.impl.conn.AbstractPoolEntry <a class="d" name="getPoolEntry" href="/source/s?defs=getPoolEntry">getPoolEntry</a> () 
	protected void <a class="d" name="detach" href="/source/s?defs=detach">detach</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/BasicPoolEntry.class</b><pre><a href="/source/s?path=BasicPoolEntry.java">BasicPoolEntry.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.BasicPoolEntry" href="/source/s?defs=org.apache.http.impl.conn.tsccm.BasicPoolEntry">org.apache.http.impl.conn.tsccm.BasicPoolEntry</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.AbstractPoolEntry">org.apache.http.impl.conn.AbstractPoolEntry</a> {
	private final long <a class="d" name="created" href="/source/s?defs=created">created</a>
	private long <a class="d" name="updated" href="/source/s?defs=updated">updated</a>
	private long <a class="d" name="validUntil" href="/source/s?defs=validUntil">validUntil</a>
	private long <a class="d" name="expiry" href="/source/s?defs=expiry">expiry</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.routing.HttpRoute, java.lang.ref.ReferenceQueue) 
		org.apache.http.conn.ClientConnectionOperator op
		org.apache.http.conn.routing.HttpRoute route
		java.lang.ref.ReferenceQueue queue
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.ClientConnectionOperator op
		org.apache.http.conn.routing.HttpRoute route
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit) 
		org.apache.http.conn.ClientConnectionOperator op
		org.apache.http.conn.routing.HttpRoute route
		long connTTL
		java.util.concurrent.TimeUnit timeunit
	protected final org.apache.http.conn.OperatedClientConnection <a class="d" name="getConnection" href="/source/s?defs=getConnection">getConnection</a> () 
	protected final org.apache.http.conn.routing.HttpRoute <a class="d" name="getPlannedRoute" href="/source/s?defs=getPlannedRoute">getPlannedRoute</a> () 
	protected final org.apache.http.impl.conn.tsccm.BasicPoolEntryRef <a class="d" name="getWeakRef" href="/source/s?defs=getWeakRef">getWeakRef</a> () 
	protected void <a class="d" name="shutdownEntry" href="/source/s?defs=shutdownEntry">shutdownEntry</a> () 
	public long <a class="d" name="getCreated" href="/source/s?defs=getCreated">getCreated</a> () 
	public long <a class="d" name="getUpdated" href="/source/s?defs=getUpdated">getUpdated</a> () 
	public long <a class="d" name="getExpiry" href="/source/s?defs=getExpiry">getExpiry</a> () 
	public long <a class="d" name="getValidUntil" href="/source/s?defs=getValidUntil">getValidUntil</a> () 
	public void <a class="d" name="updateExpiry" href="/source/s?defs=updateExpiry">updateExpiry</a> (long, java.util.concurrent.TimeUnit) 
		long newExpiry
		long time
		java.util.concurrent.TimeUnit timeunit
		long newExpiry
	public boolean <a class="d" name="isExpired" href="/source/s?defs=isExpired">isExpired</a> (long) 
		long now
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/WaitingThread.class</b><pre><a href="/source/s?path=WaitingThread.java">WaitingThread.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.WaitingThread" href="/source/s?defs=org.apache.http.impl.conn.tsccm.WaitingThread">org.apache.http.impl.conn.tsccm.WaitingThread</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.concurrent.locks.Condition <a class="d" name="cond" href="/source/s?defs=cond">cond</a>
	private final org.apache.http.impl.conn.tsccm.RouteSpecificPool <a class="d" name="pool" href="/source/s?defs=pool">pool</a>
	private Thread <a class="d" name="waiter" href="/source/s?defs=waiter">waiter</a>
	private boolean <a class="d" name="aborted" href="/source/s?defs=aborted">aborted</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool) 
		java.util.concurrent.locks.Condition cond
		org.apache.http.impl.conn.tsccm.RouteSpecificPool pool
	public final java.util.concurrent.locks.Condition <a class="d" name="getCondition" href="/source/s?defs=getCondition">getCondition</a> () 
	public final org.apache.http.impl.conn.tsccm.RouteSpecificPool <a class="d" name="getPool" href="/source/s?defs=getPool">getPool</a> () 
	public final java.lang.Thread <a class="d" name="getThread" href="/source/s?defs=getThread">getThread</a> () 
	public boolean <a class="d" name="await" href="/source/s?defs=await">await</a> (java.util.Date)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> 
		java.util.Date deadline
		boolean success
	public void <a class="d" name="wakeup" href="/source/s?defs=wakeup">wakeup</a> () 
	public void <a class="d" name="interrupt" href="/source/s?defs=interrupt">interrupt</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager.class</b><pre><a href="/source/s?path=ThreadSafeClientConnManager.java">ThreadSafeClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager" href="/source/s?defs=org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager">org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ClientConnectionManager">org.apache.http.conn.ClientConnectionManager</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	protected final org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="schemeRegistry" href="/source/s?defs=schemeRegistry">schemeRegistry</a>
	protected final org.apache.http.impl.conn.tsccm.AbstractConnPool <a class="d" name="connectionPool" href="/source/s?defs=connectionPool">connectionPool</a>
	protected final org.apache.http.impl.conn.tsccm.ConnPoolByRoute <a class="d" name="pool" href="/source/s?defs=pool">pool</a>
	protected final org.apache.http.conn.ClientConnectionOperator <a class="d" name="connOperator" href="/source/s?defs=connOperator">connOperator</a>
	protected final org.apache.http.conn.params.ConnPerRouteBean <a class="d" name="connPerRoute" href="/source/s?defs=connPerRoute">connPerRoute</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry, long, java.util.concurrent.TimeUnit) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
		long connTTL
		java.util.concurrent.TimeUnit connTTLTimeUnit
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.scheme.SchemeRegistry schreg
	protected void <a class="d" name="finalize" href="/source/s?defs=finalize">finalize</a> ()  throws <a href="/source/s?defs=java.lang.Throwable">java.lang.Throwable</a> 
	protected org.apache.http.impl.conn.tsccm.AbstractConnPool <a class="d" name="createConnectionPool" href="/source/s?defs=createConnectionPool">createConnectionPool</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	protected org.apache.http.impl.conn.tsccm.ConnPoolByRoute <a class="d" name="createConnectionPool" href="/source/s?defs=createConnectionPool">createConnectionPool</a> (long, java.util.concurrent.TimeUnit) 
		long connTTL
		java.util.concurrent.TimeUnit connTTLTimeUnit
	protected org.apache.http.conn.ClientConnectionOperator <a class="d" name="createConnectionOperator" href="/source/s?defs=createConnectionOperator">createConnectionOperator</a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
	public org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="getSchemeRegistry" href="/source/s?defs=getSchemeRegistry">getSchemeRegistry</a> () 
	public org.apache.http.conn.ClientConnectionRequest <a class="d" name="requestConnection" href="/source/s?defs=requestConnection">requestConnection</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
		org.apache.http.conn.routing.HttpRoute route
		Object state
		org.apache.http.impl.conn.tsccm.PoolEntryRequest poolRequest
	public void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> (org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit) 
		boolean reusable
		java.io.IOException iox
		boolean reusable
		boolean reusable
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.conn.ManagedClientConnection conn
		long validDuration
		java.util.concurrent.TimeUnit timeUnit
		org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter hca
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
	public int <a class="d" name="getConnectionsInPool" href="/source/s?defs=getConnectionsInPool">getConnectionsInPool</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
	public int <a class="d" name="getConnectionsInPool" href="/source/s?defs=getConnectionsInPool">getConnectionsInPool</a> () 
	public void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long, java.util.concurrent.TimeUnit) 
		long idleTimeout
		java.util.concurrent.TimeUnit tunit
	public void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
	public int <a class="d" name="getMaxTotal" href="/source/s?defs=getMaxTotal">getMaxTotal</a> () 
	public void <a class="d" name="setMaxTotal" href="/source/s?defs=setMaxTotal">setMaxTotal</a> (int) 
		int max
	public int <a class="d" name="getDefaultMaxPerRoute" href="/source/s?defs=getDefaultMaxPerRoute">getDefaultMaxPerRoute</a> () 
	public void <a class="d" name="setDefaultMaxPerRoute" href="/source/s?defs=setDefaultMaxPerRoute">setDefaultMaxPerRoute</a> (int) 
		int max
	public int <a class="d" name="getMaxForRoute" href="/source/s?defs=getMaxForRoute">getMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
	public void <a class="d" name="setMaxForRoute" href="/source/s?defs=setMaxForRoute">setMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute, int) 
		org.apache.http.conn.routing.HttpRoute route
		int max
	static synthetic org.apache.commons.logging.Log <a class="d" name="access$000" href="/source/s?defs=access$000">access$000</a> (org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) 
		org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager x0
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/PoolEntryRequest.class</b><pre><a href="/source/s?path=PoolEntryRequest.java">PoolEntryRequest.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public abstract <a class="d" name="org.apache.http.impl.conn.tsccm.PoolEntryRequest" href="/source/s?defs=org.apache.http.impl.conn.tsccm.PoolEntryRequest">org.apache.http.impl.conn.tsccm.PoolEntryRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="getPoolEntry" href="/source/s?defs=getPoolEntry">getPoolEntry</a> (long, java.util.concurrent.TimeUnit)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> 
	public abstract void <a class="d" name="abortRequest" href="/source/s?defs=abortRequest">abortRequest</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/RouteSpecificPool.class</b><pre><a href="/source/s?path=RouteSpecificPool.java">RouteSpecificPool.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.RouteSpecificPool" href="/source/s?defs=org.apache.http.impl.conn.tsccm.RouteSpecificPool">org.apache.http.impl.conn.tsccm.RouteSpecificPool</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	protected final org.apache.http.conn.routing.HttpRoute <a class="d" name="route" href="/source/s?defs=route">route</a>
	protected final int <a class="d" name="maxEntries" href="/source/s?defs=maxEntries">maxEntries</a>
	protected final org.apache.http.conn.params.ConnPerRoute <a class="d" name="connPerRoute" href="/source/s?defs=connPerRoute">connPerRoute</a>
	protected final java.util.LinkedList <a class="d" name="freeEntries" href="/source/s?defs=freeEntries">freeEntries</a>
	protected final java.util.Queue <a class="d" name="waitingThreads" href="/source/s?defs=waitingThreads">waitingThreads</a>
	protected int <a class="d" name="numEntries" href="/source/s?defs=numEntries">numEntries</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.routing.HttpRoute, int) 
		org.apache.http.conn.routing.HttpRoute route
		int maxEntries
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.conn.params.ConnPerRoute) 
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.conn.params.ConnPerRoute connPerRoute
	public final org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
	public final int <a class="d" name="getMaxEntries" href="/source/s?defs=getMaxEntries">getMaxEntries</a> () 
	public boolean <a class="d" name="isUnused" href="/source/s?defs=isUnused">isUnused</a> () 
	public int <a class="d" name="getCapacity" href="/source/s?defs=getCapacity">getCapacity</a> () 
	public final int <a class="d" name="getEntryCount" href="/source/s?defs=getEntryCount">getEntryCount</a> () 
	public org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="allocEntry" href="/source/s?defs=allocEntry">allocEntry</a> (java.lang.Object) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.util.ListIterator it
		java.io.IOException ex
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		org.apache.http.conn.OperatedClientConnection conn
		Object state
	public void <a class="d" name="freeEntry" href="/source/s?defs=freeEntry">freeEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	public void <a class="d" name="createdEntry" href="/source/s?defs=createdEntry">createdEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
	public boolean <a class="d" name="deleteEntry" href="/source/s?defs=deleteEntry">deleteEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry) 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		boolean found
	public void <a class="d" name="dropEntry" href="/source/s?defs=dropEntry">dropEntry</a> () 
	public void <a class="d" name="queueThread" href="/source/s?defs=queueThread">queueThread</a> (org.apache.http.impl.conn.tsccm.WaitingThread) 
		org.apache.http.impl.conn.tsccm.WaitingThread wt
	public boolean <a class="d" name="hasThread" href="/source/s?defs=hasThread">hasThread</a> () 
	public org.apache.http.impl.conn.tsccm.WaitingThread <a class="d" name="nextThread" href="/source/s?defs=nextThread">nextThread</a> () 
	public void <a class="d" name="removeThread" href="/source/s?defs=removeThread">removeThread</a> (org.apache.http.impl.conn.tsccm.WaitingThread) 
		org.apache.http.impl.conn.tsccm.WaitingThread wt
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/WaitingThreadAborter.class</b><pre><a href="/source/s?path=WaitingThreadAborter.java">WaitingThreadAborter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public <a class="d" name="org.apache.http.impl.conn.tsccm.WaitingThreadAborter" href="/source/s?defs=org.apache.http.impl.conn.tsccm.WaitingThreadAborter">org.apache.http.impl.conn.tsccm.WaitingThreadAborter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private org.apache.http.impl.conn.tsccm.WaitingThread <a class="d" name="waitingThread" href="/source/s?defs=waitingThread">waitingThread</a>
	private boolean <a class="d" name="aborted" href="/source/s?defs=aborted">aborted</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="abort" href="/source/s?defs=abort">abort</a> () 
	public void <a class="d" name="setWaitingThread" href="/source/s?defs=setWaitingThread">setWaitingThread</a> (org.apache.http.impl.conn.tsccm.WaitingThread) 
		org.apache.http.impl.conn.tsccm.WaitingThread waitingThread
}
</pre><br/><b>org/apache/http/impl/conn/tsccm/AbstractConnPool.class</b><pre><a href="/source/s?path=AbstractConnPool.java">AbstractConnPool.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn.tsccm">org.apache.http.impl.conn.tsccm</a>
public abstract <a class="d" name="org.apache.http.impl.conn.tsccm.AbstractConnPool" href="/source/s?defs=org.apache.http.impl.conn.tsccm.AbstractConnPool">org.apache.http.impl.conn.tsccm.AbstractConnPool</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.impl.conn.tsccm.RefQueueHandler">org.apache.http.impl.conn.tsccm.RefQueueHandler</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	protected final java.util.concurrent.locks.Lock <a class="d" name="poolLock" href="/source/s?defs=poolLock">poolLock</a>
	protected java.util.Set <a class="d" name="leasedConnections" href="/source/s?defs=leasedConnections">leasedConnections</a>
	protected int <a class="d" name="numConnections" href="/source/s?defs=numConnections">numConnections</a>
	protected volatile boolean <a class="d" name="isShutDown" href="/source/s?defs=isShutDown">isShutDown</a>
	protected java.util.Set <a class="d" name="issuedConnections" href="/source/s?defs=issuedConnections">issuedConnections</a>
	protected java.lang.ref.ReferenceQueue <a class="d" name="refQueue" href="/source/s?defs=refQueue">refQueue</a>
	protected org.apache.http.impl.conn.IdleConnectionHandler <a class="d" name="idleConnHandler" href="/source/s?defs=idleConnHandler">idleConnHandler</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="enableConnectionGC" href="/source/s?defs=enableConnectionGC">enableConnectionGC</a> ()  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public final org.apache.http.impl.conn.tsccm.BasicPoolEntry <a class="d" name="getEntry" href="/source/s?defs=getEntry">getEntry</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit)  throws <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> 
		org.apache.http.conn.routing.HttpRoute route
		Object state
		long timeout
		java.util.concurrent.TimeUnit tunit
	public abstract org.apache.http.impl.conn.tsccm.PoolEntryRequest <a class="d" name="requestPoolEntry" href="/source/s?defs=requestPoolEntry">requestPoolEntry</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
	public abstract void <a class="d" name="freeEntry" href="/source/s?defs=freeEntry">freeEntry</a> (org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit) 
	public void <a class="d" name="handleReference" href="/source/s?defs=handleReference">handleReference</a> (java.lang.ref.Reference) 
		java.lang.ref.Reference ref
	protected abstract void <a class="d" name="handleLostEntry" href="/source/s?defs=handleLostEntry">handleLostEntry</a> (org.apache.http.conn.routing.HttpRoute) 
	public void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long, java.util.concurrent.TimeUnit) 
		long idletime
		java.util.concurrent.TimeUnit tunit
	public void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
	public abstract void <a class="d" name="deleteClosedConnections" href="/source/s?defs=deleteClosedConnections">deleteClosedConnections</a> () 
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
		org.apache.http.impl.conn.tsccm.BasicPoolEntry entry
		java.util.Iterator iter
	protected void <a class="d" name="closeConnection" href="/source/s?defs=closeConnection">closeConnection</a> (org.apache.http.conn.OperatedClientConnection) 
		java.io.IOException ex
		org.apache.http.conn.OperatedClientConnection conn
}
</pre><br/><b>org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.class</b><pre><a href="/source/s?path=SingleClientConnManager.java">SingleClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.SingleClientConnManager$PoolEntry" href="/source/s?defs=org.apache.http.impl.conn.SingleClientConnManager$PoolEntry">org.apache.http.impl.conn.SingleClientConnManager$PoolEntry</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.AbstractPoolEntry">org.apache.http.impl.conn.AbstractPoolEntry</a> {
	final synthetic org.apache.http.impl.conn.SingleClientConnManager <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.SingleClientConnManager) 
	protected void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	protected void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/impl/conn/IdleConnectionHandler.class</b><pre><a href="/source/s?path=IdleConnectionHandler.java">IdleConnectionHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.IdleConnectionHandler" href="/source/s?defs=org.apache.http.impl.conn.IdleConnectionHandler">org.apache.http.impl.conn.IdleConnectionHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private final java.util.Map <a class="d" name="connectionToTimes" href="/source/s?defs=connectionToTimes">connectionToTimes</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="add" href="/source/s?defs=add">add</a> (org.apache.http.HttpConnection, long, java.util.concurrent.TimeUnit) 
		org.apache.http.HttpConnection connection
		long validDuration
		java.util.concurrent.TimeUnit unit
		long timeAdded
	public boolean <a class="d" name="remove" href="/source/s?defs=remove">remove</a> (org.apache.http.HttpConnection) 
		org.apache.http.HttpConnection connection
		org.apache.http.impl.conn.IdleConnectionHandler$TimeValues times
	public void <a class="d" name="removeAll" href="/source/s?defs=removeAll">removeAll</a> () 
	public void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long) 
		java.io.IOException ex
		org.apache.http.HttpConnection conn
		org.apache.http.impl.conn.IdleConnectionHandler$TimeValues times
		long connectionTime
		java.util.Map$Entry entry
		java.util.Iterator i$
		long idleTime
		long idleTimeout
	public void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
		java.io.IOException ex
		org.apache.http.HttpConnection conn
		org.apache.http.impl.conn.IdleConnectionHandler$TimeValues times
		java.util.Map$Entry entry
		java.util.Iterator i$
		long now
}
</pre><br/><b>org/apache/http/impl/conn/DefaultClientConnection.class</b><pre><a href="/source/s?path=DefaultClientConnection.java">DefaultClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.DefaultClientConnection" href="/source/s?defs=org.apache.http.impl.conn.DefaultClientConnection">org.apache.http.impl.conn.DefaultClientConnection</a> extends <a href="/source/s?defs=org.apache.http.impl.SocketHttpClientConnection">org.apache.http.impl.SocketHttpClientConnection</a> implements <a href="/source/s?defs=org.apache.http.conn.OperatedClientConnection">org.apache.http.conn.OperatedClientConnection</a> <a href="/source/s?defs=org.apache.http.protocol.HttpContext">org.apache.http.protocol.HttpContext</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private final org.apache.commons.logging.Log <a class="d" name="headerLog" href="/source/s?defs=headerLog">headerLog</a>
	private final org.apache.commons.logging.Log <a class="d" name="wireLog" href="/source/s?defs=wireLog">wireLog</a>
	private volatile java.net.Socket <a class="d" name="socket" href="/source/s?defs=socket">socket</a>
	private org.apache.http.HttpHost <a class="d" name="targetHost" href="/source/s?defs=targetHost">targetHost</a>
	private boolean <a class="d" name="connSecure" href="/source/s?defs=connSecure">connSecure</a>
	private volatile boolean <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a>
	private final java.util.Map <a class="d" name="attributes" href="/source/s?defs=attributes">attributes</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final org.apache.http.HttpHost <a class="d" name="getTargetHost" href="/source/s?defs=getTargetHost">getTargetHost</a> () 
	public final boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public final java.net.Socket <a class="d" name="getSocket" href="/source/s?defs=getSocket">getSocket</a> () 
	public void <a class="d" name="opening" href="/source/s?defs=opening">opening</a> (java.net.Socket, org.apache.http.HttpHost)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket sock
		org.apache.http.HttpHost target
	public void <a class="d" name="openCompleted" href="/source/s?defs=openCompleted">openCompleted</a> (boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean secure
		org.apache.http.params.HttpParams params
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket sock
		java.io.IOException ex
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ex
	protected org.apache.http.io.SessionInputBuffer <a class="d" name="createSessionInputBuffer" href="/source/s?defs=createSessionInputBuffer">createSessionInputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
		org.apache.http.io.SessionInputBuffer inbuffer
	protected org.apache.http.io.SessionOutputBuffer <a class="d" name="createSessionOutputBuffer" href="/source/s?defs=createSessionOutputBuffer">createSessionOutputBuffer</a> (java.net.Socket, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket socket
		int buffersize
		org.apache.http.params.HttpParams params
		org.apache.http.io.SessionOutputBuffer outbuffer
	protected org.apache.http.io.HttpMessageParser <a class="d" name="createResponseParser" href="/source/s?defs=createResponseParser">createResponseParser</a> (org.apache.http.io.SessionInputBuffer, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.params.HttpParams params
	public void <a class="d" name="update" href="/source/s?defs=update">update</a> (java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket sock
		org.apache.http.HttpHost target
		boolean secure
		org.apache.http.params.HttpParams params
	public org.apache.http.HttpResponse <a class="d" name="receiveResponseHeader" href="/source/s?defs=receiveResponseHeader">receiveResponseHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.Header header
		org.apache.http.Header[] arr$
		int len$
		int i$
		org.apache.http.Header[] headers
		org.apache.http.HttpResponse response
	public void <a class="d" name="sendRequestHeader" href="/source/s?defs=sendRequestHeader">sendRequestHeader</a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.Header header
		org.apache.http.Header[] arr$
		int len$
		int i$
		org.apache.http.Header[] headers
		org.apache.http.HttpRequest request
	public java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String id
	public java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
		String id
	public void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
		String id
		Object obj
}
</pre><br/><b>org/apache/http/impl/conn/SingleClientConnManager$1.class</b><pre><a href="/source/s?path=SingleClientConnManager.java">SingleClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
 <a class="d" name="org.apache.http.impl.conn.SingleClientConnManager$1" href="/source/s?defs=org.apache.http.impl.conn.SingleClientConnManager$1">org.apache.http.impl.conn.SingleClientConnManager$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ClientConnectionRequest">org.apache.http.conn.ClientConnectionRequest</a>  {
	final synthetic org.apache.http.conn.routing.HttpRoute <a class="d" name="val$route" href="/source/s?defs=val$route">val$route</a>
	final synthetic Object <a class="d" name="val$state" href="/source/s?defs=val$state">val$state</a>
	final synthetic org.apache.http.impl.conn.SingleClientConnManager <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.SingleClientConnManager, org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
	public void <a class="d" name="abortRequest" href="/source/s?defs=abortRequest">abortRequest</a> () 
	public org.apache.http.conn.ManagedClientConnection <a class="d" name="getConnection" href="/source/s?defs=getConnection">getConnection</a> (long, java.util.concurrent.TimeUnit) 
		long timeout
		java.util.concurrent.TimeUnit tunit
}
</pre><br/><b>org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.class</b><pre><a href="/source/s?path=SingleClientConnManager.java">SingleClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter" href="/source/s?defs=org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter">org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.AbstractPooledConnAdapter">org.apache.http.impl.conn.AbstractPooledConnAdapter</a> {
	final synthetic org.apache.http.impl.conn.SingleClientConnManager <a class="d" name="this$0" href="/source/s?defs=this$0">this$0</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.conn.SingleClientConnManager, org.apache.http.impl.conn.SingleClientConnManager$PoolEntry, org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.impl.conn.SingleClientConnManager$PoolEntry entry
		org.apache.http.conn.routing.HttpRoute route
}
</pre><br/><b>org/apache/http/impl/conn/AbstractPooledConnAdapter.class</b><pre><a href="/source/s?path=AbstractPooledConnAdapter.java">AbstractPooledConnAdapter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public abstract <a class="d" name="org.apache.http.impl.conn.AbstractPooledConnAdapter" href="/source/s?defs=org.apache.http.impl.conn.AbstractPooledConnAdapter">org.apache.http.impl.conn.AbstractPooledConnAdapter</a> extends <a href="/source/s?defs=org.apache.http.impl.conn.AbstractClientConnAdapter">org.apache.http.impl.conn.AbstractClientConnAdapter</a> {
	protected volatile org.apache.http.impl.conn.AbstractPoolEntry <a class="d" name="poolEntry" href="/source/s?defs=poolEntry">poolEntry</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager, org.apache.http.impl.conn.AbstractPoolEntry) 
		org.apache.http.conn.ClientConnectionManager manager
		org.apache.http.impl.conn.AbstractPoolEntry entry
	protected org.apache.http.impl.conn.AbstractPoolEntry <a class="d" name="getPoolEntry" href="/source/s?defs=getPoolEntry">getPoolEntry</a> () 
	protected void <a class="d" name="assertValid" href="/source/s?defs=assertValid">assertValid</a> (org.apache.http.impl.conn.AbstractPoolEntry) 
		org.apache.http.impl.conn.AbstractPoolEntry entry
	protected final void <a class="d" name="assertAttached" href="/source/s?defs=assertAttached">assertAttached</a> () 
	protected synchronized void <a class="d" name="detach" href="/source/s?defs=detach">detach</a> () 
	public org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="open" href="/source/s?defs=open">open</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="tunnelTarget" href="/source/s?defs=tunnelTarget">tunnelTarget</a> (boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean secure
		org.apache.http.params.HttpParams params
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="tunnelProxy" href="/source/s?defs=tunnelProxy">tunnelProxy</a> (org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpHost next
		boolean secure
		org.apache.http.params.HttpParams params
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="layerProtocol" href="/source/s?defs=layerProtocol">layerProtocol</a> (org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.impl.conn.AbstractPoolEntry entry
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.impl.conn.AbstractPoolEntry entry
		org.apache.http.conn.OperatedClientConnection conn
	public java.lang.Object <a class="d" name="getState" href="/source/s?defs=getState">getState</a> () 
		org.apache.http.impl.conn.AbstractPoolEntry entry
	public void <a class="d" name="setState" href="/source/s?defs=setState">setState</a> (java.lang.Object) 
		Object state
		org.apache.http.impl.conn.AbstractPoolEntry entry
}
</pre><br/><b>org/apache/http/impl/conn/SchemeRegistryFactory.class</b><pre><a href="/source/s?path=SchemeRegistryFactory.java">SchemeRegistryFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public final <a class="d" name="org.apache.http.impl.conn.SchemeRegistryFactory" href="/source/s?defs=org.apache.http.impl.conn.SchemeRegistryFactory">org.apache.http.impl.conn.SchemeRegistryFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="createDefault" href="/source/s?defs=createDefault">createDefault</a> () 
		org.apache.http.conn.scheme.SchemeRegistry registry
}
</pre><br/><b>org/apache/http/impl/conn/SingleClientConnManager.class</b><pre><a href="/source/s?path=SingleClientConnManager.java">SingleClientConnManager.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.SingleClientConnManager" href="/source/s?defs=org.apache.http.impl.conn.SingleClientConnManager">org.apache.http.impl.conn.SingleClientConnManager</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ClientConnectionManager">org.apache.http.conn.ClientConnectionManager</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public static final String <a class="d" name="MISUSE_MESSAGE" href="/source/s?defs=MISUSE_MESSAGE">MISUSE_MESSAGE</a>
	protected final org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="schemeRegistry" href="/source/s?defs=schemeRegistry">schemeRegistry</a>
	protected final org.apache.http.conn.ClientConnectionOperator <a class="d" name="connOperator" href="/source/s?defs=connOperator">connOperator</a>
	protected final boolean <a class="d" name="alwaysShutDown" href="/source/s?defs=alwaysShutDown">alwaysShutDown</a>
	protected org.apache.http.impl.conn.SingleClientConnManager$PoolEntry <a class="d" name="uniquePoolEntry" href="/source/s?defs=uniquePoolEntry">uniquePoolEntry</a>
	protected org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter <a class="d" name="managedConn" href="/source/s?defs=managedConn">managedConn</a>
	protected long <a class="d" name="lastReleaseTime" href="/source/s?defs=lastReleaseTime">lastReleaseTime</a>
	protected long <a class="d" name="connectionExpiresTime" href="/source/s?defs=connectionExpiresTime">connectionExpiresTime</a>
	protected volatile boolean <a class="d" name="isShutDown" href="/source/s?defs=isShutDown">isShutDown</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.scheme.SchemeRegistry schreg
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="finalize" href="/source/s?defs=finalize">finalize</a> ()  throws <a href="/source/s?defs=java.lang.Throwable">java.lang.Throwable</a> 
	public org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="getSchemeRegistry" href="/source/s?defs=getSchemeRegistry">getSchemeRegistry</a> () 
	protected org.apache.http.conn.ClientConnectionOperator <a class="d" name="createConnectionOperator" href="/source/s?defs=createConnectionOperator">createConnectionOperator</a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
	protected final void <a class="d" name="assertStillUp" href="/source/s?defs=assertStillUp">assertStillUp</a> ()  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
	public final org.apache.http.conn.ClientConnectionRequest <a class="d" name="requestConnection" href="/source/s?defs=requestConnection">requestConnection</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
		org.apache.http.conn.routing.HttpRoute route
		Object state
	public synchronized org.apache.http.conn.ManagedClientConnection <a class="d" name="getConnection" href="/source/s?defs=getConnection">getConnection</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
		org.apache.http.conn.routing.RouteTracker tracker
		java.io.IOException iox
		org.apache.http.conn.routing.HttpRoute route
		Object state
		boolean recreate
		boolean shutdown
	public synchronized void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> (org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit) 
		java.io.IOException iox
		org.apache.http.conn.ManagedClientConnection conn
		long validDuration
		java.util.concurrent.TimeUnit timeUnit
		org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter sca
		org.apache.http.conn.ClientConnectionManager manager
	public synchronized void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
	public synchronized void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long, java.util.concurrent.TimeUnit) 
		java.io.IOException iox
		long cutoff
		long idletime
		java.util.concurrent.TimeUnit tunit
	public synchronized void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
		java.io.IOException iox
	protected synchronized void <a class="d" name="revokeConnection" href="/source/s?defs=revokeConnection">revokeConnection</a> () 
		java.io.IOException iox
}
</pre><br/><b>org/apache/http/impl/conn/Wire.class</b><pre><a href="/source/s?path=Wire.java">Wire.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.Wire" href="/source/s?defs=org.apache.http.impl.conn.Wire">org.apache.http.impl.conn.Wire</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.commons.logging.Log) 
		org.apache.commons.logging.Log log
	private void <a class="d" name="wire" href="/source/s?defs=wire">wire</a> (java.lang.String, java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String header
		java.io.InputStream instream
		StringBuilder buffer
		int ch
	public boolean <a class="d" name="enabled" href="/source/s?defs=enabled">enabled</a> () 
	public void <a class="d" name="output" href="/source/s?defs=output">output</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream outstream
	public void <a class="d" name="input" href="/source/s?defs=input">input</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream instream
	public void <a class="d" name="output" href="/source/s?defs=output">output</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
	public void <a class="d" name="input" href="/source/s?defs=input">input</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
	public void <a class="d" name="output" href="/source/s?defs=output">output</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="input" href="/source/s?defs=input">input</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="output" href="/source/s?defs=output">output</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public void <a class="d" name="input" href="/source/s?defs=input">input</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public void <a class="d" name="output" href="/source/s?defs=output">output</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
	public void <a class="d" name="input" href="/source/s?defs=input">input</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
}
</pre><br/><b>org/apache/http/impl/conn/AbstractClientConnAdapter.class</b><pre><a href="/source/s?path=AbstractClientConnAdapter.java">AbstractClientConnAdapter.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public abstract <a class="d" name="org.apache.http.impl.conn.AbstractClientConnAdapter" href="/source/s?defs=org.apache.http.impl.conn.AbstractClientConnAdapter">org.apache.http.impl.conn.AbstractClientConnAdapter</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ManagedClientConnection">org.apache.http.conn.ManagedClientConnection</a> <a href="/source/s?defs=org.apache.http.protocol.HttpContext">org.apache.http.protocol.HttpContext</a>  {
	private volatile org.apache.http.conn.ClientConnectionManager <a class="d" name="connManager" href="/source/s?defs=connManager">connManager</a>
	private volatile org.apache.http.conn.OperatedClientConnection <a class="d" name="wrappedConnection" href="/source/s?defs=wrappedConnection">wrappedConnection</a>
	private volatile boolean <a class="d" name="markedReusable" href="/source/s?defs=markedReusable">markedReusable</a>
	private volatile boolean <a class="d" name="released" href="/source/s?defs=released">released</a>
	private volatile long <a class="d" name="duration" href="/source/s?defs=duration">duration</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionManager, org.apache.http.conn.OperatedClientConnection) 
		org.apache.http.conn.ClientConnectionManager mgr
		org.apache.http.conn.OperatedClientConnection conn
	protected synchronized void <a class="d" name="detach" href="/source/s?defs=detach">detach</a> () 
	protected org.apache.http.conn.OperatedClientConnection <a class="d" name="getWrappedConnection" href="/source/s?defs=getWrappedConnection">getWrappedConnection</a> () 
	protected org.apache.http.conn.ClientConnectionManager <a class="d" name="getManager" href="/source/s?defs=getManager">getManager</a> () 
	protected final void <a class="d" name="assertNotAborted" href="/source/s?defs=assertNotAborted">assertNotAborted</a> ()  throws <a href="/source/s?defs=java.io.InterruptedIOException">java.io.InterruptedIOException</a> 
	protected boolean <a class="d" name="isReleased" href="/source/s?defs=isReleased">isReleased</a> () 
	protected final void <a class="d" name="assertValid" href="/source/s?defs=assertValid">assertValid</a> (org.apache.http.conn.OperatedClientConnection)  throws <a href="/source/s?defs=org.apache.http.impl.conn.ConnectionShutdownException">org.apache.http.impl.conn.ConnectionShutdownException</a> 
		org.apache.http.conn.OperatedClientConnection wrappedConn
	public boolean <a class="d" name="isOpen" href="/source/s?defs=isOpen">isOpen</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public boolean <a class="d" name="isStale" href="/source/s?defs=isStale">isStale</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="setSocketTimeout" href="/source/s?defs=setSocketTimeout">setSocketTimeout</a> (int) 
		int timeout
		org.apache.http.conn.OperatedClientConnection conn
	public int <a class="d" name="getSocketTimeout" href="/source/s?defs=getSocketTimeout">getSocketTimeout</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public org.apache.http.HttpConnectionMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.OperatedClientConnection conn
	public boolean <a class="d" name="isResponseAvailable" href="/source/s?defs=isResponseAvailable">isResponseAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int timeout
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="receiveResponseEntity" href="/source/s?defs=receiveResponseEntity">receiveResponseEntity</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.conn.OperatedClientConnection conn
	public org.apache.http.HttpResponse <a class="d" name="receiveResponseHeader" href="/source/s?defs=receiveResponseHeader">receiveResponseHeader</a> ()  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="sendRequestEntity" href="/source/s?defs=sendRequestEntity">sendRequestEntity</a> (org.apache.http.HttpEntityEnclosingRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpEntityEnclosingRequest request
		org.apache.http.conn.OperatedClientConnection conn
	public void <a class="d" name="sendRequestHeader" href="/source/s?defs=sendRequestHeader">sendRequestHeader</a> (org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.conn.OperatedClientConnection conn
	public java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public int <a class="d" name="getLocalPort" href="/source/s?defs=getLocalPort">getLocalPort</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public java.net.InetAddress <a class="d" name="getRemoteAddress" href="/source/s?defs=getRemoteAddress">getRemoteAddress</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public int <a class="d" name="getRemotePort" href="/source/s?defs=getRemotePort">getRemotePort</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
		org.apache.http.conn.OperatedClientConnection conn
	public javax.net.ssl.SSLSession <a class="d" name="getSSLSession" href="/source/s?defs=getSSLSession">getSSLSession</a> () 
		org.apache.http.conn.OperatedClientConnection conn
		javax.net.ssl.SSLSession result
		java.net.Socket sock
	public void <a class="d" name="markReusable" href="/source/s?defs=markReusable">markReusable</a> () 
	public void <a class="d" name="unmarkReusable" href="/source/s?defs=unmarkReusable">unmarkReusable</a> () 
	public boolean <a class="d" name="isMarkedReusable" href="/source/s?defs=isMarkedReusable">isMarkedReusable</a> () 
	public void <a class="d" name="setIdleDuration" href="/source/s?defs=setIdleDuration">setIdleDuration</a> (long, java.util.concurrent.TimeUnit) 
		long duration
		java.util.concurrent.TimeUnit unit
	public synchronized void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> () 
	public synchronized void <a class="d" name="abortConnection" href="/source/s?defs=abortConnection">abortConnection</a> () 
		java.io.IOException ignore
	public synchronized java.lang.Object <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
		String id
		org.apache.http.conn.OperatedClientConnection conn
	public synchronized java.lang.Object <a class="d" name="removeAttribute" href="/source/s?defs=removeAttribute">removeAttribute</a> (java.lang.String) 
		String id
		org.apache.http.conn.OperatedClientConnection conn
	public synchronized void <a class="d" name="setAttribute" href="/source/s?defs=setAttribute">setAttribute</a> (java.lang.String, java.lang.Object) 
		String id
		Object obj
		org.apache.http.conn.OperatedClientConnection conn
}
</pre><br/><b>org/apache/http/impl/conn/IdleConnectionHandler$TimeValues.class</b><pre><a href="/source/s?path=IdleConnectionHandler.java">IdleConnectionHandler.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
 <a class="d" name="org.apache.http.impl.conn.IdleConnectionHandler$TimeValues" href="/source/s?defs=org.apache.http.impl.conn.IdleConnectionHandler$TimeValues">org.apache.http.impl.conn.IdleConnectionHandler$TimeValues</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final long <a class="d" name="timeAdded" href="/source/s?defs=timeAdded">timeAdded</a>
	private final long <a class="d" name="timeExpires" href="/source/s?defs=timeExpires">timeExpires</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (long, long, java.util.concurrent.TimeUnit) 
		long now
		long validDuration
		java.util.concurrent.TimeUnit validUnit
	static synthetic long <a class="d" name="access$000" href="/source/s?defs=access$000">access$000</a> (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) 
		org.apache.http.impl.conn.IdleConnectionHandler$TimeValues x0
	static synthetic long <a class="d" name="access$100" href="/source/s?defs=access$100">access$100</a> (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) 
		org.apache.http.impl.conn.IdleConnectionHandler$TimeValues x0
}
</pre><br/><b>org/apache/http/impl/conn/LoggingSessionOutputBuffer.class</b><pre><a href="/source/s?path=LoggingSessionOutputBuffer.java">LoggingSessionOutputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.LoggingSessionOutputBuffer" href="/source/s?defs=org.apache.http.impl.conn.LoggingSessionOutputBuffer">org.apache.http.impl.conn.LoggingSessionOutputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.SessionOutputBuffer">org.apache.http.io.SessionOutputBuffer</a>  {
	private final org.apache.http.io.SessionOutputBuffer <a class="d" name="out" href="/source/s?defs=out">out</a>
	private final org.apache.http.impl.conn.Wire <a class="d" name="wire" href="/source/s?defs=wire">wire</a>
	private final String <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.impl.conn.Wire, java.lang.String) 
		org.apache.http.io.SessionOutputBuffer out
		org.apache.http.impl.conn.Wire wire
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionOutputBuffer, org.apache.http.impl.conn.Wire) 
		org.apache.http.io.SessionOutputBuffer out
		org.apache.http.impl.conn.Wire wire
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int b
	public void <a class="d" name="write" href="/source/s?defs=write">write</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
	public void <a class="d" name="flush" href="/source/s?defs=flush">flush</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String s
		String tmp
		org.apache.http.util.CharArrayBuffer buffer
	public void <a class="d" name="writeLine" href="/source/s?defs=writeLine">writeLine</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String tmp
		String s
	public org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/DefaultResponseParser.class</b><pre><a href="/source/s?path=DefaultResponseParser.java">DefaultResponseParser.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.DefaultResponseParser" href="/source/s?defs=org.apache.http.impl.conn.DefaultResponseParser">org.apache.http.impl.conn.DefaultResponseParser</a> extends <a href="/source/s?defs=org.apache.http.impl.io.AbstractMessageParser">org.apache.http.impl.io.AbstractMessageParser</a> {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private final org.apache.http.HttpResponseFactory <a class="d" name="responseFactory" href="/source/s?defs=responseFactory">responseFactory</a>
	private final org.apache.http.util.CharArrayBuffer <a class="d" name="lineBuf" href="/source/s?defs=lineBuf">lineBuf</a>
	private final int <a class="d" name="maxGarbageLines" href="/source/s?defs=maxGarbageLines">maxGarbageLines</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpResponseFactory, org.apache.http.params.HttpParams) 
		org.apache.http.io.SessionInputBuffer buffer
		org.apache.http.message.LineParser parser
		org.apache.http.HttpResponseFactory responseFactory
		org.apache.http.params.HttpParams params
	protected org.apache.http.HttpMessage <a class="d" name="parseHead" href="/source/s?defs=parseHead">parseHead</a> (org.apache.http.io.SessionInputBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		int i
		org.apache.http.io.SessionInputBuffer sessionBuffer
		int count
		org.apache.http.message.ParserCursor cursor
		org.apache.http.StatusLine statusline
}
</pre><br/><b>org/apache/http/impl/conn/AbstractPoolEntry.class</b><pre><a href="/source/s?path=AbstractPoolEntry.java">AbstractPoolEntry.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public abstract <a class="d" name="org.apache.http.impl.conn.AbstractPoolEntry" href="/source/s?defs=org.apache.http.impl.conn.AbstractPoolEntry">org.apache.http.impl.conn.AbstractPoolEntry</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	protected final org.apache.http.conn.ClientConnectionOperator <a class="d" name="connOperator" href="/source/s?defs=connOperator">connOperator</a>
	protected final org.apache.http.conn.OperatedClientConnection <a class="d" name="connection" href="/source/s?defs=connection">connection</a>
	protected volatile org.apache.http.conn.routing.HttpRoute <a class="d" name="route" href="/source/s?defs=route">route</a>
	protected volatile Object <a class="d" name="state" href="/source/s?defs=state">state</a>
	protected volatile org.apache.http.conn.routing.RouteTracker <a class="d" name="tracker" href="/source/s?defs=tracker">tracker</a>
	protected void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.ClientConnectionOperator connOperator
		org.apache.http.conn.routing.HttpRoute route
	public java.lang.Object <a class="d" name="getState" href="/source/s?defs=getState">getState</a> () 
	public void <a class="d" name="setState" href="/source/s?defs=setState">setState</a> (java.lang.Object) 
		Object state
	public void <a class="d" name="open" href="/source/s?defs=open">open</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.HttpHost proxy
		org.apache.http.conn.routing.RouteTracker localTracker
	public void <a class="d" name="tunnelTarget" href="/source/s?defs=tunnelTarget">tunnelTarget</a> (boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean secure
		org.apache.http.params.HttpParams params
	public void <a class="d" name="tunnelProxy" href="/source/s?defs=tunnelProxy">tunnelProxy</a> (org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpHost next
		boolean secure
		org.apache.http.params.HttpParams params
	public void <a class="d" name="layerProtocol" href="/source/s?defs=layerProtocol">layerProtocol</a> (org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.HttpHost target
	protected void <a class="d" name="shutdownEntry" href="/source/s?defs=shutdownEntry">shutdownEntry</a> () 
}
</pre><br/><b>org/apache/http/impl/conn/ProxySelectorRoutePlanner$1.class</b><pre><a href="/source/s?path=ProxySelectorRoutePlanner.java">ProxySelectorRoutePlanner.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
 <a class="d" name="org.apache.http.impl.conn.ProxySelectorRoutePlanner$1" href="/source/s?defs=org.apache.http.impl.conn.ProxySelectorRoutePlanner$1">org.apache.http.impl.conn.ProxySelectorRoutePlanner$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	static final synthetic int[] <a class="d" name="$SwitchMap$java$net$Proxy$Type" href="/source/s?defs=$SwitchMap$java$net$Proxy$Type">$SwitchMap$java$net$Proxy$Type</a>
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
		NoSuchFieldError ex
		NoSuchFieldError ex
		NoSuchFieldError ex
}
</pre><br/><b>org/apache/http/impl/conn/ConnectionShutdownException.class</b><pre><a href="/source/s?path=ConnectionShutdownException.java">ConnectionShutdownException.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.ConnectionShutdownException" href="/source/s?defs=org.apache.http.impl.conn.ConnectionShutdownException">org.apache.http.impl.conn.ConnectionShutdownException</a> extends <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/impl/conn/DefaultHttpRoutePlanner.class</b><pre><a href="/source/s?path=DefaultHttpRoutePlanner.java">DefaultHttpRoutePlanner.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.DefaultHttpRoutePlanner" href="/source/s?defs=org.apache.http.impl.conn.DefaultHttpRoutePlanner">org.apache.http.impl.conn.DefaultHttpRoutePlanner</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.routing.HttpRoutePlanner">org.apache.http.conn.routing.HttpRoutePlanner</a>  {
	protected final org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="schemeRegistry" href="/source/s?defs=schemeRegistry">schemeRegistry</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
	public org.apache.http.conn.routing.HttpRoute <a class="d" name="determineRoute" href="/source/s?defs=determineRoute">determineRoute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.routing.HttpRoute route
		java.net.InetAddress local
		org.apache.http.HttpHost proxy
		org.apache.http.conn.scheme.Scheme schm
		boolean secure
}
</pre><br/><b>org/apache/http/impl/conn/ProxySelectorRoutePlanner.class</b><pre><a href="/source/s?path=ProxySelectorRoutePlanner.java">ProxySelectorRoutePlanner.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.ProxySelectorRoutePlanner" href="/source/s?defs=org.apache.http.impl.conn.ProxySelectorRoutePlanner">org.apache.http.impl.conn.ProxySelectorRoutePlanner</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.routing.HttpRoutePlanner">org.apache.http.conn.routing.HttpRoutePlanner</a>  {
	protected final org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="schemeRegistry" href="/source/s?defs=schemeRegistry">schemeRegistry</a>
	protected java.net.ProxySelector <a class="d" name="proxySelector" href="/source/s?defs=proxySelector">proxySelector</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry, java.net.ProxySelector) 
		org.apache.http.conn.scheme.SchemeRegistry schreg
		java.net.ProxySelector prosel
	public java.net.ProxySelector <a class="d" name="getProxySelector" href="/source/s?defs=getProxySelector">getProxySelector</a> () 
	public void <a class="d" name="setProxySelector" href="/source/s?defs=setProxySelector">setProxySelector</a> (java.net.ProxySelector) 
		java.net.ProxySelector prosel
	public org.apache.http.conn.routing.HttpRoute <a class="d" name="determineRoute" href="/source/s?defs=determineRoute">determineRoute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.routing.HttpRoute route
		java.net.InetAddress local
		org.apache.http.HttpHost proxy
		org.apache.http.conn.scheme.Scheme schm
		boolean secure
	protected org.apache.http.HttpHost <a class="d" name="determineProxy" href="/source/s?defs=determineProxy">determineProxy</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
		java.net.URISyntaxException usx
		java.net.InetSocketAddress isa
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		java.net.ProxySelector psel
		java.net.URI targetURI
		java.util.List proxies
		java.net.Proxy p
		org.apache.http.HttpHost result
	protected java.lang.String <a class="d" name="getHost" href="/source/s?defs=getHost">getHost</a> (java.net.InetSocketAddress) 
		java.net.InetSocketAddress isa
	protected java.net.Proxy <a class="d" name="chooseProxy" href="/source/s?defs=chooseProxy">chooseProxy</a> (java.util.List, org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) 
		java.net.Proxy p
		int i
		java.util.List proxies
		org.apache.http.HttpHost target
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		java.net.Proxy result
}
</pre><br/><b>org/apache/http/impl/conn/DefaultClientConnectionOperator.class</b><pre><a href="/source/s?path=DefaultClientConnectionOperator.java">DefaultClientConnectionOperator.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.DefaultClientConnectionOperator" href="/source/s?defs=org.apache.http.impl.conn.DefaultClientConnectionOperator">org.apache.http.impl.conn.DefaultClientConnectionOperator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ClientConnectionOperator">org.apache.http.conn.ClientConnectionOperator</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	protected final org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="schemeRegistry" href="/source/s?defs=schemeRegistry">schemeRegistry</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeRegistry) 
		org.apache.http.conn.scheme.SchemeRegistry schemes
	public org.apache.http.conn.OperatedClientConnection <a class="d" name="createConnection" href="/source/s?defs=createConnection">createConnection</a> () 
	public void <a class="d" name="openConnection" href="/source/s?defs=openConnection">openConnection</a> (org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket connsock
		java.net.ConnectException ex
		org.apache.http.conn.ConnectTimeoutException ex
		java.net.InetAddress address
		boolean last
		java.net.Socket sock
		java.net.InetSocketAddress remoteAddress
		java.net.InetSocketAddress localAddress
		int i
		org.apache.http.conn.OperatedClientConnection conn
		org.apache.http.HttpHost target
		java.net.InetAddress local
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.conn.scheme.Scheme schm
		org.apache.http.conn.scheme.SchemeSocketFactory sf
		java.net.InetAddress[] addresses
		int port
	public void <a class="d" name="updateSecureConnection" href="/source/s?defs=updateSecureConnection">updateSecureConnection</a> (org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.ConnectException ex
		org.apache.http.conn.OperatedClientConnection conn
		org.apache.http.HttpHost target
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		org.apache.http.conn.scheme.Scheme schm
		org.apache.http.conn.scheme.LayeredSchemeSocketFactory lsf
		java.net.Socket sock
	protected void <a class="d" name="prepareSocket" href="/source/s?defs=prepareSocket">prepareSocket</a> (java.net.Socket, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.Socket sock
		org.apache.http.protocol.HttpContext context
		org.apache.http.params.HttpParams params
		int linger
	protected java.net.InetAddress[] <a class="d" name="resolveHostname" href="/source/s?defs=resolveHostname">resolveHostname</a> (java.lang.String)  throws <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
		String host
}
</pre><br/><b>org/apache/http/impl/conn/LoggingSessionInputBuffer.class</b><pre><a href="/source/s?path=LoggingSessionInputBuffer.java">LoggingSessionInputBuffer.java</a>
package <a href="/source/s?defs=org.apache.http.impl.conn">org.apache.http.impl.conn</a>
public <a class="d" name="org.apache.http.impl.conn.LoggingSessionInputBuffer" href="/source/s?defs=org.apache.http.impl.conn.LoggingSessionInputBuffer">org.apache.http.impl.conn.LoggingSessionInputBuffer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.io.SessionInputBuffer">org.apache.http.io.SessionInputBuffer</a> <a href="/source/s?defs=org.apache.http.io.EofSensor">org.apache.http.io.EofSensor</a>  {
	private final org.apache.http.io.SessionInputBuffer <a class="d" name="in" href="/source/s?defs=in">in</a>
	private final org.apache.http.io.EofSensor <a class="d" name="eofSensor" href="/source/s?defs=eofSensor">eofSensor</a>
	private final org.apache.http.impl.conn.Wire <a class="d" name="wire" href="/source/s?defs=wire">wire</a>
	private final String <a class="d" name="charset" href="/source/s?defs=charset">charset</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.impl.conn.Wire, java.lang.String) 
		org.apache.http.io.SessionInputBuffer in
		org.apache.http.impl.conn.Wire wire
		String charset
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.io.SessionInputBuffer, org.apache.http.impl.conn.Wire) 
		org.apache.http.io.SessionInputBuffer in
		org.apache.http.impl.conn.Wire wire
	public boolean <a class="d" name="isDataAvailable" href="/source/s?defs=isDataAvailable">isDataAvailable</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int timeout
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int off
		int len
		int l
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int l
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		byte[] b
		int l
	public java.lang.String <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String tmp
		String s
	public int <a class="d" name="readLine" href="/source/s?defs=readLine">readLine</a> (org.apache.http.util.CharArrayBuffer)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int pos
		String s
		String tmp
		org.apache.http.util.CharArrayBuffer buffer
		int l
	public org.apache.http.io.HttpTransportMetrics <a class="d" name="getMetrics" href="/source/s?defs=getMetrics">getMetrics</a> () 
	public boolean <a class="d" name="isEof" href="/source/s?defs=isEof">isEof</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/AuthSchemeBase.class</b><pre><a href="/source/s?path=AuthSchemeBase.java">AuthSchemeBase.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public abstract <a class="d" name="org.apache.http.impl.auth.AuthSchemeBase" href="/source/s?defs=org.apache.http.impl.auth.AuthSchemeBase">org.apache.http.impl.auth.AuthSchemeBase</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.ContextAwareAuthScheme">org.apache.http.auth.ContextAwareAuthScheme</a>  {
	private boolean <a class="d" name="proxy" href="/source/s?defs=proxy">proxy</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="processChallenge" href="/source/s?defs=processChallenge">processChallenge</a> (org.apache.http.Header)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		int pos
		String s
		org.apache.http.Header header
		String authheader
		org.apache.http.util.CharArrayBuffer buffer
		int pos
		int beginIndex
		int endIndex
		String s
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	protected abstract void <a class="d" name="parseChallenge" href="/source/s?defs=parseChallenge">parseChallenge</a> (org.apache.http.util.CharArrayBuffer, int, int)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
	public boolean <a class="d" name="isProxy" href="/source/s?defs=isProxy">isProxy</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/BasicSchemeFactory.class</b><pre><a href="/source/s?path=BasicSchemeFactory.java">BasicSchemeFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.BasicSchemeFactory" href="/source/s?defs=org.apache.http.impl.auth.BasicSchemeFactory">org.apache.http.impl.auth.BasicSchemeFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.AuthSchemeFactory">org.apache.http.auth.AuthSchemeFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.auth.AuthScheme <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/auth/SpnegoTokenGenerator.class</b><pre><a href="/source/s?path=SpnegoTokenGenerator.java">SpnegoTokenGenerator.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public abstract <a class="d" name="org.apache.http.impl.auth.SpnegoTokenGenerator" href="/source/s?defs=org.apache.http.impl.auth.SpnegoTokenGenerator">org.apache.http.impl.auth.SpnegoTokenGenerator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract byte[] <a class="d" name="generateSpnegoDERObject" href="/source/s?defs=generateSpnegoDERObject">generateSpnegoDERObject</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/impl/auth/UnsupportedDigestAlgorithmException.class</b><pre><a href="/source/s?path=UnsupportedDigestAlgorithmException.java">UnsupportedDigestAlgorithmException.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.UnsupportedDigestAlgorithmException" href="/source/s?defs=org.apache.http.impl.auth.UnsupportedDigestAlgorithmException">org.apache.http.impl.auth.UnsupportedDigestAlgorithmException</a> extends <a href="/source/s?defs=java.lang.RuntimeException">java.lang.RuntimeException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/impl/auth/NTLMSchemeFactory.class</b><pre><a href="/source/s?path=NTLMSchemeFactory.java">NTLMSchemeFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.NTLMSchemeFactory" href="/source/s?defs=org.apache.http.impl.auth.NTLMSchemeFactory">org.apache.http.impl.auth.NTLMSchemeFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.AuthSchemeFactory">org.apache.http.auth.AuthSchemeFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.auth.AuthScheme <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineException.class</b><pre><a href="/source/s?path=NTLMEngineException.java">NTLMEngineException.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.NTLMEngineException" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> extends <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$HMACMD5.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5">org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	protected byte[] <a class="d" name="ipad" href="/source/s?defs=ipad">ipad</a>
	protected byte[] <a class="d" name="opad" href="/source/s?defs=opad">opad</a>
	protected java.security.MessageDigest <a class="d" name="md5" href="/source/s?defs=md5">md5</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		Exception ex
		byte[] key
		int keyLength
		int i
	byte[] <a class="d" name="getOutput" href="/source/s?defs=getOutput">getOutput</a> () 
		byte[] digest
	void <a class="d" name="update" href="/source/s?defs=update">update</a> (byte[]) 
		byte[] input
	void <a class="d" name="update" href="/source/s?defs=update">update</a> (byte[], int, int) 
		byte[] input
		int offset
		int length
}
</pre><br/><b>org/apache/http/impl/auth/NTLMScheme.class</b><pre><a href="/source/s?path=NTLMScheme.java">NTLMScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.NTLMScheme" href="/source/s?defs=org.apache.http.impl.auth.NTLMScheme">org.apache.http.impl.auth.NTLMScheme</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.AuthSchemeBase">org.apache.http.impl.auth.AuthSchemeBase</a> {
	private final org.apache.http.impl.auth.NTLMEngine <a class="d" name="engine" href="/source/s?defs=engine">engine</a>
	private org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="state" href="/source/s?defs=state">state</a>
	private String <a class="d" name="challenge" href="/source/s?defs=challenge">challenge</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.auth.NTLMEngine) 
		org.apache.http.impl.auth.NTLMEngine engine
	public java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public java.lang.String <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
	public java.lang.String <a class="d" name="getRealm" href="/source/s?defs=getRealm">getRealm</a> () 
	public boolean <a class="d" name="isConnectionBased" href="/source/s?defs=isConnectionBased">isConnectionBased</a> () 
	protected void <a class="d" name="parseChallenge" href="/source/s?defs=parseChallenge">parseChallenge</a> (org.apache.http.util.CharArrayBuffer, int, int)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		int beginIndex
		int endIndex
		String challenge
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		ClassCastException e
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
		org.apache.http.auth.NTCredentials ntcredentials
		String response
		org.apache.http.util.CharArrayBuffer buffer
	public boolean <a class="d" name="isComplete" href="/source/s?defs=isComplete">isComplete</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/DigestScheme.class</b><pre><a href="/source/s?path=DigestScheme.java">DigestScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.DigestScheme" href="/source/s?defs=org.apache.http.impl.auth.DigestScheme">org.apache.http.impl.auth.DigestScheme</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.RFC2617Scheme">org.apache.http.impl.auth.RFC2617Scheme</a> {
	private static final char[] <a class="d" name="HEXADECIMAL" href="/source/s?defs=HEXADECIMAL">HEXADECIMAL</a>
	private boolean <a class="d" name="complete" href="/source/s?defs=complete">complete</a>
	private static final int <a class="d" name="QOP_MISSING" href="/source/s?defs=QOP_MISSING">QOP_MISSING</a>
	private static final int <a class="d" name="QOP_AUTH_INT" href="/source/s?defs=QOP_AUTH_INT">QOP_AUTH_INT</a>
	private static final int <a class="d" name="QOP_AUTH" href="/source/s?defs=QOP_AUTH">QOP_AUTH</a>
	private int <a class="d" name="qopVariant" href="/source/s?defs=qopVariant">qopVariant</a>
	private String <a class="d" name="lastNonce" href="/source/s?defs=lastNonce">lastNonce</a>
	private long <a class="d" name="nounceCount" href="/source/s?defs=nounceCount">nounceCount</a>
	private String <a class="d" name="cnonce" href="/source/s?defs=cnonce">cnonce</a>
	private String <a class="d" name="nc" href="/source/s?defs=nc">nc</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="processChallenge" href="/source/s?defs=processChallenge">processChallenge</a> (org.apache.http.Header)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		String variant
		java.util.StringTokenizer tok
		org.apache.http.Header header
		boolean unsupportedQop
		String qop
	public boolean <a class="d" name="isComplete" href="/source/s?defs=isComplete">isComplete</a> () 
		String s
	public java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public boolean <a class="d" name="isConnectionBased" href="/source/s?defs=isConnectionBased">isConnectionBased</a> () 
	public void <a class="d" name="overrideParamter" href="/source/s?defs=overrideParamter">overrideParamter</a> (java.lang.String, java.lang.String) 
		String name
		String value
	private java.lang.String <a class="d" name="getCnonce" href="/source/s?defs=getCnonce">getCnonce</a> () 
	private java.lang.String <a class="d" name="getNc" href="/source/s?defs=getNc">getNc</a> () 
		StringBuilder sb
		java.util.Formatter formatter
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
		String charset
		String digest
	private static java.security.MessageDigest <a class="d" name="createMessageDigest" href="/source/s?defs=createMessageDigest">createMessageDigest</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.UnsupportedDigestAlgorithmException">org.apache.http.impl.auth.UnsupportedDigestAlgorithmException</a> 
		Exception e
		String digAlg
	private java.lang.String <a class="d" name="createDigest" href="/source/s?defs=createDigest">createDigest</a> (org.apache.http.auth.Credentials)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		String cnonce
		String tmp2
		StringBuilder tmp3
		StringBuilder tmp2
		String serverDigestValue
		String qopOption
		String cnonce
		String nc
		StringBuilder tmp2
		org.apache.http.auth.Credentials credentials
		String uri
		String realm
		String nonce
		String method
		String algorithm
		String charset
		String digAlg
		java.security.MessageDigest digester
		String uname
		String pwd
		StringBuilder tmp
		String a1
		String hasha1
		String a2
		String hasha2
		String serverDigestValue
		String serverDigest
	private org.apache.http.Header <a class="d" name="createDigestHeader" href="/source/s?defs=createDigestHeader">createDigestHeader</a> (org.apache.http.auth.Credentials, java.lang.String) 
		org.apache.http.message.BasicNameValuePair param
		boolean noQuotes
		int i
		org.apache.http.auth.Credentials credentials
		String digest
		org.apache.http.util.CharArrayBuffer buffer
		String uri
		String realm
		String nonce
		String opaque
		String response
		String algorithm
		String uname
		java.util.List params
	private java.lang.String <a class="d" name="getQopVariantString" href="/source/s?defs=getQopVariantString">getQopVariantString</a> () 
		String qopOption
		String qopOption
	private static java.lang.String <a class="d" name="encode" href="/source/s?defs=encode">encode</a> (byte[]) 
		int low
		int high
		int i
		byte[] binaryData
		int n
		char[] buffer
	public static java.lang.String <a class="d" name="createCnonce" href="/source/s?defs=createCnonce">createCnonce</a> () 
		String cnonce
		java.security.MessageDigest md5Helper
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$NTLMMessage.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage">org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private byte[] <a class="d" name="messageContents" href="/source/s?defs=messageContents">messageContents</a>
	private int <a class="d" name="currentOutputPosition" href="/source/s?defs=currentOutputPosition">currentOutputPosition</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String messageBody
		int expectedType
		int i
		int type
	protected int <a class="d" name="getPreambleLength" href="/source/s?defs=getPreambleLength">getPreambleLength</a> () 
	protected int <a class="d" name="getMessageLength" href="/source/s?defs=getMessageLength">getMessageLength</a> () 
	protected byte <a class="d" name="readByte" href="/source/s?defs=readByte">readByte</a> (int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		int position
	protected void <a class="d" name="readBytes" href="/source/s?defs=readBytes">readBytes</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] buffer
		int position
	protected int <a class="d" name="readUShort" href="/source/s?defs=readUShort">readUShort</a> (int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		int position
	protected int <a class="d" name="readULong" href="/source/s?defs=readULong">readULong</a> (int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		int position
	protected byte[] <a class="d" name="readSecurityBuffer" href="/source/s?defs=readSecurityBuffer">readSecurityBuffer</a> (int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		int position
	protected void <a class="d" name="prepareResponse" href="/source/s?defs=prepareResponse">prepareResponse</a> (int, int) 
		int maxlength
		int messageType
	protected void <a class="d" name="addByte" href="/source/s?defs=addByte">addByte</a> (byte) 
		byte b
	protected void <a class="d" name="addBytes" href="/source/s?defs=addBytes">addBytes</a> (byte[]) 
		int i
		byte[] bytes
	protected void <a class="d" name="addUShort" href="/source/s?defs=addUShort">addUShort</a> (int) 
		int value
	protected void <a class="d" name="addULong" href="/source/s?defs=addULong">addULong</a> (int) 
		int value
	java.lang.String <a class="d" name="getResponse" href="/source/s?defs=getResponse">getResponse</a> () 
		int i
		byte[] tmp
		byte[] resp
		byte[] resp
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngine.class</b><pre><a href="/source/s?path=NTLMEngine.java">NTLMEngine.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public abstract <a class="d" name="org.apache.http.impl.auth.NTLMEngine" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngine">org.apache.http.impl.auth.NTLMEngine</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="generateType1Msg" href="/source/s?defs=generateType1Msg">generateType1Msg</a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
	public abstract java.lang.String <a class="d" name="generateType3Msg" href="/source/s?defs=generateType3Msg">generateType3Msg</a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$Type1Message.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$Type1Message" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$Type1Message">org.apache.http.impl.auth.NTLMEngineImpl$Type1Message</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage">org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage</a> {
	protected byte[] <a class="d" name="hostBytes" href="/source/s?defs=hostBytes">hostBytes</a>
	protected byte[] <a class="d" name="domainBytes" href="/source/s?defs=domainBytes">domainBytes</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		java.io.UnsupportedEncodingException e
		String domain
		String host
	java.lang.String <a class="d" name="getResponse" href="/source/s?defs=getResponse">getResponse</a> () 
		int finalLength
}
</pre><br/><b>org/apache/http/impl/auth/BasicScheme.class</b><pre><a href="/source/s?path=BasicScheme.java">BasicScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.BasicScheme" href="/source/s?defs=org.apache.http.impl.auth.BasicScheme">org.apache.http.impl.auth.BasicScheme</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.RFC2617Scheme">org.apache.http.impl.auth.RFC2617Scheme</a> {
	private boolean <a class="d" name="complete" href="/source/s?defs=complete">complete</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public void <a class="d" name="processChallenge" href="/source/s?defs=processChallenge">processChallenge</a> (org.apache.http.Header)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.Header header
	public boolean <a class="d" name="isComplete" href="/source/s?defs=isComplete">isComplete</a> () 
	public boolean <a class="d" name="isConnectionBased" href="/source/s?defs=isConnectionBased">isConnectionBased</a> () 
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
		String charset
	public static org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, java.lang.String, boolean) 
		org.apache.http.auth.Credentials credentials
		String charset
		boolean proxy
		StringBuilder tmp
		byte[] base64password
		org.apache.http.util.CharArrayBuffer buffer
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$Type2Message.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$Type2Message" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$Type2Message">org.apache.http.impl.auth.NTLMEngineImpl$Type2Message</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage">org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage</a> {
	protected byte[] <a class="d" name="challenge" href="/source/s?defs=challenge">challenge</a>
	protected String <a class="d" name="target" href="/source/s?defs=target">target</a>
	protected byte[] <a class="d" name="targetInfo" href="/source/s?defs=targetInfo">targetInfo</a>
	protected int <a class="d" name="flags" href="/source/s?defs=flags">flags</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		java.io.UnsupportedEncodingException e
		byte[] bytes
		byte[] bytes
		String message
	byte[] <a class="d" name="getChallenge" href="/source/s?defs=getChallenge">getChallenge</a> () 
	java.lang.String <a class="d" name="getTarget" href="/source/s?defs=getTarget">getTarget</a> () 
	byte[] <a class="d" name="getTargetInfo" href="/source/s?defs=getTargetInfo">getTargetInfo</a> () 
	int <a class="d" name="getFlags" href="/source/s?defs=getFlags">getFlags</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/NegotiateSchemeFactory.class</b><pre><a href="/source/s?path=NegotiateSchemeFactory.java">NegotiateSchemeFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.NegotiateSchemeFactory" href="/source/s?defs=org.apache.http.impl.auth.NegotiateSchemeFactory">org.apache.http.impl.auth.NegotiateSchemeFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.AuthSchemeFactory">org.apache.http.auth.AuthSchemeFactory</a>  {
	private final org.apache.http.impl.auth.SpnegoTokenGenerator <a class="d" name="spengoGenerator" href="/source/s?defs=spengoGenerator">spengoGenerator</a>
	private final boolean <a class="d" name="stripPort" href="/source/s?defs=stripPort">stripPort</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.auth.SpnegoTokenGenerator, boolean) 
		org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator
		boolean stripPort
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.auth.SpnegoTokenGenerator) 
		org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.auth.AuthScheme <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public boolean <a class="d" name="isStripPort" href="/source/s?defs=isStripPort">isStripPort</a> () 
	public org.apache.http.impl.auth.SpnegoTokenGenerator <a class="d" name="getSpengoGenerator" href="/source/s?defs=getSpengoGenerator">getSpengoGenerator</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
final <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl">org.apache.http.impl.auth.NTLMEngineImpl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngine">org.apache.http.impl.auth.NTLMEngine</a>  {
	protected static final int <a class="d" name="FLAG_UNICODE_ENCODING" href="/source/s?defs=FLAG_UNICODE_ENCODING">FLAG_UNICODE_ENCODING</a>
	protected static final int <a class="d" name="FLAG_TARGET_DESIRED" href="/source/s?defs=FLAG_TARGET_DESIRED">FLAG_TARGET_DESIRED</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_SIGN" href="/source/s?defs=FLAG_NEGOTIATE_SIGN">FLAG_NEGOTIATE_SIGN</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_SEAL" href="/source/s?defs=FLAG_NEGOTIATE_SEAL">FLAG_NEGOTIATE_SEAL</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_NTLM" href="/source/s?defs=FLAG_NEGOTIATE_NTLM">FLAG_NEGOTIATE_NTLM</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_ALWAYS_SIGN" href="/source/s?defs=FLAG_NEGOTIATE_ALWAYS_SIGN">FLAG_NEGOTIATE_ALWAYS_SIGN</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_NTLM2" href="/source/s?defs=FLAG_NEGOTIATE_NTLM2">FLAG_NEGOTIATE_NTLM2</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_128" href="/source/s?defs=FLAG_NEGOTIATE_128">FLAG_NEGOTIATE_128</a>
	protected static final int <a class="d" name="FLAG_NEGOTIATE_KEY_EXCH" href="/source/s?defs=FLAG_NEGOTIATE_KEY_EXCH">FLAG_NEGOTIATE_KEY_EXCH</a>
	private static final java.security.SecureRandom <a class="d" name="RND_GEN" href="/source/s?defs=RND_GEN">RND_GEN</a>
	static final String <a class="d" name="DEFAULT_CHARSET" href="/source/s?defs=DEFAULT_CHARSET">DEFAULT_CHARSET</a>
	private String <a class="d" name="credentialCharset" href="/source/s?defs=credentialCharset">credentialCharset</a>
	private static byte[] <a class="d" name="SIGNATURE" href="/source/s?defs=SIGNATURE">SIGNATURE</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	final java.lang.String <a class="d" name="getResponseFor" href="/source/s?defs=getResponseFor">getResponseFor</a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String response
		org.apache.http.impl.auth.NTLMEngineImpl$Type2Message t2m
		String message
		String username
		String password
		String host
		String domain
		String response
	java.lang.String <a class="d" name="getType1Message" href="/source/s?defs=getType1Message">getType1Message</a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String host
		String domain
	java.lang.String <a class="d" name="getType3Message" href="/source/s?defs=getType3Message">getType3Message</a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, byte[], int, java.lang.String, byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String user
		String password
		String host
		String domain
		byte[] nonce
		int type2Flags
		String target
		byte[] targetInformation
	java.lang.String <a class="d" name="getCredentialCharset" href="/source/s?defs=getCredentialCharset">getCredentialCharset</a> () 
	void <a class="d" name="setCredentialCharset" href="/source/s?defs=setCredentialCharset">setCredentialCharset</a> (java.lang.String) 
		String credentialCharset
	private static java.lang.String <a class="d" name="stripDotSuffix" href="/source/s?defs=stripDotSuffix">stripDotSuffix</a> (java.lang.String) 
		String value
		int index
	private static java.lang.String <a class="d" name="convertHost" href="/source/s?defs=convertHost">convertHost</a> (java.lang.String) 
		String host
	private static java.lang.String <a class="d" name="convertDomain" href="/source/s?defs=convertDomain">convertDomain</a> (java.lang.String) 
		String domain
	private static int <a class="d" name="readULong" href="/source/s?defs=readULong">readULong</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] src
		int index
	private static int <a class="d" name="readUShort" href="/source/s?defs=readUShort">readUShort</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] src
		int index
	private static byte[] <a class="d" name="readSecurityBuffer" href="/source/s?defs=readSecurityBuffer">readSecurityBuffer</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] src
		int index
		int length
		int offset
		byte[] buffer
	private static byte[] <a class="d" name="makeRandomChallenge" href="/source/s?defs=makeRandomChallenge">makeRandomChallenge</a> ()  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] rval
	private static byte[] <a class="d" name="makeNTLM2RandomChallenge" href="/source/s?defs=makeNTLM2RandomChallenge">makeNTLM2RandomChallenge</a> ()  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] rval
	static byte[] <a class="d" name="getLMResponse" href="/source/s?defs=getLMResponse">getLMResponse</a> (java.lang.String, byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String password
		byte[] challenge
		byte[] lmHash
	static byte[] <a class="d" name="getNTLMResponse" href="/source/s?defs=getNTLMResponse">getNTLMResponse</a> (java.lang.String, byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String password
		byte[] challenge
		byte[] ntlmHash
	static byte[] <a class="d" name="getNTLMv2Response" href="/source/s?defs=getNTLMv2Response">getNTLMv2Response</a> (java.lang.String, java.lang.String, java.lang.String, byte[], byte[], byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String target
		String user
		String password
		byte[] challenge
		byte[] clientChallenge
		byte[] targetInformation
		byte[] ntlmv2Hash
		byte[] blob
	static byte[] <a class="d" name="getLMv2Response" href="/source/s?defs=getLMv2Response">getLMv2Response</a> (java.lang.String, java.lang.String, java.lang.String, byte[], byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String target
		String user
		String password
		byte[] challenge
		byte[] clientChallenge
		byte[] ntlmv2Hash
	static byte[] <a class="d" name="getNTLM2SessionResponse" href="/source/s?defs=getNTLM2SessionResponse">getNTLM2SessionResponse</a> (java.lang.String, byte[], byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] ntlmHash
		java.security.MessageDigest md5
		byte[] digest
		byte[] sessionHash
		Exception e
		String password
		byte[] challenge
		byte[] clientChallenge
	private static byte[] <a class="d" name="lmHash" href="/source/s?defs=lmHash">lmHash</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] oemPassword
		int length
		byte[] keyBytes
		java.security.Key lowKey
		java.security.Key highKey
		byte[] magicConstant
		javax.crypto.Cipher des
		byte[] lowHash
		byte[] highHash
		byte[] lmHash
		Exception e
		String password
	private static byte[] <a class="d" name="ntlmHash" href="/source/s?defs=ntlmHash">ntlmHash</a> (java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] unicodePassword
		org.apache.http.impl.auth.NTLMEngineImpl$MD4 md4
		java.io.UnsupportedEncodingException e
		String password
	private static byte[] <a class="d" name="ntlmv2Hash" href="/source/s?defs=ntlmv2Hash">ntlmv2Hash</a> (java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] ntlmHash
		org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 hmacMD5
		java.io.UnsupportedEncodingException e
		String target
		String user
		String password
	private static byte[] <a class="d" name="lmResponse" href="/source/s?defs=lmResponse">lmResponse</a> (byte[], byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] keyBytes
		java.security.Key lowKey
		java.security.Key middleKey
		java.security.Key highKey
		javax.crypto.Cipher des
		byte[] lowResponse
		byte[] middleResponse
		byte[] highResponse
		byte[] lmResponse
		Exception e
		byte[] hash
		byte[] challenge
	private static byte[] <a class="d" name="lmv2Response" href="/source/s?defs=lmv2Response">lmv2Response</a> (byte[], byte[], byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] hash
		byte[] challenge
		byte[] clientData
		org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 hmacMD5
		byte[] mac
		byte[] lmv2Response
	private static byte[] <a class="d" name="createBlob" href="/source/s?defs=createBlob">createBlob</a> (byte[], byte[]) 
		int i
		byte[] clientChallenge
		byte[] targetInformation
		byte[] blobSignature
		byte[] reserved
		byte[] unknown1
		long time
		byte[] timestamp
		byte[] blob
		int offset
	private static java.security.Key <a class="d" name="createDESKey" href="/source/s?defs=createDESKey">createDESKey</a> (byte[], int) 
		byte[] bytes
		int offset
		byte[] keyBytes
		byte[] material
	private static void <a class="d" name="oddParity" href="/source/s?defs=oddParity">oddParity</a> (byte[]) 
		byte b
		boolean needsParity
		int i
		byte[] bytes
	static void <a class="d" name="writeULong" href="/source/s?defs=writeULong">writeULong</a> (byte[], int, int) 
		byte[] buffer
		int value
		int offset
	static int <a class="d" name="F" href="/source/s?defs=F">F</a> (int, int, int) 
		int x
		int y
		int z
	static int <a class="d" name="G" href="/source/s?defs=G">G</a> (int, int, int) 
		int x
		int y
		int z
	static int <a class="d" name="H" href="/source/s?defs=H">H</a> (int, int, int) 
		int x
		int y
		int z
	static int <a class="d" name="rotintlft" href="/source/s?defs=rotintlft">rotintlft</a> (int, int) 
		int val
		int numbits
	public java.lang.String <a class="d" name="generateType1Msg" href="/source/s?defs=generateType1Msg">generateType1Msg</a> (java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String domain
		String workstation
	public java.lang.String <a class="d" name="generateType3Msg" href="/source/s?defs=generateType3Msg">generateType3Msg</a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		String username
		String password
		String domain
		String workstation
		String challenge
		org.apache.http.impl.auth.NTLMEngineImpl$Type2Message t2m
	static synthetic byte[] <a class="d" name="access$000" href="/source/s?defs=access$000">access$000</a> () 
	static synthetic int <a class="d" name="access$100" href="/source/s?defs=access$100">access$100</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] x0
		int x1
	static synthetic int <a class="d" name="access$200" href="/source/s?defs=access$200">access$200</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] x0
		int x1
	static synthetic byte[] <a class="d" name="access$300" href="/source/s?defs=access$300">access$300</a> (byte[], int)  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] x0
		int x1
	static synthetic java.lang.String <a class="d" name="access$400" href="/source/s?defs=access$400">access$400</a> (java.lang.String) 
		String x0
	static synthetic java.lang.String <a class="d" name="access$500" href="/source/s?defs=access$500">access$500</a> (java.lang.String) 
		String x0
	static synthetic byte[] <a class="d" name="access$600" href="/source/s?defs=access$600">access$600</a> ()  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
	static synthetic byte[] <a class="d" name="access$700" href="/source/s?defs=access$700">access$700</a> ()  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
		Exception e
		java.security.SecureRandom rnd
		byte[] bytesWithoutNull
}
</pre><br/><b>org/apache/http/impl/auth/RFC2617Scheme.class</b><pre><a href="/source/s?path=RFC2617Scheme.java">RFC2617Scheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public abstract <a class="d" name="org.apache.http.impl.auth.RFC2617Scheme" href="/source/s?defs=org.apache.http.impl.auth.RFC2617Scheme">org.apache.http.impl.auth.RFC2617Scheme</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.AuthSchemeBase">org.apache.http.impl.auth.AuthSchemeBase</a> {
	private java.util.Map <a class="d" name="params" href="/source/s?defs=params">params</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	protected void <a class="d" name="parseChallenge" href="/source/s?defs=parseChallenge">parseChallenge</a> (org.apache.http.util.CharArrayBuffer, int, int)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.HeaderElement element
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.util.CharArrayBuffer buffer
		int pos
		int len
		org.apache.http.message.HeaderValueParser parser
		org.apache.http.message.ParserCursor cursor
		org.apache.http.HeaderElement[] elements
	protected java.util.Map <a class="d" name="getParameters" href="/source/s?defs=getParameters">getParameters</a> () 
	public java.lang.String <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
	public java.lang.String <a class="d" name="getRealm" href="/source/s?defs=getRealm">getRealm</a> () 
}
</pre><br/><b>org/apache/http/impl/auth/DigestSchemeFactory.class</b><pre><a href="/source/s?path=DigestSchemeFactory.java">DigestSchemeFactory.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.DigestSchemeFactory" href="/source/s?defs=org.apache.http.impl.auth.DigestSchemeFactory">org.apache.http.impl.auth.DigestSchemeFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.AuthSchemeFactory">org.apache.http.auth.AuthSchemeFactory</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.auth.AuthScheme <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$Type3Message.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$Type3Message" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$Type3Message">org.apache.http.impl.auth.NTLMEngineImpl$Type3Message</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage">org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage</a> {
	protected int <a class="d" name="type2Flags" href="/source/s?defs=type2Flags">type2Flags</a>
	protected byte[] <a class="d" name="domainBytes" href="/source/s?defs=domainBytes">domainBytes</a>
	protected byte[] <a class="d" name="hostBytes" href="/source/s?defs=hostBytes">hostBytes</a>
	protected byte[] <a class="d" name="userBytes" href="/source/s?defs=userBytes">userBytes</a>
	protected byte[] <a class="d" name="lmResp" href="/source/s?defs=lmResp">lmResp</a>
	protected byte[] <a class="d" name="ntResp" href="/source/s?defs=ntResp">ntResp</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String, byte[], int, java.lang.String, byte[])  throws <a href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineException">org.apache.http.impl.auth.NTLMEngineException</a> 
		byte[] clientChallenge
		byte[] clientChallenge
		org.apache.http.impl.auth.NTLMEngineException e
		java.io.UnsupportedEncodingException e
		String domain
		String host
		String user
		String password
		byte[] nonce
		int type2Flags
		String target
		byte[] targetInformation
	java.lang.String <a class="d" name="getResponse" href="/source/s?defs=getResponse">getResponse</a> () 
		int ntRespLen
		int lmRespLen
		int domainLen
		int hostLen
		int userLen
		int lmRespOffset
		int ntRespOffset
		int domainOffset
		int userOffset
		int hostOffset
		int sessionKeyOffset
		int finalLength
}
</pre><br/><b>org/apache/http/impl/auth/NTLMScheme$State.class</b><pre><a href="/source/s?path=NTLMScheme.java">NTLMScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
final enum <a class="d" name="org.apache.http.impl.auth.NTLMScheme$State" href="/source/s?defs=org.apache.http.impl.auth.NTLMScheme$State">org.apache.http.impl.auth.NTLMScheme$State</a> extends <a href="/source/s?defs=java.lang.Enum">java.lang.Enum</a> {
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="UNINITIATED" href="/source/s?defs=UNINITIATED">UNINITIATED</a>
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="CHALLENGE_RECEIVED" href="/source/s?defs=CHALLENGE_RECEIVED">CHALLENGE_RECEIVED</a>
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="MSG_TYPE1_GENERATED" href="/source/s?defs=MSG_TYPE1_GENERATED">MSG_TYPE1_GENERATED</a>
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="MSG_TYPE2_RECEVIED" href="/source/s?defs=MSG_TYPE2_RECEVIED">MSG_TYPE2_RECEVIED</a>
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="MSG_TYPE3_GENERATED" href="/source/s?defs=MSG_TYPE3_GENERATED">MSG_TYPE3_GENERATED</a>
	public static final enum org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="FAILED" href="/source/s?defs=FAILED">FAILED</a>
	private static final synthetic org.apache.http.impl.auth.NTLMScheme$State[] <a class="d" name="$VALUES" href="/source/s?defs=$VALUES">$VALUES</a>
	public static final org.apache.http.impl.auth.NTLMScheme$State[] <a class="d" name="values" href="/source/s?defs=values">values</a> () 
	public static org.apache.http.impl.auth.NTLMScheme$State <a class="d" name="valueOf" href="/source/s?defs=valueOf">valueOf</a> (java.lang.String) 
		String name
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/auth/NegotiateScheme.class</b><pre><a href="/source/s?path=NegotiateScheme.java">NegotiateScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
public <a class="d" name="org.apache.http.impl.auth.NegotiateScheme" href="/source/s?defs=org.apache.http.impl.auth.NegotiateScheme">org.apache.http.impl.auth.NegotiateScheme</a> extends <a href="/source/s?defs=org.apache.http.impl.auth.AuthSchemeBase">org.apache.http.impl.auth.AuthSchemeBase</a> {
	private static final String <a class="d" name="SPNEGO_OID" href="/source/s?defs=SPNEGO_OID">SPNEGO_OID</a>
	private static final String <a class="d" name="KERBEROS_OID" href="/source/s?defs=KERBEROS_OID">KERBEROS_OID</a>
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private final org.apache.http.impl.auth.SpnegoTokenGenerator <a class="d" name="spengoGenerator" href="/source/s?defs=spengoGenerator">spengoGenerator</a>
	private final boolean <a class="d" name="stripPort" href="/source/s?defs=stripPort">stripPort</a>
	private org.ietf.jgss.GSSContext <a class="d" name="gssContext" href="/source/s?defs=gssContext">gssContext</a>
	private org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="state" href="/source/s?defs=state">state</a>
	private byte[] <a class="d" name="token" href="/source/s?defs=token">token</a>
	private org.ietf.jgss.Oid <a class="d" name="negotiationOid" href="/source/s?defs=negotiationOid">negotiationOid</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.auth.SpnegoTokenGenerator, boolean) 
		org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator
		boolean stripPort
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.impl.auth.SpnegoTokenGenerator) 
		org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isComplete" href="/source/s?defs=isComplete">isComplete</a> () 
	public java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
	protected org.ietf.jgss.GSSManager <a class="d" name="getManager" href="/source/s?defs=getManager">getManager</a> () 
	public org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
		String authServer
		org.ietf.jgss.GSSManager manager
		org.ietf.jgss.GSSName serverName
		org.ietf.jgss.GSSException ex
		org.ietf.jgss.GSSManager manager
		org.ietf.jgss.GSSName serverName
		String key
		org.apache.http.HttpHost host
		String authServer
		boolean tryKerberos
		String tokenstr
		org.ietf.jgss.GSSException gsse
		java.io.IOException ex
		org.apache.http.auth.Credentials credentials
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
	public java.lang.String <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
		String name
	public java.lang.String <a class="d" name="getRealm" href="/source/s?defs=getRealm">getRealm</a> () 
	public boolean <a class="d" name="isConnectionBased" href="/source/s?defs=isConnectionBased">isConnectionBased</a> () 
	protected void <a class="d" name="parseChallenge" href="/source/s?defs=parseChallenge">parseChallenge</a> (org.apache.http.util.CharArrayBuffer, int, int)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
		org.apache.http.util.CharArrayBuffer buffer
		int beginIndex
		int endIndex
		String challenge
}
</pre><br/><b>org/apache/http/impl/auth/NegotiateScheme$State.class</b><pre><a href="/source/s?path=NegotiateScheme.java">NegotiateScheme.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
final enum <a class="d" name="org.apache.http.impl.auth.NegotiateScheme$State" href="/source/s?defs=org.apache.http.impl.auth.NegotiateScheme$State">org.apache.http.impl.auth.NegotiateScheme$State</a> extends <a href="/source/s?defs=java.lang.Enum">java.lang.Enum</a> {
	public static final enum org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="UNINITIATED" href="/source/s?defs=UNINITIATED">UNINITIATED</a>
	public static final enum org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="CHALLENGE_RECEIVED" href="/source/s?defs=CHALLENGE_RECEIVED">CHALLENGE_RECEIVED</a>
	public static final enum org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="TOKEN_GENERATED" href="/source/s?defs=TOKEN_GENERATED">TOKEN_GENERATED</a>
	public static final enum org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="FAILED" href="/source/s?defs=FAILED">FAILED</a>
	private static final synthetic org.apache.http.impl.auth.NegotiateScheme$State[] <a class="d" name="$VALUES" href="/source/s?defs=$VALUES">$VALUES</a>
	public static final org.apache.http.impl.auth.NegotiateScheme$State[] <a class="d" name="values" href="/source/s?defs=values">values</a> () 
	public static org.apache.http.impl.auth.NegotiateScheme$State <a class="d" name="valueOf" href="/source/s?defs=valueOf">valueOf</a> (java.lang.String) 
		String name
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/impl/auth/NTLMEngineImpl$MD4.class</b><pre><a href="/source/s?path=NTLMEngineImpl.java">NTLMEngineImpl.java</a>
package <a href="/source/s?defs=org.apache.http.impl.auth">org.apache.http.impl.auth</a>
 <a class="d" name="org.apache.http.impl.auth.NTLMEngineImpl$MD4" href="/source/s?defs=org.apache.http.impl.auth.NTLMEngineImpl$MD4">org.apache.http.impl.auth.NTLMEngineImpl$MD4</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	protected int <a class="d" name="A" href="/source/s?defs=A">A</a>
	protected int <a class="d" name="B" href="/source/s?defs=B">B</a>
	protected int <a class="d" name="C" href="/source/s?defs=C">C</a>
	protected int <a class="d" name="D" href="/source/s?defs=D">D</a>
	protected long <a class="d" name="count" href="/source/s?defs=count">count</a>
	protected byte[] <a class="d" name="dataBuffer" href="/source/s?defs=dataBuffer">dataBuffer</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	void <a class="d" name="update" href="/source/s?defs=update">update</a> (byte[]) 
		int transferAmt
		int transferAmt
		byte[] input
		int curBufferPos
		int inputIndex
	byte[] <a class="d" name="getOutput" href="/source/s?defs=getOutput">getOutput</a> () 
		int i
		int bufferIndex
		int padLen
		byte[] postBytes
		byte[] result
	protected void <a class="d" name="processBuffer" href="/source/s?defs=processBuffer">processBuffer</a> () 
		int i
		int[] d
		int AA
		int BB
		int CC
		int DD
	protected void <a class="d" name="round1" href="/source/s?defs=round1">round1</a> (int[]) 
		int[] d
	protected void <a class="d" name="round2" href="/source/s?defs=round2">round2</a> (int[]) 
		int[] d
	protected void <a class="d" name="round3" href="/source/s?defs=round3">round3</a> (int[]) 
		int[] d
}
</pre><br/><b>org/apache/http/cookie/CookieIdentityComparator.class</b><pre><a href="/source/s?path=CookieIdentityComparator.java">CookieIdentityComparator.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public <a class="d" name="org.apache.http.cookie.CookieIdentityComparator" href="/source/s?defs=org.apache.http.cookie.CookieIdentityComparator">org.apache.http.cookie.CookieIdentityComparator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a> <a href="/source/s?defs=java.util.Comparator">java.util.Comparator</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public int <a class="d" name="compare" href="/source/s?defs=compare">compare</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.Cookie) 
		String d1
		String d2
		String p1
		String p2
		org.apache.http.cookie.Cookie c1
		org.apache.http.cookie.Cookie c2
		int res
	public volatile synthetic int <a class="d" name="compare" href="/source/s?defs=compare">compare</a> (java.lang.Object, java.lang.Object) 
		Object x0
		Object x1
}
</pre><br/><b>org/apache/http/cookie/SM.class</b><pre><a href="/source/s?path=SM.java">SM.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.SM" href="/source/s?defs=org.apache.http.cookie.SM">org.apache.http.cookie.SM</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="COOKIE" href="/source/s?defs=COOKIE">COOKIE</a>
	public static final String <a class="d" name="COOKIE2" href="/source/s?defs=COOKIE2">COOKIE2</a>
	public static final String <a class="d" name="SET_COOKIE" href="/source/s?defs=SET_COOKIE">SET_COOKIE</a>
	public static final String <a class="d" name="SET_COOKIE2" href="/source/s?defs=SET_COOKIE2">SET_COOKIE2</a>
}
</pre><br/><b>org/apache/http/cookie/CookiePathComparator.class</b><pre><a href="/source/s?path=CookiePathComparator.java">CookiePathComparator.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public <a class="d" name="org.apache.http.cookie.CookiePathComparator" href="/source/s?defs=org.apache.http.cookie.CookiePathComparator">org.apache.http.cookie.CookiePathComparator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a> <a href="/source/s?defs=java.util.Comparator">java.util.Comparator</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	private java.lang.String <a class="d" name="normalizePath" href="/source/s?defs=normalizePath">normalizePath</a> (org.apache.http.cookie.Cookie) 
		org.apache.http.cookie.Cookie cookie
		String path
	public int <a class="d" name="compare" href="/source/s?defs=compare">compare</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.Cookie) 
		org.apache.http.cookie.Cookie c1
		org.apache.http.cookie.Cookie c2
		String path1
		String path2
	public volatile synthetic int <a class="d" name="compare" href="/source/s?defs=compare">compare</a> (java.lang.Object, java.lang.Object) 
		Object x0
		Object x1
}
</pre><br/><b>org/apache/http/cookie/CookieSpecFactory.class</b><pre><a href="/source/s?path=CookieSpecFactory.java">CookieSpecFactory.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.CookieSpecFactory" href="/source/s?defs=org.apache.http.cookie.CookieSpecFactory">org.apache.http.cookie.CookieSpecFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.cookie.CookieSpec <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
}
</pre><br/><b>org/apache/http/cookie/CookieSpecRegistry.class</b><pre><a href="/source/s?path=CookieSpecRegistry.java">CookieSpecRegistry.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public final <a class="d" name="org.apache.http.cookie.CookieSpecRegistry" href="/source/s?defs=org.apache.http.cookie.CookieSpecRegistry">org.apache.http.cookie.CookieSpecRegistry</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.concurrent.ConcurrentHashMap <a class="d" name="registeredSpecs" href="/source/s?defs=registeredSpecs">registeredSpecs</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="register" href="/source/s?defs=register">register</a> (java.lang.String, org.apache.http.cookie.CookieSpecFactory) 
		String name
		org.apache.http.cookie.CookieSpecFactory factory
	public void <a class="d" name="unregister" href="/source/s?defs=unregister">unregister</a> (java.lang.String) 
		String id
	public org.apache.http.cookie.CookieSpec <a class="d" name="getCookieSpec" href="/source/s?defs=getCookieSpec">getCookieSpec</a> (java.lang.String, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
		String name
		org.apache.http.params.HttpParams params
		org.apache.http.cookie.CookieSpecFactory factory
	public org.apache.http.cookie.CookieSpec <a class="d" name="getCookieSpec" href="/source/s?defs=getCookieSpec">getCookieSpec</a> (java.lang.String)  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
		String name
	public java.util.List <a class="d" name="getSpecNames" href="/source/s?defs=getSpecNames">getSpecNames</a> () 
	public void <a class="d" name="setItems" href="/source/s?defs=setItems">setItems</a> (java.util.Map) 
		java.util.Map map
}
</pre><br/><b>org/apache/http/cookie/SetCookie.class</b><pre><a href="/source/s?path=SetCookie.java">SetCookie.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.SetCookie" href="/source/s?defs=org.apache.http.cookie.SetCookie">org.apache.http.cookie.SetCookie</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.Cookie">org.apache.http.cookie.Cookie</a>  {
	public abstract void <a class="d" name="setValue" href="/source/s?defs=setValue">setValue</a> (java.lang.String) 
	public abstract void <a class="d" name="setComment" href="/source/s?defs=setComment">setComment</a> (java.lang.String) 
	public abstract void <a class="d" name="setExpiryDate" href="/source/s?defs=setExpiryDate">setExpiryDate</a> (java.util.Date) 
	public abstract void <a class="d" name="setDomain" href="/source/s?defs=setDomain">setDomain</a> (java.lang.String) 
	public abstract void <a class="d" name="setPath" href="/source/s?defs=setPath">setPath</a> (java.lang.String) 
	public abstract void <a class="d" name="setSecure" href="/source/s?defs=setSecure">setSecure</a> (boolean) 
	public abstract void <a class="d" name="setVersion" href="/source/s?defs=setVersion">setVersion</a> (int) 
}
</pre><br/><b>org/apache/http/cookie/CookieOrigin.class</b><pre><a href="/source/s?path=CookieOrigin.java">CookieOrigin.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public final <a class="d" name="org.apache.http.cookie.CookieOrigin" href="/source/s?defs=org.apache.http.cookie.CookieOrigin">org.apache.http.cookie.CookieOrigin</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final String <a class="d" name="host" href="/source/s?defs=host">host</a>
	private final int <a class="d" name="port" href="/source/s?defs=port">port</a>
	private final String <a class="d" name="path" href="/source/s?defs=path">path</a>
	private final boolean <a class="d" name="secure" href="/source/s?defs=secure">secure</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, java.lang.String, boolean) 
		String host
		int port
		String path
		boolean secure
	public java.lang.String <a class="d" name="getHost" href="/source/s?defs=getHost">getHost</a> () 
	public java.lang.String <a class="d" name="getPath" href="/source/s?defs=getPath">getPath</a> () 
	public int <a class="d" name="getPort" href="/source/s?defs=getPort">getPort</a> () 
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/cookie/CookieRestrictionViolationException.class</b><pre><a href="/source/s?path=CookieRestrictionViolationException.java">CookieRestrictionViolationException.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public <a class="d" name="org.apache.http.cookie.CookieRestrictionViolationException" href="/source/s?defs=org.apache.http.cookie.CookieRestrictionViolationException">org.apache.http.cookie.CookieRestrictionViolationException</a> extends <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/cookie/CookieSpec.class</b><pre><a href="/source/s?path=CookieSpec.java">CookieSpec.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.CookieSpec" href="/source/s?defs=org.apache.http.cookie.CookieSpec">org.apache.http.cookie.CookieSpec</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public abstract java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.Header, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
	public abstract void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
	public abstract boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
	public abstract java.util.List <a class="d" name="formatCookies" href="/source/s?defs=formatCookies">formatCookies</a> (java.util.List) 
	public abstract org.apache.http.Header <a class="d" name="getVersionHeader" href="/source/s?defs=getVersionHeader">getVersionHeader</a> () 
}
</pre><br/><b>org/apache/http/cookie/SetCookie2.class</b><pre><a href="/source/s?path=SetCookie2.java">SetCookie2.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.SetCookie2" href="/source/s?defs=org.apache.http.cookie.SetCookie2">org.apache.http.cookie.SetCookie2</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.SetCookie">org.apache.http.cookie.SetCookie</a>  {
	public abstract void <a class="d" name="setCommentURL" href="/source/s?defs=setCommentURL">setCommentURL</a> (java.lang.String) 
	public abstract void <a class="d" name="setPorts" href="/source/s?defs=setPorts">setPorts</a> (int[]) 
	public abstract void <a class="d" name="setDiscard" href="/source/s?defs=setDiscard">setDiscard</a> (boolean) 
}
</pre><br/><b>org/apache/http/cookie/CookieAttributeHandler.class</b><pre><a href="/source/s?path=CookieAttributeHandler.java">CookieAttributeHandler.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.CookieAttributeHandler" href="/source/s?defs=org.apache.http.cookie.CookieAttributeHandler">org.apache.http.cookie.CookieAttributeHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.cookie.SetCookie, java.lang.String)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
	public abstract void <a class="d" name="validate" href="/source/s?defs=validate">validate</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)  throws <a href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> 
	public abstract boolean <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) 
}
</pre><br/><b>org/apache/http/cookie/params/CookieSpecParamBean.class</b><pre><a href="/source/s?path=CookieSpecParamBean.java">CookieSpecParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.cookie.params">org.apache.http.cookie.params</a>
public <a class="d" name="org.apache.http.cookie.params.CookieSpecParamBean" href="/source/s?defs=org.apache.http.cookie.params.CookieSpecParamBean">org.apache.http.cookie.params.CookieSpecParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setDatePatterns" href="/source/s?defs=setDatePatterns">setDatePatterns</a> (java.util.Collection) 
		java.util.Collection patterns
	public void <a class="d" name="setSingleHeader" href="/source/s?defs=setSingleHeader">setSingleHeader</a> (boolean) 
		boolean singleHeader
}
</pre><br/><b>org/apache/http/cookie/params/CookieSpecPNames.class</b><pre><a href="/source/s?path=CookieSpecPNames.java">CookieSpecPNames.java</a>
package <a href="/source/s?defs=org.apache.http.cookie.params">org.apache.http.cookie.params</a>
public abstract <a class="d" name="org.apache.http.cookie.params.CookieSpecPNames" href="/source/s?defs=org.apache.http.cookie.params.CookieSpecPNames">org.apache.http.cookie.params.CookieSpecPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="DATE_PATTERNS" href="/source/s?defs=DATE_PATTERNS">DATE_PATTERNS</a>
	public static final String <a class="d" name="SINGLE_COOKIE_HEADER" href="/source/s?defs=SINGLE_COOKIE_HEADER">SINGLE_COOKIE_HEADER</a>
}
</pre><br/><b>org/apache/http/cookie/ClientCookie.class</b><pre><a href="/source/s?path=ClientCookie.java">ClientCookie.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.ClientCookie" href="/source/s?defs=org.apache.http.cookie.ClientCookie">org.apache.http.cookie.ClientCookie</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.cookie.Cookie">org.apache.http.cookie.Cookie</a>  {
	public static final String <a class="d" name="VERSION_ATTR" href="/source/s?defs=VERSION_ATTR">VERSION_ATTR</a>
	public static final String <a class="d" name="PATH_ATTR" href="/source/s?defs=PATH_ATTR">PATH_ATTR</a>
	public static final String <a class="d" name="DOMAIN_ATTR" href="/source/s?defs=DOMAIN_ATTR">DOMAIN_ATTR</a>
	public static final String <a class="d" name="MAX_AGE_ATTR" href="/source/s?defs=MAX_AGE_ATTR">MAX_AGE_ATTR</a>
	public static final String <a class="d" name="SECURE_ATTR" href="/source/s?defs=SECURE_ATTR">SECURE_ATTR</a>
	public static final String <a class="d" name="COMMENT_ATTR" href="/source/s?defs=COMMENT_ATTR">COMMENT_ATTR</a>
	public static final String <a class="d" name="EXPIRES_ATTR" href="/source/s?defs=EXPIRES_ATTR">EXPIRES_ATTR</a>
	public static final String <a class="d" name="PORT_ATTR" href="/source/s?defs=PORT_ATTR">PORT_ATTR</a>
	public static final String <a class="d" name="COMMENTURL_ATTR" href="/source/s?defs=COMMENTURL_ATTR">COMMENTURL_ATTR</a>
	public static final String <a class="d" name="DISCARD_ATTR" href="/source/s?defs=DISCARD_ATTR">DISCARD_ATTR</a>
	public abstract java.lang.String <a class="d" name="getAttribute" href="/source/s?defs=getAttribute">getAttribute</a> (java.lang.String) 
	public abstract boolean <a class="d" name="containsAttribute" href="/source/s?defs=containsAttribute">containsAttribute</a> (java.lang.String) 
}
</pre><br/><b>org/apache/http/cookie/Cookie.class</b><pre><a href="/source/s?path=Cookie.java">Cookie.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public abstract <a class="d" name="org.apache.http.cookie.Cookie" href="/source/s?defs=org.apache.http.cookie.Cookie">org.apache.http.cookie.Cookie</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public abstract java.lang.String <a class="d" name="getValue" href="/source/s?defs=getValue">getValue</a> () 
	public abstract java.lang.String <a class="d" name="getComment" href="/source/s?defs=getComment">getComment</a> () 
	public abstract java.lang.String <a class="d" name="getCommentURL" href="/source/s?defs=getCommentURL">getCommentURL</a> () 
	public abstract java.util.Date <a class="d" name="getExpiryDate" href="/source/s?defs=getExpiryDate">getExpiryDate</a> () 
	public abstract boolean <a class="d" name="isPersistent" href="/source/s?defs=isPersistent">isPersistent</a> () 
	public abstract java.lang.String <a class="d" name="getDomain" href="/source/s?defs=getDomain">getDomain</a> () 
	public abstract java.lang.String <a class="d" name="getPath" href="/source/s?defs=getPath">getPath</a> () 
	public abstract int[] <a class="d" name="getPorts" href="/source/s?defs=getPorts">getPorts</a> () 
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public abstract int <a class="d" name="getVersion" href="/source/s?defs=getVersion">getVersion</a> () 
	public abstract boolean <a class="d" name="isExpired" href="/source/s?defs=isExpired">isExpired</a> (java.util.Date) 
}
</pre><br/><b>org/apache/http/cookie/MalformedCookieException.class</b><pre><a href="/source/s?path=MalformedCookieException.java">MalformedCookieException.java</a>
package <a href="/source/s?defs=org.apache.http.cookie">org.apache.http.cookie</a>
public <a class="d" name="org.apache.http.cookie.MalformedCookieException" href="/source/s?defs=org.apache.http.cookie.MalformedCookieException">org.apache.http.cookie.MalformedCookieException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/annotation/Immutable.class</b><pre><a href="/source/s?path=Immutable.java">Immutable.java</a>
package <a href="/source/s?defs=org.apache.http.annotation">org.apache.http.annotation</a>
public abstract annotation <a class="d" name="org.apache.http.annotation.Immutable" href="/source/s?defs=org.apache.http.annotation.Immutable">org.apache.http.annotation.Immutable</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.annotation.Annotation">java.lang.annotation.Annotation</a>  {
}
</pre><br/><b>org/apache/http/annotation/ThreadSafe.class</b><pre><a href="/source/s?path=ThreadSafe.java">ThreadSafe.java</a>
package <a href="/source/s?defs=org.apache.http.annotation">org.apache.http.annotation</a>
public abstract annotation <a class="d" name="org.apache.http.annotation.ThreadSafe" href="/source/s?defs=org.apache.http.annotation.ThreadSafe">org.apache.http.annotation.ThreadSafe</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.annotation.Annotation">java.lang.annotation.Annotation</a>  {
}
</pre><br/><b>org/apache/http/annotation/GuardedBy.class</b><pre><a href="/source/s?path=GuardedBy.java">GuardedBy.java</a>
package <a href="/source/s?defs=org.apache.http.annotation">org.apache.http.annotation</a>
public abstract annotation <a class="d" name="org.apache.http.annotation.GuardedBy" href="/source/s?defs=org.apache.http.annotation.GuardedBy">org.apache.http.annotation.GuardedBy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.annotation.Annotation">java.lang.annotation.Annotation</a>  {
	public abstract java.lang.String <a class="d" name="value" href="/source/s?defs=value">value</a> () 
}
</pre><br/><b>org/apache/http/annotation/NotThreadSafe.class</b><pre><a href="/source/s?path=NotThreadSafe.java">NotThreadSafe.java</a>
package <a href="/source/s?defs=org.apache.http.annotation">org.apache.http.annotation</a>
public abstract annotation <a class="d" name="org.apache.http.annotation.NotThreadSafe" href="/source/s?defs=org.apache.http.annotation.NotThreadSafe">org.apache.http.annotation.NotThreadSafe</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.lang.annotation.Annotation">java.lang.annotation.Annotation</a>  {
}
</pre><br/><b>org/apache/http/client/UserTokenHandler.class</b><pre><a href="/source/s?path=UserTokenHandler.java">UserTokenHandler.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.UserTokenHandler" href="/source/s?defs=org.apache.http.client.UserTokenHandler">org.apache.http.client.UserTokenHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.Object <a class="d" name="getUserToken" href="/source/s?defs=getUserToken">getUserToken</a> (org.apache.http.protocol.HttpContext) 
}
</pre><br/><b>org/apache/http/client/AuthenticationHandler.class</b><pre><a href="/source/s?path=AuthenticationHandler.java">AuthenticationHandler.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.AuthenticationHandler" href="/source/s?defs=org.apache.http.client.AuthenticationHandler">org.apache.http.client.AuthenticationHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isAuthenticationRequested" href="/source/s?defs=isAuthenticationRequested">isAuthenticationRequested</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
	public abstract java.util.Map <a class="d" name="getChallenges" href="/source/s?defs=getChallenges">getChallenges</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
	public abstract org.apache.http.auth.AuthScheme <a class="d" name="selectScheme" href="/source/s?defs=selectScheme">selectScheme</a> (java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
}
</pre><br/><b>org/apache/http/client/methods/HttpRequestBase.class</b><pre><a href="/source/s?path=HttpRequestBase.java">HttpRequestBase.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public abstract <a class="d" name="org.apache.http.client.methods.HttpRequestBase" href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> extends <a href="/source/s?defs=org.apache.http.message.AbstractHttpMessage">org.apache.http.message.AbstractHttpMessage</a> implements <a href="/source/s?defs=org.apache.http.client.methods.HttpUriRequest">org.apache.http.client.methods.HttpUriRequest</a> <a href="/source/s?defs=org.apache.http.client.methods.AbortableHttpRequest">org.apache.http.client.methods.AbortableHttpRequest</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private java.util.concurrent.locks.Lock <a class="d" name="abortLock" href="/source/s?defs=abortLock">abortLock</a>
	private boolean <a class="d" name="aborted" href="/source/s?defs=aborted">aborted</a>
	private java.net.URI <a class="d" name="uri" href="/source/s?defs=uri">uri</a>
	private org.apache.http.conn.ClientConnectionRequest <a class="d" name="connRequest" href="/source/s?defs=connRequest">connRequest</a>
	private org.apache.http.conn.ConnectionReleaseTrigger <a class="d" name="releaseTrigger" href="/source/s?defs=releaseTrigger">releaseTrigger</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public abstract java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public org.apache.http.ProtocolVersion <a class="d" name="getProtocolVersion" href="/source/s?defs=getProtocolVersion">getProtocolVersion</a> () 
	public java.net.URI <a class="d" name="getURI" href="/source/s?defs=getURI">getURI</a> () 
	public org.apache.http.RequestLine <a class="d" name="getRequestLine" href="/source/s?defs=getRequestLine">getRequestLine</a> () 
		String method
		org.apache.http.ProtocolVersion ver
		java.net.URI uri
		String uritext
	public void <a class="d" name="setURI" href="/source/s?defs=setURI">setURI</a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="setConnectionRequest" href="/source/s?defs=setConnectionRequest">setConnectionRequest</a> (org.apache.http.conn.ClientConnectionRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.ClientConnectionRequest connRequest
	public void <a class="d" name="setReleaseTrigger" href="/source/s?defs=setReleaseTrigger">setReleaseTrigger</a> (org.apache.http.conn.ConnectionReleaseTrigger)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.conn.ConnectionReleaseTrigger releaseTrigger
	public void <a class="d" name="abort" href="/source/s?defs=abort">abort</a> () 
		java.io.IOException ex
		org.apache.http.conn.ClientConnectionRequest localRequest
		org.apache.http.conn.ConnectionReleaseTrigger localTrigger
	public boolean <a class="d" name="isAborted" href="/source/s?defs=isAborted">isAborted</a> () 
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.client.methods.HttpRequestBase clone
}
</pre><br/><b>org/apache/http/client/methods/HttpEntityEnclosingRequestBase.class</b><pre><a href="/source/s?path=HttpEntityEnclosingRequestBase.java">HttpEntityEnclosingRequestBase.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public abstract <a class="d" name="org.apache.http.client.methods.HttpEntityEnclosingRequestBase" href="/source/s?defs=org.apache.http.client.methods.HttpEntityEnclosingRequestBase">org.apache.http.client.methods.HttpEntityEnclosingRequestBase</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> implements <a href="/source/s?defs=org.apache.http.HttpEntityEnclosingRequest">org.apache.http.HttpEntityEnclosingRequest</a>  {
	private org.apache.http.HttpEntity <a class="d" name="entity" href="/source/s?defs=entity">entity</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public org.apache.http.HttpEntity <a class="d" name="getEntity" href="/source/s?defs=getEntity">getEntity</a> () 
	public void <a class="d" name="setEntity" href="/source/s?defs=setEntity">setEntity</a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public boolean <a class="d" name="expectContinue" href="/source/s?defs=expectContinue">expectContinue</a> () 
		org.apache.http.Header expect
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		org.apache.http.client.methods.HttpEntityEnclosingRequestBase clone
}
</pre><br/><b>org/apache/http/client/methods/HttpOptions.class</b><pre><a href="/source/s?path=HttpOptions.java">HttpOptions.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpOptions" href="/source/s?defs=org.apache.http.client.methods.HttpOptions">org.apache.http.client.methods.HttpOptions</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public java.util.Set <a class="d" name="getAllowedMethods" href="/source/s?defs=getAllowedMethods">getAllowedMethods</a> (org.apache.http.HttpResponse) 
		org.apache.http.HeaderElement element
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.Header header
		org.apache.http.HeaderElement[] elements
		org.apache.http.HttpResponse response
		org.apache.http.HeaderIterator it
		java.util.Set methods
}
</pre><br/><b>org/apache/http/client/methods/HttpUriRequest.class</b><pre><a href="/source/s?path=HttpUriRequest.java">HttpUriRequest.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public abstract <a class="d" name="org.apache.http.client.methods.HttpUriRequest" href="/source/s?defs=org.apache.http.client.methods.HttpUriRequest">org.apache.http.client.methods.HttpUriRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequest">org.apache.http.HttpRequest</a>  {
	public abstract java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
	public abstract java.net.URI <a class="d" name="getURI" href="/source/s?defs=getURI">getURI</a> () 
	public abstract void <a class="d" name="abort" href="/source/s?defs=abort">abort</a> ()  throws <a href="/source/s?defs=java.lang.UnsupportedOperationException">java.lang.UnsupportedOperationException</a> 
	public abstract boolean <a class="d" name="isAborted" href="/source/s?defs=isAborted">isAborted</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpDelete.class</b><pre><a href="/source/s?path=HttpDelete.java">HttpDelete.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpDelete" href="/source/s?defs=org.apache.http.client.methods.HttpDelete">org.apache.http.client.methods.HttpDelete</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpPut.class</b><pre><a href="/source/s?path=HttpPut.java">HttpPut.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpPut" href="/source/s?defs=org.apache.http.client.methods.HttpPut">org.apache.http.client.methods.HttpPut</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpEntityEnclosingRequestBase">org.apache.http.client.methods.HttpEntityEnclosingRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpTrace.class</b><pre><a href="/source/s?path=HttpTrace.java">HttpTrace.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpTrace" href="/source/s?defs=org.apache.http.client.methods.HttpTrace">org.apache.http.client.methods.HttpTrace</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpPost.class</b><pre><a href="/source/s?path=HttpPost.java">HttpPost.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpPost" href="/source/s?defs=org.apache.http.client.methods.HttpPost">org.apache.http.client.methods.HttpPost</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpEntityEnclosingRequestBase">org.apache.http.client.methods.HttpEntityEnclosingRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpHead.class</b><pre><a href="/source/s?path=HttpHead.java">HttpHead.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpHead" href="/source/s?defs=org.apache.http.client.methods.HttpHead">org.apache.http.client.methods.HttpHead</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/methods/AbortableHttpRequest.class</b><pre><a href="/source/s?path=AbortableHttpRequest.java">AbortableHttpRequest.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public abstract <a class="d" name="org.apache.http.client.methods.AbortableHttpRequest" href="/source/s?defs=org.apache.http.client.methods.AbortableHttpRequest">org.apache.http.client.methods.AbortableHttpRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="setConnectionRequest" href="/source/s?defs=setConnectionRequest">setConnectionRequest</a> (org.apache.http.conn.ClientConnectionRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="setReleaseTrigger" href="/source/s?defs=setReleaseTrigger">setReleaseTrigger</a> (org.apache.http.conn.ConnectionReleaseTrigger)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="abort" href="/source/s?defs=abort">abort</a> () 
}
</pre><br/><b>org/apache/http/client/methods/HttpGet.class</b><pre><a href="/source/s?path=HttpGet.java">HttpGet.java</a>
package <a href="/source/s?defs=org.apache.http.client.methods">org.apache.http.client.methods</a>
public <a class="d" name="org.apache.http.client.methods.HttpGet" href="/source/s?defs=org.apache.http.client.methods.HttpGet">org.apache.http.client.methods.HttpGet</a> extends <a href="/source/s?defs=org.apache.http.client.methods.HttpRequestBase">org.apache.http.client.methods.HttpRequestBase</a> {
	public static final String <a class="d" name="METHOD_NAME" href="/source/s?defs=METHOD_NAME">METHOD_NAME</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.URI) 
		java.net.URI uri
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String uri
	public java.lang.String <a class="d" name="getMethod" href="/source/s?defs=getMethod">getMethod</a> () 
}
</pre><br/><b>org/apache/http/client/HttpResponseException.class</b><pre><a href="/source/s?path=HttpResponseException.java">HttpResponseException.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public <a class="d" name="org.apache.http.client.HttpResponseException" href="/source/s?defs=org.apache.http.client.HttpResponseException">org.apache.http.client.HttpResponseException</a> extends <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final int <a class="d" name="statusCode" href="/source/s?defs=statusCode">statusCode</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int, java.lang.String) 
		int statusCode
		String s
	public int <a class="d" name="getStatusCode" href="/source/s?defs=getStatusCode">getStatusCode</a> () 
}
</pre><br/><b>org/apache/http/client/ResponseHandler.class</b><pre><a href="/source/s?path=ResponseHandler.java">ResponseHandler.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.ResponseHandler" href="/source/s?defs=org.apache.http.client.ResponseHandler">org.apache.http.client.ResponseHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.Object <a class="d" name="handleResponse" href="/source/s?defs=handleResponse">handleResponse</a> (org.apache.http.HttpResponse)  throws <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/client/RedirectHandler.class</b><pre><a href="/source/s?path=RedirectHandler.java">RedirectHandler.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.RedirectHandler" href="/source/s?defs=org.apache.http.client.RedirectHandler">org.apache.http.client.RedirectHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isRedirectRequested" href="/source/s?defs=isRedirectRequested">isRedirectRequested</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
	public abstract java.net.URI <a class="d" name="getLocationURI" href="/source/s?defs=getLocationURI">getLocationURI</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
}
</pre><br/><b>org/apache/http/client/ClientProtocolException.class</b><pre><a href="/source/s?path=ClientProtocolException.java">ClientProtocolException.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public <a class="d" name="org.apache.http.client.ClientProtocolException" href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> extends <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String s
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.Throwable) 
		Throwable cause
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/client/CircularRedirectException.class</b><pre><a href="/source/s?path=CircularRedirectException.java">CircularRedirectException.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public <a class="d" name="org.apache.http.client.CircularRedirectException" href="/source/s?defs=org.apache.http.client.CircularRedirectException">org.apache.http.client.CircularRedirectException</a> extends <a href="/source/s?defs=org.apache.http.client.RedirectException">org.apache.http.client.RedirectException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/client/CookieStore.class</b><pre><a href="/source/s?path=CookieStore.java">CookieStore.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.CookieStore" href="/source/s?defs=org.apache.http.client.CookieStore">org.apache.http.client.CookieStore</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="addCookie" href="/source/s?defs=addCookie">addCookie</a> (org.apache.http.cookie.Cookie) 
	public abstract java.util.List <a class="d" name="getCookies" href="/source/s?defs=getCookies">getCookies</a> () 
	public abstract boolean <a class="d" name="clearExpired" href="/source/s?defs=clearExpired">clearExpired</a> (java.util.Date) 
	public abstract void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
}
</pre><br/><b>org/apache/http/client/RedirectStrategy.class</b><pre><a href="/source/s?path=RedirectStrategy.java">RedirectStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.RedirectStrategy" href="/source/s?defs=org.apache.http.client.RedirectStrategy">org.apache.http.client.RedirectStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isRedirected" href="/source/s?defs=isRedirected">isRedirected</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
	public abstract org.apache.http.client.methods.HttpUriRequest <a class="d" name="getRedirect" href="/source/s?defs=getRedirect">getRedirect</a> (org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> 
}
</pre><br/><b>org/apache/http/client/params/AuthPolicy.class</b><pre><a href="/source/s?path=AuthPolicy.java">AuthPolicy.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public final <a class="d" name="org.apache.http.client.params.AuthPolicy" href="/source/s?defs=org.apache.http.client.params.AuthPolicy">org.apache.http.client.params.AuthPolicy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="NTLM" href="/source/s?defs=NTLM">NTLM</a>
	public static final String <a class="d" name="DIGEST" href="/source/s?defs=DIGEST">DIGEST</a>
	public static final String <a class="d" name="BASIC" href="/source/s?defs=BASIC">BASIC</a>
	public static final String <a class="d" name="SPNEGO" href="/source/s?defs=SPNEGO">SPNEGO</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/client/params/ClientParamBean.class</b><pre><a href="/source/s?path=ClientParamBean.java">ClientParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public <a class="d" name="org.apache.http.client.params.ClientParamBean" href="/source/s?defs=org.apache.http.client.params.ClientParamBean">org.apache.http.client.params.ClientParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setConnectionManagerFactoryClassName" href="/source/s?defs=setConnectionManagerFactoryClassName">setConnectionManagerFactoryClassName</a> (java.lang.String) 
		String factory
	public void <a class="d" name="setConnectionManagerFactory" href="/source/s?defs=setConnectionManagerFactory">setConnectionManagerFactory</a> (org.apache.http.conn.ClientConnectionManagerFactory) 
		org.apache.http.conn.ClientConnectionManagerFactory factory
	public void <a class="d" name="setHandleRedirects" href="/source/s?defs=setHandleRedirects">setHandleRedirects</a> (boolean) 
		boolean handle
	public void <a class="d" name="setRejectRelativeRedirect" href="/source/s?defs=setRejectRelativeRedirect">setRejectRelativeRedirect</a> (boolean) 
		boolean reject
	public void <a class="d" name="setMaxRedirects" href="/source/s?defs=setMaxRedirects">setMaxRedirects</a> (int) 
		int maxRedirects
	public void <a class="d" name="setAllowCircularRedirects" href="/source/s?defs=setAllowCircularRedirects">setAllowCircularRedirects</a> (boolean) 
		boolean allow
	public void <a class="d" name="setHandleAuthentication" href="/source/s?defs=setHandleAuthentication">setHandleAuthentication</a> (boolean) 
		boolean handle
	public void <a class="d" name="setCookiePolicy" href="/source/s?defs=setCookiePolicy">setCookiePolicy</a> (java.lang.String) 
		String policy
	public void <a class="d" name="setVirtualHost" href="/source/s?defs=setVirtualHost">setVirtualHost</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost host
	public void <a class="d" name="setDefaultHeaders" href="/source/s?defs=setDefaultHeaders">setDefaultHeaders</a> (java.util.Collection) 
		java.util.Collection headers
	public void <a class="d" name="setDefaultHost" href="/source/s?defs=setDefaultHost">setDefaultHost</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost host
}
</pre><br/><b>org/apache/http/client/params/HttpClientParams.class</b><pre><a href="/source/s?path=HttpClientParams.java">HttpClientParams.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public <a class="d" name="org.apache.http.client.params.HttpClientParams" href="/source/s?defs=org.apache.http.client.params.HttpClientParams">org.apache.http.client.params.HttpClientParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static boolean <a class="d" name="isRedirecting" href="/source/s?defs=isRedirecting">isRedirecting</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setRedirecting" href="/source/s?defs=setRedirecting">setRedirecting</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean value
	public static boolean <a class="d" name="isAuthenticating" href="/source/s?defs=isAuthenticating">isAuthenticating</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setAuthenticating" href="/source/s?defs=setAuthenticating">setAuthenticating</a> (org.apache.http.params.HttpParams, boolean) 
		org.apache.http.params.HttpParams params
		boolean value
	public static java.lang.String <a class="d" name="getCookiePolicy" href="/source/s?defs=getCookiePolicy">getCookiePolicy</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		String cookiePolicy
	public static void <a class="d" name="setCookiePolicy" href="/source/s?defs=setCookiePolicy">setCookiePolicy</a> (org.apache.http.params.HttpParams, java.lang.String) 
		org.apache.http.params.HttpParams params
		String cookiePolicy
}
</pre><br/><b>org/apache/http/client/params/CookiePolicy.class</b><pre><a href="/source/s?path=CookiePolicy.java">CookiePolicy.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public final <a class="d" name="org.apache.http.client.params.CookiePolicy" href="/source/s?defs=org.apache.http.client.params.CookiePolicy">org.apache.http.client.params.CookiePolicy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="BROWSER_COMPATIBILITY" href="/source/s?defs=BROWSER_COMPATIBILITY">BROWSER_COMPATIBILITY</a>
	public static final String <a class="d" name="NETSCAPE" href="/source/s?defs=NETSCAPE">NETSCAPE</a>
	public static final String <a class="d" name="RFC_2109" href="/source/s?defs=RFC_2109">RFC_2109</a>
	public static final String <a class="d" name="RFC_2965" href="/source/s?defs=RFC_2965">RFC_2965</a>
	public static final String <a class="d" name="BEST_MATCH" href="/source/s?defs=BEST_MATCH">BEST_MATCH</a>
	public static final String <a class="d" name="IGNORE_COOKIES" href="/source/s?defs=IGNORE_COOKIES">IGNORE_COOKIES</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/client/params/AllClientPNames.class</b><pre><a href="/source/s?path=AllClientPNames.java">AllClientPNames.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public abstract <a class="d" name="org.apache.http.client.params.AllClientPNames" href="/source/s?defs=org.apache.http.client.params.AllClientPNames">org.apache.http.client.params.AllClientPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.params.CoreConnectionPNames">org.apache.http.params.CoreConnectionPNames</a> <a href="/source/s?defs=org.apache.http.params.CoreProtocolPNames">org.apache.http.params.CoreProtocolPNames</a> <a href="/source/s?defs=org.apache.http.client.params.ClientPNames">org.apache.http.client.params.ClientPNames</a> <a href="/source/s?defs=org.apache.http.auth.params.AuthPNames">org.apache.http.auth.params.AuthPNames</a> <a href="/source/s?defs=org.apache.http.cookie.params.CookieSpecPNames">org.apache.http.cookie.params.CookieSpecPNames</a> <a href="/source/s?defs=org.apache.http.conn.params.ConnConnectionPNames">org.apache.http.conn.params.ConnConnectionPNames</a> <a href="/source/s?defs=org.apache.http.conn.params.ConnManagerPNames">org.apache.http.conn.params.ConnManagerPNames</a> <a href="/source/s?defs=org.apache.http.conn.params.ConnRoutePNames">org.apache.http.conn.params.ConnRoutePNames</a>  {
}
</pre><br/><b>org/apache/http/client/params/ClientPNames.class</b><pre><a href="/source/s?path=ClientPNames.java">ClientPNames.java</a>
package <a href="/source/s?defs=org.apache.http.client.params">org.apache.http.client.params</a>
public abstract <a class="d" name="org.apache.http.client.params.ClientPNames" href="/source/s?defs=org.apache.http.client.params.ClientPNames">org.apache.http.client.params.ClientPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="CONNECTION_MANAGER_FACTORY_CLASS_NAME" href="/source/s?defs=CONNECTION_MANAGER_FACTORY_CLASS_NAME">CONNECTION_MANAGER_FACTORY_CLASS_NAME</a>
	public static final String <a class="d" name="CONNECTION_MANAGER_FACTORY" href="/source/s?defs=CONNECTION_MANAGER_FACTORY">CONNECTION_MANAGER_FACTORY</a>
	public static final String <a class="d" name="HANDLE_REDIRECTS" href="/source/s?defs=HANDLE_REDIRECTS">HANDLE_REDIRECTS</a>
	public static final String <a class="d" name="REJECT_RELATIVE_REDIRECT" href="/source/s?defs=REJECT_RELATIVE_REDIRECT">REJECT_RELATIVE_REDIRECT</a>
	public static final String <a class="d" name="MAX_REDIRECTS" href="/source/s?defs=MAX_REDIRECTS">MAX_REDIRECTS</a>
	public static final String <a class="d" name="ALLOW_CIRCULAR_REDIRECTS" href="/source/s?defs=ALLOW_CIRCULAR_REDIRECTS">ALLOW_CIRCULAR_REDIRECTS</a>
	public static final String <a class="d" name="HANDLE_AUTHENTICATION" href="/source/s?defs=HANDLE_AUTHENTICATION">HANDLE_AUTHENTICATION</a>
	public static final String <a class="d" name="COOKIE_POLICY" href="/source/s?defs=COOKIE_POLICY">COOKIE_POLICY</a>
	public static final String <a class="d" name="VIRTUAL_HOST" href="/source/s?defs=VIRTUAL_HOST">VIRTUAL_HOST</a>
	public static final String <a class="d" name="DEFAULT_HEADERS" href="/source/s?defs=DEFAULT_HEADERS">DEFAULT_HEADERS</a>
	public static final String <a class="d" name="DEFAULT_HOST" href="/source/s?defs=DEFAULT_HOST">DEFAULT_HOST</a>
}
</pre><br/><b>org/apache/http/client/HttpClient.class</b><pre><a href="/source/s?path=HttpClient.java">HttpClient.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.HttpClient" href="/source/s?defs=org.apache.http.client.HttpClient">org.apache.http.client.HttpClient</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.params.HttpParams <a class="d" name="getParams" href="/source/s?defs=getParams">getParams</a> () 
	public abstract org.apache.http.conn.ClientConnectionManager <a class="d" name="getConnectionManager" href="/source/s?defs=getConnectionManager">getConnectionManager</a> () 
	public abstract org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
	public abstract java.lang.Object <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.client.ClientProtocolException">org.apache.http.client.ClientProtocolException</a> 
}
</pre><br/><b>org/apache/http/client/utils/Punycode.class</b><pre><a href="/source/s?path=Punycode.java">Punycode.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.Punycode" href="/source/s?defs=org.apache.http.client.utils.Punycode">org.apache.http.client.utils.Punycode</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final org.apache.http.client.utils.Idn <a class="d" name="impl" href="/source/s?defs=impl">impl</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static java.lang.String <a class="d" name="toUnicode" href="/source/s?defs=toUnicode">toUnicode</a> (java.lang.String) 
		String punycode
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
		Exception e
		org.apache.http.client.utils.Idn _impl
}
</pre><br/><b>org/apache/http/client/utils/URLEncodedUtils.class</b><pre><a href="/source/s?path=URLEncodedUtils.java">URLEncodedUtils.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.URLEncodedUtils" href="/source/s?defs=org.apache.http.client.utils.URLEncodedUtils">org.apache.http.client.utils.URLEncodedUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="CONTENT_TYPE" href="/source/s?defs=CONTENT_TYPE">CONTENT_TYPE</a>
	private static final String <a class="d" name="PARAMETER_SEPARATOR" href="/source/s?defs=PARAMETER_SEPARATOR">PARAMETER_SEPARATOR</a>
	private static final String <a class="d" name="NAME_VALUE_SEPARATOR" href="/source/s?defs=NAME_VALUE_SEPARATOR">NAME_VALUE_SEPARATOR</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (java.net.URI, java.lang.String) 
		java.net.URI uri
		String encoding
		java.util.List result
		String query
	public static java.util.List <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (org.apache.http.HttpEntity)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HeaderElement elem
		org.apache.http.NameValuePair param
		org.apache.http.HeaderElement[] elems
		String content
		org.apache.http.HttpEntity entity
		java.util.List result
		String contentType
		String charset
		org.apache.http.Header h
	public static boolean <a class="d" name="isEncoded" href="/source/s?defs=isEncoded">isEncoded</a> (org.apache.http.HttpEntity) 
		String contentType
		org.apache.http.HeaderElement[] elems
		org.apache.http.HttpEntity entity
		org.apache.http.Header h
	public static void <a class="d" name="parse" href="/source/s?defs=parse">parse</a> (java.util.List, java.util.Scanner, java.lang.String) 
		String[] nameValue
		String name
		String value
		java.util.List parameters
		java.util.Scanner scanner
		String encoding
	public static java.lang.String <a class="d" name="format" href="/source/s?defs=format">format</a> (java.util.List, java.lang.String) 
		String encodedName
		String value
		String encodedValue
		org.apache.http.NameValuePair parameter
		java.util.Iterator i$
		java.util.List parameters
		String encoding
		StringBuilder result
	private static java.lang.String <a class="d" name="decode" href="/source/s?defs=decode">decode</a> (java.lang.String, java.lang.String) 
		java.io.UnsupportedEncodingException problem
		String content
		String encoding
	private static java.lang.String <a class="d" name="encode" href="/source/s?defs=encode">encode</a> (java.lang.String, java.lang.String) 
		java.io.UnsupportedEncodingException problem
		String content
		String encoding
}
</pre><br/><b>org/apache/http/client/utils/CloneUtils.class</b><pre><a href="/source/s?path=CloneUtils.java">CloneUtils.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.CloneUtils" href="/source/s?defs=org.apache.http.client.utils.CloneUtils">org.apache.http.client.utils.CloneUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> (java.lang.Object)  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
		NoSuchMethodException ex
		Throwable cause
		java.lang.reflect.InvocationTargetException ex
		IllegalAccessException ex
		Class clazz
		java.lang.reflect.Method m
		Object obj
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/client/utils/Idn.class</b><pre><a href="/source/s?path=Idn.java">Idn.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public abstract <a class="d" name="org.apache.http.client.utils.Idn" href="/source/s?defs=org.apache.http.client.utils.Idn">org.apache.http.client.utils.Idn</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.lang.String <a class="d" name="toUnicode" href="/source/s?defs=toUnicode">toUnicode</a> (java.lang.String) 
}
</pre><br/><b>org/apache/http/client/utils/JdkIdn.class</b><pre><a href="/source/s?path=JdkIdn.java">JdkIdn.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.JdkIdn" href="/source/s?defs=org.apache.http.client.utils.JdkIdn">org.apache.http.client.utils.JdkIdn</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.utils.Idn">org.apache.http.client.utils.Idn</a>  {
	private final java.lang.reflect.Method <a class="d" name="toUnicode" href="/source/s?defs=toUnicode">toUnicode</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> ()  throws <a href="/source/s?defs=java.lang.ClassNotFoundException">java.lang.ClassNotFoundException</a> 
		SecurityException e
		NoSuchMethodException e
		Class clazz
	public java.lang.String <a class="d" name="toUnicode" href="/source/s?defs=toUnicode">toUnicode</a> (java.lang.String) 
		IllegalAccessException e
		Throwable t
		java.lang.reflect.InvocationTargetException e
		String punycode
}
</pre><br/><b>org/apache/http/client/utils/Rfc3492Idn.class</b><pre><a href="/source/s?path=Rfc3492Idn.java">Rfc3492Idn.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.Rfc3492Idn" href="/source/s?defs=org.apache.http.client.utils.Rfc3492Idn">org.apache.http.client.utils.Rfc3492Idn</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.utils.Idn">org.apache.http.client.utils.Idn</a>  {
	private static final int <a class="d" name="base" href="/source/s?defs=base">base</a>
	private static final int <a class="d" name="tmin" href="/source/s?defs=tmin">tmin</a>
	private static final int <a class="d" name="tmax" href="/source/s?defs=tmax">tmax</a>
	private static final int <a class="d" name="skew" href="/source/s?defs=skew">skew</a>
	private static final int <a class="d" name="damp" href="/source/s?defs=damp">damp</a>
	private static final int <a class="d" name="initial_bias" href="/source/s?defs=initial_bias">initial_bias</a>
	private static final int <a class="d" name="initial_n" href="/source/s?defs=initial_n">initial_n</a>
	private static final char <a class="d" name="delimiter" href="/source/s?defs=delimiter">delimiter</a>
	private static final String <a class="d" name="ACE_PREFIX" href="/source/s?defs=ACE_PREFIX">ACE_PREFIX</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	private int <a class="d" name="adapt" href="/source/s?defs=adapt">adapt</a> (int, int, boolean) 
		int delta
		int numpoints
		boolean firsttime
		int k
	private int <a class="d" name="digit" href="/source/s?defs=digit">digit</a> (char) 
		char c
	public java.lang.String <a class="d" name="toUnicode" href="/source/s?defs=toUnicode">toUnicode</a> (java.lang.String) 
		String t
		String punycode
		StringBuilder unicode
		java.util.StringTokenizer tok
	protected java.lang.String <a class="d" name="decode" href="/source/s?defs=decode">decode</a> (java.lang.String) 
		int t
		int t
		char c
		int digit
		int t
		int k
		int oldi
		int w
		String input
		int n
		int i
		int bias
		StringBuilder output
		int lastdelim
}
</pre><br/><b>org/apache/http/client/utils/URIUtils.class</b><pre><a href="/source/s?path=URIUtils.java">URIUtils.java</a>
package <a href="/source/s?defs=org.apache.http.client.utils">org.apache.http.client.utils</a>
public <a class="d" name="org.apache.http.client.utils.URIUtils" href="/source/s?defs=org.apache.http.client.utils.URIUtils">org.apache.http.client.utils.URIUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static java.net.URI <a class="d" name="createURI" href="/source/s?defs=createURI">createURI</a> (java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)  throws <a href="/source/s?defs=java.net.URISyntaxException">java.net.URISyntaxException</a> 
		String scheme
		String host
		int port
		String path
		String query
		String fragment
		StringBuilder buffer
	public static java.net.URI <a class="d" name="rewriteURI" href="/source/s?defs=rewriteURI">rewriteURI</a> (java.net.URI, org.apache.http.HttpHost, boolean)  throws <a href="/source/s?defs=java.net.URISyntaxException">java.net.URISyntaxException</a> 
		java.net.URI uri
		org.apache.http.HttpHost target
		boolean dropFragment
	private static java.lang.String <a class="d" name="normalizePath" href="/source/s?defs=normalizePath">normalizePath</a> (java.lang.String) 
		String path
		int n
	public static java.net.URI <a class="d" name="rewriteURI" href="/source/s?defs=rewriteURI">rewriteURI</a> (java.net.URI, org.apache.http.HttpHost)  throws <a href="/source/s?defs=java.net.URISyntaxException">java.net.URISyntaxException</a> 
		java.net.URI uri
		org.apache.http.HttpHost target
	public static java.net.URI <a class="d" name="resolve" href="/source/s?defs=resolve">resolve</a> (java.net.URI, java.lang.String) 
		java.net.URI baseURI
		String reference
	public static java.net.URI <a class="d" name="resolve" href="/source/s?defs=resolve">resolve</a> (java.net.URI, java.net.URI) 
		String resolvedString
		java.net.URI baseURI
		java.net.URI reference
		String s
		boolean emptyReference
		java.net.URI resolved
	private static java.net.URI <a class="d" name="resolveReferenceStartingWithQueryString" href="/source/s?defs=resolveReferenceStartingWithQueryString">resolveReferenceStartingWithQueryString</a> (java.net.URI, java.net.URI) 
		java.net.URI baseURI
		java.net.URI reference
		String baseUri
	private static java.net.URI <a class="d" name="removeDotSegments" href="/source/s?defs=removeDotSegments">removeDotSegments</a> (java.net.URI) 
		int i
		String outputSegment
		java.util.Iterator i$
		java.net.URISyntaxException e
		java.net.URI uri
		String path
		String[] inputSegments
		java.util.Stack outputSegments
		StringBuilder outputBuffer
	public static org.apache.http.HttpHost <a class="d" name="extractHost" href="/source/s?defs=extractHost">extractHost</a> (java.net.URI) 
		int colon
		int at
		int port
		String host
		String scheme
		java.net.URI uri
		org.apache.http.HttpHost target
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/client/version.properties</b><br/><b>org/apache/http/client/protocol/ResponseContentEncoding.class</b><pre><a href="/source/s?path=ResponseContentEncoding.java">ResponseContentEncoding.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.ResponseContentEncoding" href="/source/s?defs=org.apache.http.client.protocol.ResponseContentEncoding">org.apache.http.client.protocol.ResponseContentEncoding</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		String codecname
		org.apache.http.HeaderElement codec
		org.apache.http.HeaderElement[] arr$
		int len$
		int i$
		org.apache.http.HeaderElement[] codecs
		org.apache.http.Header ceheader
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.HttpEntity entity
}
</pre><br/><b>org/apache/http/client/protocol/RequestProxyAuthentication.class</b><pre><a href="/source/s?path=RequestProxyAuthentication.java">RequestProxyAuthentication.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestProxyAuthentication" href="/source/s?defs=org.apache.http.client.protocol.RequestProxyAuthentication">org.apache.http.client.protocol.RequestProxyAuthentication</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.Header header
		org.apache.http.Header header
		org.apache.http.auth.AuthenticationException ex
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.conn.HttpRoutedConnection conn
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.auth.AuthState authState
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.auth.Credentials creds
}
</pre><br/><b>org/apache/http/client/protocol/RequestTargetAuthentication.class</b><pre><a href="/source/s?path=RequestTargetAuthentication.java">RequestTargetAuthentication.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestTargetAuthentication" href="/source/s?defs=org.apache.http.client.protocol.RequestTargetAuthentication">org.apache.http.client.protocol.RequestTargetAuthentication</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.Header header
		org.apache.http.Header header
		org.apache.http.auth.AuthenticationException ex
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		String method
		org.apache.http.auth.AuthState authState
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.auth.Credentials creds
}
</pre><br/><b>org/apache/http/client/protocol/RequestAcceptEncoding.class</b><pre><a href="/source/s?path=RequestAcceptEncoding.java">RequestAcceptEncoding.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestAcceptEncoding" href="/source/s?defs=org.apache.http.client.protocol.RequestAcceptEncoding">org.apache.http.client.protocol.RequestAcceptEncoding</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
}
</pre><br/><b>org/apache/http/client/protocol/ResponseProcessCookies.class</b><pre><a href="/source/s?path=ResponseProcessCookies.java">ResponseProcessCookies.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.ResponseProcessCookies" href="/source/s?defs=org.apache.http.client.protocol.ResponseProcessCookies">org.apache.http.client.protocol.ResponseProcessCookies</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.cookie.CookieSpec cookieSpec
		org.apache.http.client.CookieStore cookieStore
		org.apache.http.cookie.CookieOrigin cookieOrigin
		org.apache.http.HeaderIterator it
	private void <a class="d" name="processCookies" href="/source/s?defs=processCookies">processCookies</a> (org.apache.http.HeaderIterator, org.apache.http.cookie.CookieSpec, org.apache.http.cookie.CookieOrigin, org.apache.http.client.CookieStore) 
		org.apache.http.cookie.MalformedCookieException ex
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		java.util.List cookies
		org.apache.http.cookie.MalformedCookieException ex
		org.apache.http.Header header
		org.apache.http.HeaderIterator iterator
		org.apache.http.cookie.CookieSpec cookieSpec
		org.apache.http.cookie.CookieOrigin cookieOrigin
		org.apache.http.client.CookieStore cookieStore
}
</pre><br/><b>org/apache/http/client/protocol/RequestAddCookies.class</b><pre><a href="/source/s?path=RequestAddCookies.java">RequestAddCookies.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestAddCookies" href="/source/s?defs=org.apache.http.client.protocol.RequestAddCookies">org.apache.http.client.protocol.RequestAddCookies</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.URI requestURI
		java.net.URISyntaxException ex
		String scheme
		org.apache.http.conn.routing.HttpRoute route
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		org.apache.http.Header header
		java.util.Iterator i$
		java.util.List headers
		org.apache.http.cookie.Cookie cookie
		java.util.Iterator i$
		org.apache.http.Header header
		boolean needVersionHeader
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		String method
		org.apache.http.client.CookieStore cookieStore
		org.apache.http.cookie.CookieSpecRegistry registry
		org.apache.http.HttpHost targetHost
		org.apache.http.conn.HttpRoutedConnection conn
		String policy
		java.net.URI requestURI
		String hostName
		int port
		org.apache.http.cookie.CookieOrigin cookieOrigin
		org.apache.http.cookie.CookieSpec cookieSpec
		java.util.List cookies
		java.util.List matchedCookies
		java.util.Date now
		int ver
}
</pre><br/><b>org/apache/http/client/protocol/ClientContext.class</b><pre><a href="/source/s?path=ClientContext.java">ClientContext.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public abstract <a class="d" name="org.apache.http.client.protocol.ClientContext" href="/source/s?defs=org.apache.http.client.protocol.ClientContext">org.apache.http.client.protocol.ClientContext</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="SCHEME_REGISTRY" href="/source/s?defs=SCHEME_REGISTRY">SCHEME_REGISTRY</a>
	public static final String <a class="d" name="COOKIESPEC_REGISTRY" href="/source/s?defs=COOKIESPEC_REGISTRY">COOKIESPEC_REGISTRY</a>
	public static final String <a class="d" name="COOKIE_SPEC" href="/source/s?defs=COOKIE_SPEC">COOKIE_SPEC</a>
	public static final String <a class="d" name="COOKIE_ORIGIN" href="/source/s?defs=COOKIE_ORIGIN">COOKIE_ORIGIN</a>
	public static final String <a class="d" name="COOKIE_STORE" href="/source/s?defs=COOKIE_STORE">COOKIE_STORE</a>
	public static final String <a class="d" name="AUTHSCHEME_REGISTRY" href="/source/s?defs=AUTHSCHEME_REGISTRY">AUTHSCHEME_REGISTRY</a>
	public static final String <a class="d" name="CREDS_PROVIDER" href="/source/s?defs=CREDS_PROVIDER">CREDS_PROVIDER</a>
	public static final String <a class="d" name="AUTH_CACHE" href="/source/s?defs=AUTH_CACHE">AUTH_CACHE</a>
	public static final String <a class="d" name="TARGET_AUTH_STATE" href="/source/s?defs=TARGET_AUTH_STATE">TARGET_AUTH_STATE</a>
	public static final String <a class="d" name="PROXY_AUTH_STATE" href="/source/s?defs=PROXY_AUTH_STATE">PROXY_AUTH_STATE</a>
	public static final String <a class="d" name="AUTH_SCHEME_PREF" href="/source/s?defs=AUTH_SCHEME_PREF">AUTH_SCHEME_PREF</a>
	public static final String <a class="d" name="USER_TOKEN" href="/source/s?defs=USER_TOKEN">USER_TOKEN</a>
}
</pre><br/><b>org/apache/http/client/protocol/ResponseAuthCache.class</b><pre><a href="/source/s?path=ResponseAuthCache.java">ResponseAuthCache.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.ResponseAuthCache" href="/source/s?defs=org.apache.http.client.protocol.ResponseAuthCache">org.apache.http.client.protocol.ResponseAuthCache</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpResponseInterceptor">org.apache.http.HttpResponseInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpResponse response
		org.apache.http.protocol.HttpContext context
		org.apache.http.client.AuthCache authCache
		org.apache.http.HttpHost target
		org.apache.http.auth.AuthState targetState
		org.apache.http.HttpHost proxy
		org.apache.http.auth.AuthState proxyState
	private boolean <a class="d" name="isCachable" href="/source/s?defs=isCachable">isCachable</a> (org.apache.http.auth.AuthState) 
		org.apache.http.auth.AuthState authState
		org.apache.http.auth.AuthScheme authScheme
		String schemeName
	private void <a class="d" name="cache" href="/source/s?defs=cache">cache</a> (org.apache.http.client.AuthCache, org.apache.http.HttpHost, org.apache.http.auth.AuthState) 
		org.apache.http.client.AuthCache authCache
		org.apache.http.HttpHost host
		org.apache.http.auth.AuthState authState
		org.apache.http.auth.AuthScheme authScheme
}
</pre><br/><b>org/apache/http/client/protocol/ClientContextConfigurer.class</b><pre><a href="/source/s?path=ClientContextConfigurer.java">ClientContextConfigurer.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.ClientContextConfigurer" href="/source/s?defs=org.apache.http.client.protocol.ClientContextConfigurer">org.apache.http.client.protocol.ClientContextConfigurer</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.client.protocol.ClientContext">org.apache.http.client.protocol.ClientContext</a>  {
	private final org.apache.http.protocol.HttpContext <a class="d" name="context" href="/source/s?defs=context">context</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.protocol.HttpContext) 
		org.apache.http.protocol.HttpContext context
	public void <a class="d" name="setCookieSpecRegistry" href="/source/s?defs=setCookieSpecRegistry">setCookieSpecRegistry</a> (org.apache.http.cookie.CookieSpecRegistry) 
		org.apache.http.cookie.CookieSpecRegistry registry
	public void <a class="d" name="setAuthSchemeRegistry" href="/source/s?defs=setAuthSchemeRegistry">setAuthSchemeRegistry</a> (org.apache.http.auth.AuthSchemeRegistry) 
		org.apache.http.auth.AuthSchemeRegistry registry
	public void <a class="d" name="setCookieStore" href="/source/s?defs=setCookieStore">setCookieStore</a> (org.apache.http.client.CookieStore) 
		org.apache.http.client.CookieStore store
	public void <a class="d" name="setCredentialsProvider" href="/source/s?defs=setCredentialsProvider">setCredentialsProvider</a> (org.apache.http.client.CredentialsProvider) 
		org.apache.http.client.CredentialsProvider provider
	public void <a class="d" name="setAuthSchemePref" href="/source/s?defs=setAuthSchemePref">setAuthSchemePref</a> (java.util.List) 
		java.util.List list
}
</pre><br/><b>org/apache/http/client/protocol/RequestDefaultHeaders.class</b><pre><a href="/source/s?path=RequestDefaultHeaders.java">RequestDefaultHeaders.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestDefaultHeaders" href="/source/s?defs=org.apache.http.client.protocol.RequestDefaultHeaders">org.apache.http.client.protocol.RequestDefaultHeaders</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.Header defHeader
		java.util.Iterator i$
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		String method
		java.util.Collection defHeaders
}
</pre><br/><b>org/apache/http/client/protocol/RequestAuthCache.class</b><pre><a href="/source/s?path=RequestAuthCache.java">RequestAuthCache.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestAuthCache" href="/source/s?defs=org.apache.http.client.protocol.RequestAuthCache">org.apache.http.client.protocol.RequestAuthCache</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		org.apache.http.client.AuthCache authCache
		org.apache.http.client.CredentialsProvider credsProvider
		org.apache.http.HttpHost target
		org.apache.http.auth.AuthState targetState
		org.apache.http.HttpHost proxy
		org.apache.http.auth.AuthState proxyState
	private void <a class="d" name="doPreemptiveAuth" href="/source/s?defs=doPreemptiveAuth">doPreemptiveAuth</a> (org.apache.http.HttpHost, org.apache.http.auth.AuthScheme, org.apache.http.auth.AuthState, org.apache.http.client.CredentialsProvider) 
		org.apache.http.HttpHost host
		org.apache.http.auth.AuthScheme authScheme
		org.apache.http.auth.AuthState authState
		org.apache.http.client.CredentialsProvider credsProvider
		String schemeName
		org.apache.http.auth.AuthScope authScope
		org.apache.http.auth.Credentials creds
}
</pre><br/><b>org/apache/http/client/protocol/RequestClientConnControl.class</b><pre><a href="/source/s?path=RequestClientConnControl.java">RequestClientConnControl.java</a>
package <a href="/source/s?defs=org.apache.http.client.protocol">org.apache.http.client.protocol</a>
public <a class="d" name="org.apache.http.client.protocol.RequestClientConnControl" href="/source/s?defs=org.apache.http.client.protocol.RequestClientConnControl">org.apache.http.client.protocol.RequestClientConnControl</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpRequestInterceptor">org.apache.http.HttpRequestInterceptor</a>  {
	private final org.apache.commons.logging.Log <a class="d" name="log" href="/source/s?defs=log">log</a>
	private static final String <a class="d" name="PROXY_CONN_DIRECTIVE" href="/source/s?defs=PROXY_CONN_DIRECTIVE">PROXY_CONN_DIRECTIVE</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="process" href="/source/s?defs=process">process</a> (org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.HttpRequest request
		org.apache.http.protocol.HttpContext context
		String method
		org.apache.http.conn.HttpRoutedConnection conn
		org.apache.http.conn.routing.HttpRoute route
}
</pre><br/><b>org/apache/http/client/CredentialsProvider.class</b><pre><a href="/source/s?path=CredentialsProvider.java">CredentialsProvider.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.CredentialsProvider" href="/source/s?defs=org.apache.http.client.CredentialsProvider">org.apache.http.client.CredentialsProvider</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="setCredentials" href="/source/s?defs=setCredentials">setCredentials</a> (org.apache.http.auth.AuthScope, org.apache.http.auth.Credentials) 
	public abstract org.apache.http.auth.Credentials <a class="d" name="getCredentials" href="/source/s?defs=getCredentials">getCredentials</a> (org.apache.http.auth.AuthScope) 
	public abstract void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
}
</pre><br/><b>org/apache/http/client/NonRepeatableRequestException.class</b><pre><a href="/source/s?path=NonRepeatableRequestException.java">NonRepeatableRequestException.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public <a class="d" name="org.apache.http.client.NonRepeatableRequestException" href="/source/s?defs=org.apache.http.client.NonRepeatableRequestException">org.apache.http.client.NonRepeatableRequestException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/client/entity/DecompressingEntity.class</b><pre><a href="/source/s?path=DecompressingEntity.java">DecompressingEntity.java</a>
package <a href="/source/s?defs=org.apache.http.client.entity">org.apache.http.client.entity</a>
abstract <a class="d" name="org.apache.http.client.entity.DecompressingEntity" href="/source/s?defs=org.apache.http.client.entity.DecompressingEntity">org.apache.http.client.entity.DecompressingEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.HttpEntityWrapper">org.apache.http.entity.HttpEntityWrapper</a> {
	private static final int <a class="d" name="BUFFER_SIZE" href="/source/s?defs=BUFFER_SIZE">BUFFER_SIZE</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity wrapped
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
		java.io.InputStream instream
		byte[] buffer
		int l
}
</pre><br/><b>org/apache/http/client/entity/UrlEncodedFormEntity.class</b><pre><a href="/source/s?path=UrlEncodedFormEntity.java">UrlEncodedFormEntity.java</a>
package <a href="/source/s?defs=org.apache.http.client.entity">org.apache.http.client.entity</a>
public <a class="d" name="org.apache.http.client.entity.UrlEncodedFormEntity" href="/source/s?defs=org.apache.http.client.entity.UrlEncodedFormEntity">org.apache.http.client.entity.UrlEncodedFormEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.StringEntity">org.apache.http.entity.StringEntity</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.util.List, java.lang.String)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		java.util.List parameters
		String encoding
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.util.List)  throws <a href="/source/s?defs=java.io.UnsupportedEncodingException">java.io.UnsupportedEncodingException</a> 
		java.util.List parameters
}
</pre><br/><b>org/apache/http/client/entity/GzipDecompressingEntity.class</b><pre><a href="/source/s?path=GzipDecompressingEntity.java">GzipDecompressingEntity.java</a>
package <a href="/source/s?defs=org.apache.http.client.entity">org.apache.http.client.entity</a>
public <a class="d" name="org.apache.http.client.entity.GzipDecompressingEntity" href="/source/s?defs=org.apache.http.client.entity.GzipDecompressingEntity">org.apache.http.client.entity.GzipDecompressingEntity</a> extends <a href="/source/s?defs=org.apache.http.client.entity.DecompressingEntity">org.apache.http.client.entity.DecompressingEntity</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
		java.io.InputStream wrappedin
	public org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
}
</pre><br/><b>org/apache/http/client/entity/DeflateDecompressingEntity.class</b><pre><a href="/source/s?path=DeflateDecompressingEntity.java">DeflateDecompressingEntity.java</a>
package <a href="/source/s?defs=org.apache.http.client.entity">org.apache.http.client.entity</a>
public <a class="d" name="org.apache.http.client.entity.DeflateDecompressingEntity" href="/source/s?defs=org.apache.http.client.entity.DeflateDecompressingEntity">org.apache.http.client.entity.DeflateDecompressingEntity</a> extends <a href="/source/s?defs=org.apache.http.client.entity.DecompressingEntity">org.apache.http.client.entity.DecompressingEntity</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity) 
		org.apache.http.HttpEntity entity
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		int n
		java.util.zip.DataFormatException e
		java.io.InputStream wrapped
		byte[] peeked
		java.io.PushbackInputStream pushback
		int headerLength
		byte[] dummy
		java.util.zip.Inflater inf
	public org.apache.http.Header <a class="d" name="getContentEncoding" href="/source/s?defs=getContentEncoding">getContentEncoding</a> () 
	public long <a class="d" name="getContentLength" href="/source/s?defs=getContentLength">getContentLength</a> () 
}
</pre><br/><b>org/apache/http/client/HttpRequestRetryHandler.class</b><pre><a href="/source/s?path=HttpRequestRetryHandler.java">HttpRequestRetryHandler.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.HttpRequestRetryHandler" href="/source/s?defs=org.apache.http.client.HttpRequestRetryHandler">org.apache.http.client.HttpRequestRetryHandler</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="retryRequest" href="/source/s?defs=retryRequest">retryRequest</a> (java.io.IOException, int, org.apache.http.protocol.HttpContext) 
}
</pre><br/><b>org/apache/http/client/AuthCache.class</b><pre><a href="/source/s?path=AuthCache.java">AuthCache.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.AuthCache" href="/source/s?defs=org.apache.http.client.AuthCache">org.apache.http.client.AuthCache</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="put" href="/source/s?defs=put">put</a> (org.apache.http.HttpHost, org.apache.http.auth.AuthScheme) 
	public abstract org.apache.http.auth.AuthScheme <a class="d" name="get" href="/source/s?defs=get">get</a> (org.apache.http.HttpHost) 
	public abstract void <a class="d" name="remove" href="/source/s?defs=remove">remove</a> (org.apache.http.HttpHost) 
	public abstract void <a class="d" name="clear" href="/source/s?defs=clear">clear</a> () 
}
</pre><br/><b>org/apache/http/client/RedirectException.class</b><pre><a href="/source/s?path=RedirectException.java">RedirectException.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public <a class="d" name="org.apache.http.client.RedirectException" href="/source/s?defs=org.apache.http.client.RedirectException">org.apache.http.client.RedirectException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/client/RequestDirector.class</b><pre><a href="/source/s?path=RequestDirector.java">RequestDirector.java</a>
package <a href="/source/s?defs=org.apache.http.client">org.apache.http.client</a>
public abstract <a class="d" name="org.apache.http.client.RequestDirector" href="/source/s?defs=org.apache.http.client.RequestDirector">org.apache.http.client.RequestDirector</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HttpResponse <a class="d" name="execute" href="/source/s?defs=execute">execute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/EofSensorWatcher.class</b><pre><a href="/source/s?path=EofSensorWatcher.java">EofSensorWatcher.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.EofSensorWatcher" href="/source/s?defs=org.apache.http.conn.EofSensorWatcher">org.apache.http.conn.EofSensorWatcher</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="eofDetected" href="/source/s?defs=eofDetected">eofDetected</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract boolean <a class="d" name="streamClosed" href="/source/s?defs=streamClosed">streamClosed</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract boolean <a class="d" name="streamAbort" href="/source/s?defs=streamAbort">streamAbort</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/BasicManagedEntity.class</b><pre><a href="/source/s?path=BasicManagedEntity.java">BasicManagedEntity.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.BasicManagedEntity" href="/source/s?defs=org.apache.http.conn.BasicManagedEntity">org.apache.http.conn.BasicManagedEntity</a> extends <a href="/source/s?defs=org.apache.http.entity.HttpEntityWrapper">org.apache.http.entity.HttpEntityWrapper</a> implements <a href="/source/s?defs=org.apache.http.conn.ConnectionReleaseTrigger">org.apache.http.conn.ConnectionReleaseTrigger</a> <a href="/source/s?defs=org.apache.http.conn.EofSensorWatcher">org.apache.http.conn.EofSensorWatcher</a>  {
	protected org.apache.http.conn.ManagedClientConnection <a class="d" name="managedConn" href="/source/s?defs=managedConn">managedConn</a>
	protected final boolean <a class="d" name="attemptReuse" href="/source/s?defs=attemptReuse">attemptReuse</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpEntity, org.apache.http.conn.ManagedClientConnection, boolean) 
		org.apache.http.HttpEntity entity
		org.apache.http.conn.ManagedClientConnection conn
		boolean reuse
	public boolean <a class="d" name="isRepeatable" href="/source/s?defs=isRepeatable">isRepeatable</a> () 
	public java.io.InputStream <a class="d" name="getContent" href="/source/s?defs=getContent">getContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	private void <a class="d" name="ensureConsumed" href="/source/s?defs=ensureConsumed">ensureConsumed</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="consumeContent" href="/source/s?defs=consumeContent">consumeContent</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="writeTo" href="/source/s?defs=writeTo">writeTo</a> (java.io.OutputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.OutputStream outstream
	public void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="abortConnection" href="/source/s?defs=abortConnection">abortConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public boolean <a class="d" name="eofDetected" href="/source/s?defs=eofDetected">eofDetected</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
	public boolean <a class="d" name="streamClosed" href="/source/s?defs=streamClosed">streamClosed</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
	public boolean <a class="d" name="streamAbort" href="/source/s?defs=streamAbort">streamAbort</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
	protected void <a class="d" name="releaseManagedConnection" href="/source/s?defs=releaseManagedConnection">releaseManagedConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/HttpHostConnectException.class</b><pre><a href="/source/s?path=HttpHostConnectException.java">HttpHostConnectException.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.HttpHostConnectException" href="/source/s?defs=org.apache.http.conn.HttpHostConnectException">org.apache.http.conn.HttpHostConnectException</a> extends <a href="/source/s?defs=java.net.ConnectException">java.net.ConnectException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.HttpHost <a class="d" name="host" href="/source/s?defs=host">host</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.ConnectException) 
		org.apache.http.HttpHost host
		java.net.ConnectException cause
	public org.apache.http.HttpHost <a class="d" name="getHost" href="/source/s?defs=getHost">getHost</a> () 
}
</pre><br/><b>org/apache/http/conn/MultihomePlainSocketFactory.class</b><pre><a href="/source/s?path=MultihomePlainSocketFactory.java">MultihomePlainSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public final <a class="d" name="org.apache.http.conn.MultihomePlainSocketFactory" href="/source/s?defs=org.apache.http.conn.MultihomePlainSocketFactory">org.apache.http.conn.MultihomePlainSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SocketFactory">org.apache.http.conn.scheme.SocketFactory</a>  {
	private static final org.apache.http.conn.MultihomePlainSocketFactory <a class="d" name="DEFAULT_FACTORY" href="/source/s?defs=DEFAULT_FACTORY">DEFAULT_FACTORY</a>
	public static org.apache.http.conn.MultihomePlainSocketFactory <a class="d" name="getSocketFactory" href="/source/s?defs=getSocketFactory">getSocketFactory</a> () 
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> () 
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.net.InetSocketAddress isa
		java.net.SocketTimeoutException ex
		java.io.IOException ex
		java.net.InetAddress remoteAddress
		java.util.Iterator i$
		java.net.Socket sock
		String host
		int port
		java.net.InetAddress localAddress
		int localPort
		org.apache.http.params.HttpParams params
		int timeout
		java.net.InetAddress[] inetadrs
		java.util.List addresses
		java.io.IOException lastEx
	public final boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.net.Socket sock
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/ClientConnectionRequest.class</b><pre><a href="/source/s?path=ClientConnectionRequest.java">ClientConnectionRequest.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ClientConnectionRequest" href="/source/s?defs=org.apache.http.conn.ClientConnectionRequest">org.apache.http.conn.ClientConnectionRequest</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.conn.ManagedClientConnection <a class="d" name="getConnection" href="/source/s?defs=getConnection">getConnection</a> (long, java.util.concurrent.TimeUnit)  throws <a href="/source/s?defs=java.lang.InterruptedException">java.lang.InterruptedException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> 
	public abstract void <a class="d" name="abortRequest" href="/source/s?defs=abortRequest">abortRequest</a> () 
}
</pre><br/><b>org/apache/http/conn/util/InetAddressUtils.class</b><pre><a href="/source/s?path=InetAddressUtils.java">InetAddressUtils.java</a>
package <a href="/source/s?defs=org.apache.http.conn.util">org.apache.http.conn.util</a>
public <a class="d" name="org.apache.http.conn.util.InetAddressUtils" href="/source/s?defs=org.apache.http.conn.util.InetAddressUtils">org.apache.http.conn.util.InetAddressUtils</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private static final java.util.regex.Pattern <a class="d" name="IPV4_PATTERN" href="/source/s?defs=IPV4_PATTERN">IPV4_PATTERN</a>
	private static final java.util.regex.Pattern <a class="d" name="IPV6_STD_PATTERN" href="/source/s?defs=IPV6_STD_PATTERN">IPV6_STD_PATTERN</a>
	private static final java.util.regex.Pattern <a class="d" name="IPV6_HEX_COMPRESSED_PATTERN" href="/source/s?defs=IPV6_HEX_COMPRESSED_PATTERN">IPV6_HEX_COMPRESSED_PATTERN</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static boolean <a class="d" name="isIPv4Address" href="/source/s?defs=isIPv4Address">isIPv4Address</a> (java.lang.String) 
		String input
	public static boolean <a class="d" name="isIPv6StdAddress" href="/source/s?defs=isIPv6StdAddress">isIPv6StdAddress</a> (java.lang.String) 
		String input
	public static boolean <a class="d" name="isIPv6HexCompressedAddress" href="/source/s?defs=isIPv6HexCompressedAddress">isIPv6HexCompressedAddress</a> (java.lang.String) 
		String input
	public static boolean <a class="d" name="isIPv6Address" href="/source/s?defs=isIPv6Address">isIPv6Address</a> (java.lang.String) 
		String input
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/TrustSelfSignedStrategy.class</b><pre><a href="/source/s?path=TrustSelfSignedStrategy.java">TrustSelfSignedStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public <a class="d" name="org.apache.http.conn.ssl.TrustSelfSignedStrategy" href="/source/s?defs=org.apache.http.conn.ssl.TrustSelfSignedStrategy">org.apache.http.conn.ssl.TrustSelfSignedStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ssl.TrustStrategy">org.apache.http.conn.ssl.TrustStrategy</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public boolean <a class="d" name="isTrusted" href="/source/s?defs=isTrusted">isTrusted</a> (java.security.cert.X509Certificate[], java.lang.String)  throws <a href="/source/s?defs=java.security.cert.CertificateException">java.security.cert.CertificateException</a> 
		java.security.cert.X509Certificate[] chain
		String authType
}
</pre><br/><b>org/apache/http/conn/ssl/StrictHostnameVerifier.class</b><pre><a href="/source/s?path=StrictHostnameVerifier.java">StrictHostnameVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public <a class="d" name="org.apache.http.conn.ssl.StrictHostnameVerifier" href="/source/s?defs=org.apache.http.conn.ssl.StrictHostnameVerifier">org.apache.http.conn.ssl.StrictHostnameVerifier</a> extends <a href="/source/s?defs=org.apache.http.conn.ssl.AbstractVerifier">org.apache.http.conn.ssl.AbstractVerifier</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.lang.String[], java.lang.String[])  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
		String host
		String[] cns
		String[] subjectAlts
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/TrustStrategy.class</b><pre><a href="/source/s?path=TrustStrategy.java">TrustStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public abstract <a class="d" name="org.apache.http.conn.ssl.TrustStrategy" href="/source/s?defs=org.apache.http.conn.ssl.TrustStrategy">org.apache.http.conn.ssl.TrustStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract boolean <a class="d" name="isTrusted" href="/source/s?defs=isTrusted">isTrusted</a> (java.security.cert.X509Certificate[], java.lang.String)  throws <a href="/source/s?defs=java.security.cert.CertificateException">java.security.cert.CertificateException</a> 
}
</pre><br/><b>org/apache/http/conn/ssl/TrustManagerDecorator.class</b><pre><a href="/source/s?path=TrustManagerDecorator.java">TrustManagerDecorator.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
 <a class="d" name="org.apache.http.conn.ssl.TrustManagerDecorator" href="/source/s?defs=org.apache.http.conn.ssl.TrustManagerDecorator">org.apache.http.conn.ssl.TrustManagerDecorator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=javax.net.ssl.X509TrustManager">javax.net.ssl.X509TrustManager</a>  {
	private final javax.net.ssl.X509TrustManager <a class="d" name="trustManager" href="/source/s?defs=trustManager">trustManager</a>
	private final org.apache.http.conn.ssl.TrustStrategy <a class="d" name="trustStrategy" href="/source/s?defs=trustStrategy">trustStrategy</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (javax.net.ssl.X509TrustManager, org.apache.http.conn.ssl.TrustStrategy) 
		javax.net.ssl.X509TrustManager trustManager
		org.apache.http.conn.ssl.TrustStrategy trustStrategy
	public void <a class="d" name="checkClientTrusted" href="/source/s?defs=checkClientTrusted">checkClientTrusted</a> (java.security.cert.X509Certificate[], java.lang.String)  throws <a href="/source/s?defs=java.security.cert.CertificateException">java.security.cert.CertificateException</a> 
		java.security.cert.X509Certificate[] chain
		String authType
	public void <a class="d" name="checkServerTrusted" href="/source/s?defs=checkServerTrusted">checkServerTrusted</a> (java.security.cert.X509Certificate[], java.lang.String)  throws <a href="/source/s?defs=java.security.cert.CertificateException">java.security.cert.CertificateException</a> 
		java.security.cert.X509Certificate[] chain
		String authType
	public java.security.cert.X509Certificate[] <a class="d" name="getAcceptedIssuers" href="/source/s?defs=getAcceptedIssuers">getAcceptedIssuers</a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/SSLSocketFactory.class</b><pre><a href="/source/s?path=SSLSocketFactory.java">SSLSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public <a class="d" name="org.apache.http.conn.ssl.SSLSocketFactory" href="/source/s?defs=org.apache.http.conn.ssl.SSLSocketFactory">org.apache.http.conn.ssl.SSLSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.LayeredSchemeSocketFactory">org.apache.http.conn.scheme.LayeredSchemeSocketFactory</a> <a href="/source/s?defs=org.apache.http.conn.scheme.LayeredSocketFactory">org.apache.http.conn.scheme.LayeredSocketFactory</a>  {
	public static final String <a class="d" name="TLS" href="/source/s?defs=TLS">TLS</a>
	public static final String <a class="d" name="SSL" href="/source/s?defs=SSL">SSL</a>
	public static final String <a class="d" name="SSLV2" href="/source/s?defs=SSLV2">SSLV2</a>
	public static final org.apache.http.conn.ssl.X509HostnameVerifier <a class="d" name="ALLOW_ALL_HOSTNAME_VERIFIER" href="/source/s?defs=ALLOW_ALL_HOSTNAME_VERIFIER">ALLOW_ALL_HOSTNAME_VERIFIER</a>
	public static final org.apache.http.conn.ssl.X509HostnameVerifier <a class="d" name="BROWSER_COMPATIBLE_HOSTNAME_VERIFIER" href="/source/s?defs=BROWSER_COMPATIBLE_HOSTNAME_VERIFIER">BROWSER_COMPATIBLE_HOSTNAME_VERIFIER</a>
	public static final org.apache.http.conn.ssl.X509HostnameVerifier <a class="d" name="STRICT_HOSTNAME_VERIFIER" href="/source/s?defs=STRICT_HOSTNAME_VERIFIER">STRICT_HOSTNAME_VERIFIER</a>
	private final javax.net.ssl.SSLSocketFactory <a class="d" name="socketfactory" href="/source/s?defs=socketfactory">socketfactory</a>
	private final org.apache.http.conn.scheme.HostNameResolver <a class="d" name="nameResolver" href="/source/s?defs=nameResolver">nameResolver</a>
	private volatile org.apache.http.conn.ssl.X509HostnameVerifier <a class="d" name="hostnameVerifier" href="/source/s?defs=hostnameVerifier">hostnameVerifier</a>
	public static org.apache.http.conn.ssl.SSLSocketFactory <a class="d" name="getSocketFactory" href="/source/s?defs=getSocketFactory">getSocketFactory</a> () 
	private static javax.net.ssl.SSLContext <a class="d" name="createSSLContext" href="/source/s?defs=createSSLContext">createSSLContext</a> (java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.TrustStrategy)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> 
		javax.net.ssl.TrustManager tm
		int i
		String algorithm
		java.security.KeyStore keystore
		String keystorePassword
		java.security.KeyStore truststore
		java.security.SecureRandom random
		org.apache.http.conn.ssl.TrustStrategy trustStrategy
		javax.net.ssl.KeyManagerFactory kmfactory
		javax.net.ssl.KeyManager[] keymanagers
		javax.net.ssl.TrustManagerFactory tmfactory
		javax.net.ssl.TrustManager[] trustmanagers
		javax.net.ssl.SSLContext sslcontext
	private static javax.net.ssl.SSLContext <a class="d" name="createDefaultSSLContext" href="/source/s?defs=createDefaultSSLContext">createDefaultSSLContext</a> () 
		Exception ex
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.scheme.HostNameResolver)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		String algorithm
		java.security.KeyStore keystore
		String keystorePassword
		java.security.KeyStore truststore
		java.security.SecureRandom random
		org.apache.http.conn.scheme.HostNameResolver nameResolver
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.X509HostnameVerifier)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		String algorithm
		java.security.KeyStore keystore
		String keystorePassword
		java.security.KeyStore truststore
		java.security.SecureRandom random
		org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.TrustStrategy, org.apache.http.conn.ssl.X509HostnameVerifier)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		String algorithm
		java.security.KeyStore keystore
		String keystorePassword
		java.security.KeyStore truststore
		java.security.SecureRandom random
		org.apache.http.conn.ssl.TrustStrategy trustStrategy
		org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.security.KeyStore, java.lang.String, java.security.KeyStore)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		java.security.KeyStore keystore
		String keystorePassword
		java.security.KeyStore truststore
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.security.KeyStore, java.lang.String)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		java.security.KeyStore keystore
		String keystorePassword
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.security.KeyStore)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		java.security.KeyStore truststore
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ssl.TrustStrategy, org.apache.http.conn.ssl.X509HostnameVerifier)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		org.apache.http.conn.ssl.TrustStrategy trustStrategy
		org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ssl.TrustStrategy)  throws <a href="/source/s?defs=java.security.NoSuchAlgorithmException">java.security.NoSuchAlgorithmException</a> <a href="/source/s?defs=java.security.KeyManagementException">java.security.KeyManagementException</a> <a href="/source/s?defs=java.security.KeyStoreException">java.security.KeyStoreException</a> <a href="/source/s?defs=java.security.UnrecoverableKeyException">java.security.UnrecoverableKeyException</a> 
		org.apache.http.conn.ssl.TrustStrategy trustStrategy
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (javax.net.ssl.SSLContext) 
		javax.net.ssl.SSLContext sslContext
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (javax.net.ssl.SSLContext, org.apache.http.conn.scheme.HostNameResolver) 
		javax.net.ssl.SSLContext sslContext
		org.apache.http.conn.scheme.HostNameResolver nameResolver
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (javax.net.ssl.SSLContext, org.apache.http.conn.ssl.X509HostnameVerifier) 
		javax.net.ssl.SSLContext sslContext
		org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.params.HttpParams params
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.SocketTimeoutException ex
		javax.net.ssl.SSLSocket sslsock
		Exception x
		java.io.IOException iox
		java.net.Socket socket
		java.net.InetSocketAddress remoteAddress
		java.net.InetSocketAddress localAddress
		org.apache.http.params.HttpParams params
		java.net.Socket sock
		int connTimeout
		int soTimeout
		javax.net.ssl.SSLSocket sslsock
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.net.Socket sock
	public java.net.Socket <a class="d" name="createLayeredSocket" href="/source/s?defs=createLayeredSocket">createLayeredSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
		java.net.Socket socket
		String host
		int port
		boolean autoClose
		javax.net.ssl.SSLSocket sslSocket
	public void <a class="d" name="setHostnameVerifier" href="/source/s?defs=setHostnameVerifier">setHostnameVerifier</a> (org.apache.http.conn.ssl.X509HostnameVerifier) 
		org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier
	public org.apache.http.conn.ssl.X509HostnameVerifier <a class="d" name="getHostnameVerifier" href="/source/s?defs=getHostnameVerifier">getHostnameVerifier</a> () 
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.InetAddress remoteAddress
		java.net.Socket socket
		String host
		int port
		java.net.InetAddress localAddress
		int localPort
		org.apache.http.params.HttpParams params
		java.net.InetSocketAddress local
		java.net.InetAddress remoteAddress
		java.net.InetSocketAddress remote
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
		java.net.Socket socket
		String host
		int port
		boolean autoClose
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/X509HostnameVerifier.class</b><pre><a href="/source/s?path=X509HostnameVerifier.java">X509HostnameVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public abstract <a class="d" name="org.apache.http.conn.ssl.X509HostnameVerifier" href="/source/s?defs=org.apache.http.conn.ssl.X509HostnameVerifier">org.apache.http.conn.ssl.X509HostnameVerifier</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=javax.net.ssl.HostnameVerifier">javax.net.ssl.HostnameVerifier</a>  {
	public abstract void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, javax.net.ssl.SSLSocket)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.security.cert.X509Certificate)  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
	public abstract void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.lang.String[], java.lang.String[])  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
}
</pre><br/><b>org/apache/http/conn/ssl/AbstractVerifier.class</b><pre><a href="/source/s?path=AbstractVerifier.java">AbstractVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public abstract <a class="d" name="org.apache.http.conn.ssl.AbstractVerifier" href="/source/s?defs=org.apache.http.conn.ssl.AbstractVerifier">org.apache.http.conn.ssl.AbstractVerifier</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.ssl.X509HostnameVerifier">org.apache.http.conn.ssl.X509HostnameVerifier</a>  {
	private static final String[] <a class="d" name="BAD_COUNTRY_2LDS" href="/source/s?defs=BAD_COUNTRY_2LDS">BAD_COUNTRY_2LDS</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, javax.net.ssl.SSLSocket)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream in
		String host
		javax.net.ssl.SSLSocket ssl
		javax.net.ssl.SSLSession session
		java.security.cert.Certificate[] certs
		java.security.cert.X509Certificate x509
	public final boolean <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, javax.net.ssl.SSLSession) 
		java.security.cert.Certificate[] certs
		java.security.cert.X509Certificate x509
		javax.net.ssl.SSLException e
		String host
		javax.net.ssl.SSLSession session
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.security.cert.X509Certificate)  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
		String host
		java.security.cert.X509Certificate cert
		String[] cns
		String[] subjectAlts
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.lang.String[], java.lang.String[], boolean)  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
		String subjectAlt
		String[] arr$
		int len$
		int i$
		String msg
		String cn
		boolean doWildcard
		java.util.Iterator it
		String host
		String[] cns
		String[] subjectAlts
		boolean strictWithSubDomains
		java.util.LinkedList names
		StringBuilder buf
		String hostName
		boolean match
	public static boolean <a class="d" name="acceptableCountryWildcard" href="/source/s?defs=acceptableCountryWildcard">acceptableCountryWildcard</a> (java.lang.String) 
		String s
		int x
		String cn
		int cnLen
	public static java.lang.String[] <a class="d" name="getCNs" href="/source/s?defs=getCNs">getCNs</a> (java.security.cert.X509Certificate) 
		String tok
		int x
		String[] cns
		java.security.cert.X509Certificate cert
		java.util.LinkedList cnList
		String subjectPrincipal
		java.util.StringTokenizer st
	private static java.lang.String[] <a class="d" name="getSubjectAlts" href="/source/s?defs=getSubjectAlts">getSubjectAlts</a> (java.security.cert.X509Certificate, java.lang.String) 
		int subjectType
		java.security.cert.CertificateParsingException cpe
		String s
		java.util.List list
		int type
		java.util.List aC
		java.util.Iterator i$
		String[] subjectAlts
		java.security.cert.X509Certificate cert
		String hostname
		int subjectType
		java.util.LinkedList subjectAltList
		java.util.Collection c
	public static java.lang.String[] <a class="d" name="getDNSSubjectAlts" href="/source/s?defs=getDNSSubjectAlts">getDNSSubjectAlts</a> (java.security.cert.X509Certificate) 
		java.security.cert.X509Certificate cert
	public static int <a class="d" name="countDots" href="/source/s?defs=countDots">countDots</a> (java.lang.String) 
		int i
		String s
		int count
	private static boolean <a class="d" name="isIPAddress" href="/source/s?defs=isIPAddress">isIPAddress</a> (java.lang.String) 
		String hostname
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/BrowserCompatHostnameVerifier.class</b><pre><a href="/source/s?path=BrowserCompatHostnameVerifier.java">BrowserCompatHostnameVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public <a class="d" name="org.apache.http.conn.ssl.BrowserCompatHostnameVerifier" href="/source/s?defs=org.apache.http.conn.ssl.BrowserCompatHostnameVerifier">org.apache.http.conn.ssl.BrowserCompatHostnameVerifier</a> extends <a href="/source/s?defs=org.apache.http.conn.ssl.AbstractVerifier">org.apache.http.conn.ssl.AbstractVerifier</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.lang.String[], java.lang.String[])  throws <a href="/source/s?defs=javax.net.ssl.SSLException">javax.net.ssl.SSLException</a> 
		String host
		String[] cns
		String[] subjectAlts
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/conn/ssl/AllowAllHostnameVerifier.class</b><pre><a href="/source/s?path=AllowAllHostnameVerifier.java">AllowAllHostnameVerifier.java</a>
package <a href="/source/s?defs=org.apache.http.conn.ssl">org.apache.http.conn.ssl</a>
public <a class="d" name="org.apache.http.conn.ssl.AllowAllHostnameVerifier" href="/source/s?defs=org.apache.http.conn.ssl.AllowAllHostnameVerifier">org.apache.http.conn.ssl.AllowAllHostnameVerifier</a> extends <a href="/source/s?defs=org.apache.http.conn.ssl.AbstractVerifier">org.apache.http.conn.ssl.AbstractVerifier</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final void <a class="d" name="verify" href="/source/s?defs=verify">verify</a> (java.lang.String, java.lang.String[], java.lang.String[]) 
		String host
		String[] cns
		String[] subjectAlts
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/conn/ConnectionKeepAliveStrategy.class</b><pre><a href="/source/s?path=ConnectionKeepAliveStrategy.java">ConnectionKeepAliveStrategy.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ConnectionKeepAliveStrategy" href="/source/s?defs=org.apache.http.conn.ConnectionKeepAliveStrategy">org.apache.http.conn.ConnectionKeepAliveStrategy</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract long <a class="d" name="getKeepAliveDuration" href="/source/s?defs=getKeepAliveDuration">getKeepAliveDuration</a> (org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) 
}
</pre><br/><b>org/apache/http/conn/params/ConnConnectionParamBean.class</b><pre><a href="/source/s?path=ConnConnectionParamBean.java">ConnConnectionParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public <a class="d" name="org.apache.http.conn.params.ConnConnectionParamBean" href="/source/s?defs=org.apache.http.conn.params.ConnConnectionParamBean">org.apache.http.conn.params.ConnConnectionParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setMaxStatusLineGarbage" href="/source/s?defs=setMaxStatusLineGarbage">setMaxStatusLineGarbage</a> (int) 
		int maxStatusLineGarbage
}
</pre><br/><b>org/apache/http/conn/params/ConnManagerParams$1.class</b><pre><a href="/source/s?path=ConnManagerParams.java">ConnManagerParams.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
 <a class="d" name="org.apache.http.conn.params.ConnManagerParams$1" href="/source/s?defs=org.apache.http.conn.params.ConnManagerParams$1">org.apache.http.conn.params.ConnManagerParams$1</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.params.ConnPerRoute">org.apache.http.conn.params.ConnPerRoute</a>  {
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public int <a class="d" name="getMaxForRoute" href="/source/s?defs=getMaxForRoute">getMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
}
</pre><br/><b>org/apache/http/conn/params/ConnManagerPNames.class</b><pre><a href="/source/s?path=ConnManagerPNames.java">ConnManagerPNames.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public abstract <a class="d" name="org.apache.http.conn.params.ConnManagerPNames" href="/source/s?defs=org.apache.http.conn.params.ConnManagerPNames">org.apache.http.conn.params.ConnManagerPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="TIMEOUT" href="/source/s?defs=TIMEOUT">TIMEOUT</a>
	public static final String <a class="d" name="MAX_CONNECTIONS_PER_ROUTE" href="/source/s?defs=MAX_CONNECTIONS_PER_ROUTE">MAX_CONNECTIONS_PER_ROUTE</a>
	public static final String <a class="d" name="MAX_TOTAL_CONNECTIONS" href="/source/s?defs=MAX_TOTAL_CONNECTIONS">MAX_TOTAL_CONNECTIONS</a>
}
</pre><br/><b>org/apache/http/conn/params/ConnManagerParamBean.class</b><pre><a href="/source/s?path=ConnManagerParamBean.java">ConnManagerParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public <a class="d" name="org.apache.http.conn.params.ConnManagerParamBean" href="/source/s?defs=org.apache.http.conn.params.ConnManagerParamBean">org.apache.http.conn.params.ConnManagerParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setTimeout" href="/source/s?defs=setTimeout">setTimeout</a> (long) 
		long timeout
	public void <a class="d" name="setMaxTotalConnections" href="/source/s?defs=setMaxTotalConnections">setMaxTotalConnections</a> (int) 
		int maxConnections
	public void <a class="d" name="setConnectionsPerRoute" href="/source/s?defs=setConnectionsPerRoute">setConnectionsPerRoute</a> (org.apache.http.conn.params.ConnPerRouteBean) 
		org.apache.http.conn.params.ConnPerRouteBean connPerRoute
}
</pre><br/><b>org/apache/http/conn/params/ConnManagerParams.class</b><pre><a href="/source/s?path=ConnManagerParams.java">ConnManagerParams.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public final <a class="d" name="org.apache.http.conn.params.ConnManagerParams" href="/source/s?defs=org.apache.http.conn.params.ConnManagerParams">org.apache.http.conn.params.ConnManagerParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.params.ConnManagerPNames">org.apache.http.conn.params.ConnManagerPNames</a>  {
	public static final int <a class="d" name="DEFAULT_MAX_TOTAL_CONNECTIONS" href="/source/s?defs=DEFAULT_MAX_TOTAL_CONNECTIONS">DEFAULT_MAX_TOTAL_CONNECTIONS</a>
	private static final org.apache.http.conn.params.ConnPerRoute <a class="d" name="DEFAULT_CONN_PER_ROUTE" href="/source/s?defs=DEFAULT_CONN_PER_ROUTE">DEFAULT_CONN_PER_ROUTE</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static long <a class="d" name="getTimeout" href="/source/s?defs=getTimeout">getTimeout</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public static void <a class="d" name="setTimeout" href="/source/s?defs=setTimeout">setTimeout</a> (org.apache.http.params.HttpParams, long) 
		org.apache.http.params.HttpParams params
		long timeout
	public static void <a class="d" name="setMaxConnectionsPerRoute" href="/source/s?defs=setMaxConnectionsPerRoute">setMaxConnectionsPerRoute</a> (org.apache.http.params.HttpParams, org.apache.http.conn.params.ConnPerRoute) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.params.ConnPerRoute connPerRoute
	public static org.apache.http.conn.params.ConnPerRoute <a class="d" name="getMaxConnectionsPerRoute" href="/source/s?defs=getMaxConnectionsPerRoute">getMaxConnectionsPerRoute</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.params.ConnPerRoute connPerRoute
	public static void <a class="d" name="setMaxTotalConnections" href="/source/s?defs=setMaxTotalConnections">setMaxTotalConnections</a> (org.apache.http.params.HttpParams, int) 
		org.apache.http.params.HttpParams params
		int maxTotalConnections
	public static int <a class="d" name="getMaxTotalConnections" href="/source/s?defs=getMaxTotalConnections">getMaxTotalConnections</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/params/ConnConnectionPNames.class</b><pre><a href="/source/s?path=ConnConnectionPNames.java">ConnConnectionPNames.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public abstract <a class="d" name="org.apache.http.conn.params.ConnConnectionPNames" href="/source/s?defs=org.apache.http.conn.params.ConnConnectionPNames">org.apache.http.conn.params.ConnConnectionPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="MAX_STATUS_LINE_GARBAGE" href="/source/s?defs=MAX_STATUS_LINE_GARBAGE">MAX_STATUS_LINE_GARBAGE</a>
}
</pre><br/><b>org/apache/http/conn/params/ConnRouteParamBean.class</b><pre><a href="/source/s?path=ConnRouteParamBean.java">ConnRouteParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public <a class="d" name="org.apache.http.conn.params.ConnRouteParamBean" href="/source/s?defs=org.apache.http.conn.params.ConnRouteParamBean">org.apache.http.conn.params.ConnRouteParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setDefaultProxy" href="/source/s?defs=setDefaultProxy">setDefaultProxy</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost defaultProxy
	public void <a class="d" name="setLocalAddress" href="/source/s?defs=setLocalAddress">setLocalAddress</a> (java.net.InetAddress) 
		java.net.InetAddress address
	public void <a class="d" name="setForcedRoute" href="/source/s?defs=setForcedRoute">setForcedRoute</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
}
</pre><br/><b>org/apache/http/conn/params/ConnRoutePNames.class</b><pre><a href="/source/s?path=ConnRoutePNames.java">ConnRoutePNames.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public abstract <a class="d" name="org.apache.http.conn.params.ConnRoutePNames" href="/source/s?defs=org.apache.http.conn.params.ConnRoutePNames">org.apache.http.conn.params.ConnRoutePNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="DEFAULT_PROXY" href="/source/s?defs=DEFAULT_PROXY">DEFAULT_PROXY</a>
	public static final String <a class="d" name="LOCAL_ADDRESS" href="/source/s?defs=LOCAL_ADDRESS">LOCAL_ADDRESS</a>
	public static final String <a class="d" name="FORCED_ROUTE" href="/source/s?defs=FORCED_ROUTE">FORCED_ROUTE</a>
}
</pre><br/><b>org/apache/http/conn/params/ConnRouteParams.class</b><pre><a href="/source/s?path=ConnRouteParams.java">ConnRouteParams.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public <a class="d" name="org.apache.http.conn.params.ConnRouteParams" href="/source/s?defs=org.apache.http.conn.params.ConnRouteParams">org.apache.http.conn.params.ConnRouteParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.params.ConnRoutePNames">org.apache.http.conn.params.ConnRoutePNames</a>  {
	public static final org.apache.http.HttpHost <a class="d" name="NO_HOST" href="/source/s?defs=NO_HOST">NO_HOST</a>
	public static final org.apache.http.conn.routing.HttpRoute <a class="d" name="NO_ROUTE" href="/source/s?defs=NO_ROUTE">NO_ROUTE</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static org.apache.http.HttpHost <a class="d" name="getDefaultProxy" href="/source/s?defs=getDefaultProxy">getDefaultProxy</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		org.apache.http.HttpHost proxy
	public static void <a class="d" name="setDefaultProxy" href="/source/s?defs=setDefaultProxy">setDefaultProxy</a> (org.apache.http.params.HttpParams, org.apache.http.HttpHost) 
		org.apache.http.params.HttpParams params
		org.apache.http.HttpHost proxy
	public static org.apache.http.conn.routing.HttpRoute <a class="d" name="getForcedRoute" href="/source/s?defs=getForcedRoute">getForcedRoute</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.routing.HttpRoute route
	public static void <a class="d" name="setForcedRoute" href="/source/s?defs=setForcedRoute">setForcedRoute</a> (org.apache.http.params.HttpParams, org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.params.HttpParams params
		org.apache.http.conn.routing.HttpRoute route
	public static java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		java.net.InetAddress local
	public static void <a class="d" name="setLocalAddress" href="/source/s?defs=setLocalAddress">setLocalAddress</a> (org.apache.http.params.HttpParams, java.net.InetAddress) 
		org.apache.http.params.HttpParams params
		java.net.InetAddress local
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/params/ConnPerRouteBean.class</b><pre><a href="/source/s?path=ConnPerRouteBean.java">ConnPerRouteBean.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public final <a class="d" name="org.apache.http.conn.params.ConnPerRouteBean" href="/source/s?defs=org.apache.http.conn.params.ConnPerRouteBean">org.apache.http.conn.params.ConnPerRouteBean</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.params.ConnPerRoute">org.apache.http.conn.params.ConnPerRoute</a>  {
	public static final int <a class="d" name="DEFAULT_MAX_CONNECTIONS_PER_ROUTE" href="/source/s?defs=DEFAULT_MAX_CONNECTIONS_PER_ROUTE">DEFAULT_MAX_CONNECTIONS_PER_ROUTE</a>
	private final java.util.concurrent.ConcurrentHashMap <a class="d" name="maxPerHostMap" href="/source/s?defs=maxPerHostMap">maxPerHostMap</a>
	private volatile int <a class="d" name="defaultMax" href="/source/s?defs=defaultMax">defaultMax</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (int) 
		int defaultMax
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public int <a class="d" name="getDefaultMax" href="/source/s?defs=getDefaultMax">getDefaultMax</a> () 
	public int <a class="d" name="getDefaultMaxPerRoute" href="/source/s?defs=getDefaultMaxPerRoute">getDefaultMaxPerRoute</a> () 
	public void <a class="d" name="setDefaultMaxPerRoute" href="/source/s?defs=setDefaultMaxPerRoute">setDefaultMaxPerRoute</a> (int) 
		int max
	public void <a class="d" name="setMaxForRoute" href="/source/s?defs=setMaxForRoute">setMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute, int) 
		org.apache.http.conn.routing.HttpRoute route
		int max
	public int <a class="d" name="getMaxForRoute" href="/source/s?defs=getMaxForRoute">getMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
		Integer max
	public void <a class="d" name="setMaxForRoutes" href="/source/s?defs=setMaxForRoutes">setMaxForRoutes</a> (java.util.Map) 
		java.util.Map map
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/conn/params/ConnPerRoute.class</b><pre><a href="/source/s?path=ConnPerRoute.java">ConnPerRoute.java</a>
package <a href="/source/s?defs=org.apache.http.conn.params">org.apache.http.conn.params</a>
public abstract <a class="d" name="org.apache.http.conn.params.ConnPerRoute" href="/source/s?defs=org.apache.http.conn.params.ConnPerRoute">org.apache.http.conn.params.ConnPerRoute</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract int <a class="d" name="getMaxForRoute" href="/source/s?defs=getMaxForRoute">getMaxForRoute</a> (org.apache.http.conn.routing.HttpRoute) 
}
</pre><br/><b>org/apache/http/conn/ConnectTimeoutException.class</b><pre><a href="/source/s?path=ConnectTimeoutException.java">ConnectTimeoutException.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.ConnectTimeoutException" href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> extends <a href="/source/s?defs=java.io.InterruptedIOException">java.io.InterruptedIOException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/conn/BasicEofSensorWatcher.class</b><pre><a href="/source/s?path=BasicEofSensorWatcher.java">BasicEofSensorWatcher.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.BasicEofSensorWatcher" href="/source/s?defs=org.apache.http.conn.BasicEofSensorWatcher">org.apache.http.conn.BasicEofSensorWatcher</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.EofSensorWatcher">org.apache.http.conn.EofSensorWatcher</a>  {
	protected final org.apache.http.conn.ManagedClientConnection <a class="d" name="managedConn" href="/source/s?defs=managedConn">managedConn</a>
	protected final boolean <a class="d" name="attemptReuse" href="/source/s?defs=attemptReuse">attemptReuse</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.ManagedClientConnection, boolean) 
		org.apache.http.conn.ManagedClientConnection conn
		boolean reuse
	public boolean <a class="d" name="eofDetected" href="/source/s?defs=eofDetected">eofDetected</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
	public boolean <a class="d" name="streamClosed" href="/source/s?defs=streamClosed">streamClosed</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
	public boolean <a class="d" name="streamAbort" href="/source/s?defs=streamAbort">streamAbort</a> (java.io.InputStream)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.InputStream wrapped
}
</pre><br/><b>org/apache/http/conn/HttpRoutedConnection.class</b><pre><a href="/source/s?path=HttpRoutedConnection.java">HttpRoutedConnection.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.HttpRoutedConnection" href="/source/s?defs=org.apache.http.conn.HttpRoutedConnection">org.apache.http.conn.HttpRoutedConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpInetConnection">org.apache.http.HttpInetConnection</a>  {
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public abstract org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
	public abstract javax.net.ssl.SSLSession <a class="d" name="getSSLSession" href="/source/s?defs=getSSLSession">getSSLSession</a> () 
}
</pre><br/><b>org/apache/http/conn/ClientConnectionManagerFactory.class</b><pre><a href="/source/s?path=ClientConnectionManagerFactory.java">ClientConnectionManagerFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ClientConnectionManagerFactory" href="/source/s?defs=org.apache.http.conn.ClientConnectionManagerFactory">org.apache.http.conn.ClientConnectionManagerFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.conn.ClientConnectionManager <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry) 
}
</pre><br/><b>org/apache/http/conn/ManagedClientConnection.class</b><pre><a href="/source/s?path=ManagedClientConnection.java">ManagedClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ManagedClientConnection" href="/source/s?defs=org.apache.http.conn.ManagedClientConnection">org.apache.http.conn.ManagedClientConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpClientConnection">org.apache.http.HttpClientConnection</a> <a href="/source/s?defs=org.apache.http.conn.HttpRoutedConnection">org.apache.http.conn.HttpRoutedConnection</a> <a href="/source/s?defs=org.apache.http.conn.ConnectionReleaseTrigger">org.apache.http.conn.ConnectionReleaseTrigger</a>  {
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public abstract org.apache.http.conn.routing.HttpRoute <a class="d" name="getRoute" href="/source/s?defs=getRoute">getRoute</a> () 
	public abstract javax.net.ssl.SSLSession <a class="d" name="getSSLSession" href="/source/s?defs=getSSLSession">getSSLSession</a> () 
	public abstract void <a class="d" name="open" href="/source/s?defs=open">open</a> (org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="tunnelTarget" href="/source/s?defs=tunnelTarget">tunnelTarget</a> (boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="tunnelProxy" href="/source/s?defs=tunnelProxy">tunnelProxy</a> (org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="layerProtocol" href="/source/s?defs=layerProtocol">layerProtocol</a> (org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="markReusable" href="/source/s?defs=markReusable">markReusable</a> () 
	public abstract void <a class="d" name="unmarkReusable" href="/source/s?defs=unmarkReusable">unmarkReusable</a> () 
	public abstract boolean <a class="d" name="isMarkedReusable" href="/source/s?defs=isMarkedReusable">isMarkedReusable</a> () 
	public abstract void <a class="d" name="setState" href="/source/s?defs=setState">setState</a> (java.lang.Object) 
	public abstract java.lang.Object <a class="d" name="getState" href="/source/s?defs=getState">getState</a> () 
	public abstract void <a class="d" name="setIdleDuration" href="/source/s?defs=setIdleDuration">setIdleDuration</a> (long, java.util.concurrent.TimeUnit) 
}
</pre><br/><b>org/apache/http/conn/ConnectionReleaseTrigger.class</b><pre><a href="/source/s?path=ConnectionReleaseTrigger.java">ConnectionReleaseTrigger.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ConnectionReleaseTrigger" href="/source/s?defs=org.apache.http.conn.ConnectionReleaseTrigger">org.apache.http.conn.ConnectionReleaseTrigger</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="abortConnection" href="/source/s?defs=abortConnection">abortConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/routing/BasicRouteDirector.class</b><pre><a href="/source/s?path=BasicRouteDirector.java">BasicRouteDirector.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public <a class="d" name="org.apache.http.conn.routing.BasicRouteDirector" href="/source/s?defs=org.apache.http.conn.routing.BasicRouteDirector">org.apache.http.conn.routing.BasicRouteDirector</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.routing.HttpRouteDirector">org.apache.http.conn.routing.HttpRouteDirector</a>  {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public int <a class="d" name="nextStep" href="/source/s?defs=nextStep">nextStep</a> (org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo) 
		org.apache.http.conn.routing.RouteInfo plan
		org.apache.http.conn.routing.RouteInfo fact
		int step
	protected int <a class="d" name="firstStep" href="/source/s?defs=firstStep">firstStep</a> (org.apache.http.conn.routing.RouteInfo) 
		org.apache.http.conn.routing.RouteInfo plan
	protected int <a class="d" name="directStep" href="/source/s?defs=directStep">directStep</a> (org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo) 
		org.apache.http.conn.routing.RouteInfo plan
		org.apache.http.conn.routing.RouteInfo fact
	protected int <a class="d" name="proxiedStep" href="/source/s?defs=proxiedStep">proxiedStep</a> (org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo) 
		int i
		org.apache.http.conn.routing.RouteInfo plan
		org.apache.http.conn.routing.RouteInfo fact
		int phc
		int fhc
}
</pre><br/><b>org/apache/http/conn/routing/HttpRouteDirector.class</b><pre><a href="/source/s?path=HttpRouteDirector.java">HttpRouteDirector.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public abstract <a class="d" name="org.apache.http.conn.routing.HttpRouteDirector" href="/source/s?defs=org.apache.http.conn.routing.HttpRouteDirector">org.apache.http.conn.routing.HttpRouteDirector</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final int <a class="d" name="UNREACHABLE" href="/source/s?defs=UNREACHABLE">UNREACHABLE</a>
	public static final int <a class="d" name="COMPLETE" href="/source/s?defs=COMPLETE">COMPLETE</a>
	public static final int <a class="d" name="CONNECT_TARGET" href="/source/s?defs=CONNECT_TARGET">CONNECT_TARGET</a>
	public static final int <a class="d" name="CONNECT_PROXY" href="/source/s?defs=CONNECT_PROXY">CONNECT_PROXY</a>
	public static final int <a class="d" name="TUNNEL_TARGET" href="/source/s?defs=TUNNEL_TARGET">TUNNEL_TARGET</a>
	public static final int <a class="d" name="TUNNEL_PROXY" href="/source/s?defs=TUNNEL_PROXY">TUNNEL_PROXY</a>
	public static final int <a class="d" name="LAYER_PROTOCOL" href="/source/s?defs=LAYER_PROTOCOL">LAYER_PROTOCOL</a>
	public abstract int <a class="d" name="nextStep" href="/source/s?defs=nextStep">nextStep</a> (org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo) 
}
</pre><br/><b>org/apache/http/conn/routing/HttpRoutePlanner.class</b><pre><a href="/source/s?path=HttpRoutePlanner.java">HttpRoutePlanner.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public abstract <a class="d" name="org.apache.http.conn.routing.HttpRoutePlanner" href="/source/s?defs=org.apache.http.conn.routing.HttpRoutePlanner">org.apache.http.conn.routing.HttpRoutePlanner</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.conn.routing.HttpRoute <a class="d" name="determineRoute" href="/source/s?defs=determineRoute">determineRoute</a> (org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.HttpException">org.apache.http.HttpException</a> 
}
</pre><br/><b>org/apache/http/conn/routing/RouteInfo.class</b><pre><a href="/source/s?path=RouteInfo.java">RouteInfo.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public abstract <a class="d" name="org.apache.http.conn.routing.RouteInfo" href="/source/s?defs=org.apache.http.conn.routing.RouteInfo">org.apache.http.conn.routing.RouteInfo</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.HttpHost <a class="d" name="getTargetHost" href="/source/s?defs=getTargetHost">getTargetHost</a> () 
	public abstract java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public abstract int <a class="d" name="getHopCount" href="/source/s?defs=getHopCount">getHopCount</a> () 
	public abstract org.apache.http.HttpHost <a class="d" name="getHopTarget" href="/source/s?defs=getHopTarget">getHopTarget</a> (int) 
	public abstract org.apache.http.HttpHost <a class="d" name="getProxyHost" href="/source/s?defs=getProxyHost">getProxyHost</a> () 
	public abstract org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="getTunnelType" href="/source/s?defs=getTunnelType">getTunnelType</a> () 
	public abstract boolean <a class="d" name="isTunnelled" href="/source/s?defs=isTunnelled">isTunnelled</a> () 
	public abstract org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="getLayerType" href="/source/s?defs=getLayerType">getLayerType</a> () 
	public abstract boolean <a class="d" name="isLayered" href="/source/s?defs=isLayered">isLayered</a> () 
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
}
</pre><br/><b>org/apache/http/conn/routing/RouteInfo$TunnelType.class</b><pre><a href="/source/s?path=RouteInfo.java">RouteInfo.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public final enum <a class="d" name="org.apache.http.conn.routing.RouteInfo$TunnelType" href="/source/s?defs=org.apache.http.conn.routing.RouteInfo$TunnelType">org.apache.http.conn.routing.RouteInfo$TunnelType</a> extends <a href="/source/s?defs=java.lang.Enum">java.lang.Enum</a> {
	public static final enum org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="PLAIN" href="/source/s?defs=PLAIN">PLAIN</a>
	public static final enum org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="TUNNELLED" href="/source/s?defs=TUNNELLED">TUNNELLED</a>
	private static final synthetic org.apache.http.conn.routing.RouteInfo$TunnelType[] <a class="d" name="$VALUES" href="/source/s?defs=$VALUES">$VALUES</a>
	public static final org.apache.http.conn.routing.RouteInfo$TunnelType[] <a class="d" name="values" href="/source/s?defs=values">values</a> () 
	public static org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="valueOf" href="/source/s?defs=valueOf">valueOf</a> (java.lang.String) 
		String name
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/routing/HttpRoute.class</b><pre><a href="/source/s?path=HttpRoute.java">HttpRoute.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public final <a class="d" name="org.apache.http.conn.routing.HttpRoute" href="/source/s?defs=org.apache.http.conn.routing.HttpRoute">org.apache.http.conn.routing.HttpRoute</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.routing.RouteInfo">org.apache.http.conn.routing.RouteInfo</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private static final org.apache.http.HttpHost[] <a class="d" name="EMPTY_HTTP_HOST_ARRAY" href="/source/s?defs=EMPTY_HTTP_HOST_ARRAY">EMPTY_HTTP_HOST_ARRAY</a>
	private final org.apache.http.HttpHost <a class="d" name="targetHost" href="/source/s?defs=targetHost">targetHost</a>
	private final java.net.InetAddress <a class="d" name="localAddress" href="/source/s?defs=localAddress">localAddress</a>
	private final org.apache.http.HttpHost[] <a class="d" name="proxyChain" href="/source/s?defs=proxyChain">proxyChain</a>
	private final org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="tunnelled" href="/source/s?defs=tunnelled">tunnelled</a>
	private final org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="layered" href="/source/s?defs=layered">layered</a>
	private final boolean <a class="d" name="secure" href="/source/s?defs=secure">secure</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.net.InetAddress, org.apache.http.HttpHost, org.apache.http.HttpHost[], boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType) 
		java.net.InetAddress local
		org.apache.http.HttpHost target
		org.apache.http.HttpHost[] proxies
		boolean secure
		org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled
		org.apache.http.conn.routing.RouteInfo$LayerType layered
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost[], boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType) 
		org.apache.http.HttpHost target
		java.net.InetAddress local
		org.apache.http.HttpHost[] proxies
		boolean secure
		org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled
		org.apache.http.conn.routing.RouteInfo$LayerType layered
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost, boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType) 
		org.apache.http.HttpHost target
		java.net.InetAddress local
		org.apache.http.HttpHost proxy
		boolean secure
		org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled
		org.apache.http.conn.routing.RouteInfo$LayerType layered
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.InetAddress, boolean) 
		org.apache.http.HttpHost target
		java.net.InetAddress local
		boolean secure
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost target
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost, boolean) 
		org.apache.http.HttpHost target
		java.net.InetAddress local
		org.apache.http.HttpHost proxy
		boolean secure
	private static org.apache.http.HttpHost[] <a class="d" name="toChain" href="/source/s?defs=toChain">toChain</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost proxy
	private static org.apache.http.HttpHost[] <a class="d" name="toChain" href="/source/s?defs=toChain">toChain</a> (org.apache.http.HttpHost[]) 
		org.apache.http.HttpHost proxy
		org.apache.http.HttpHost[] arr$
		int len$
		int i$
		org.apache.http.HttpHost[] proxies
		org.apache.http.HttpHost[] result
	public final org.apache.http.HttpHost <a class="d" name="getTargetHost" href="/source/s?defs=getTargetHost">getTargetHost</a> () 
	public final java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public final int <a class="d" name="getHopCount" href="/source/s?defs=getHopCount">getHopCount</a> () 
	public final org.apache.http.HttpHost <a class="d" name="getHopTarget" href="/source/s?defs=getHopTarget">getHopTarget</a> (int) 
		int hop
		int hopcount
		org.apache.http.HttpHost result
	public final org.apache.http.HttpHost <a class="d" name="getProxyHost" href="/source/s?defs=getProxyHost">getProxyHost</a> () 
	public final org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="getTunnelType" href="/source/s?defs=getTunnelType">getTunnelType</a> () 
	public final boolean <a class="d" name="isTunnelled" href="/source/s?defs=isTunnelled">isTunnelled</a> () 
	public final org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="getLayerType" href="/source/s?defs=getLayerType">getLayerType</a> () 
	public final boolean <a class="d" name="isLayered" href="/source/s?defs=isLayered">isLayered</a> () 
	public final boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public final boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.conn.routing.HttpRoute that
		Object obj
	public final int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int i
		int hash
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		org.apache.http.HttpHost aProxyChain
		org.apache.http.HttpHost[] arr$
		int len$
		int i$
		StringBuilder cab
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/routing/RouteTracker.class</b><pre><a href="/source/s?path=RouteTracker.java">RouteTracker.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public final <a class="d" name="org.apache.http.conn.routing.RouteTracker" href="/source/s?defs=org.apache.http.conn.routing.RouteTracker">org.apache.http.conn.routing.RouteTracker</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.routing.RouteInfo">org.apache.http.conn.routing.RouteInfo</a> <a href="/source/s?defs=java.lang.Cloneable">java.lang.Cloneable</a>  {
	private final org.apache.http.HttpHost <a class="d" name="targetHost" href="/source/s?defs=targetHost">targetHost</a>
	private final java.net.InetAddress <a class="d" name="localAddress" href="/source/s?defs=localAddress">localAddress</a>
	private boolean <a class="d" name="connected" href="/source/s?defs=connected">connected</a>
	private org.apache.http.HttpHost[] <a class="d" name="proxyChain" href="/source/s?defs=proxyChain">proxyChain</a>
	private org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="tunnelled" href="/source/s?defs=tunnelled">tunnelled</a>
	private org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="layered" href="/source/s?defs=layered">layered</a>
	private boolean <a class="d" name="secure" href="/source/s?defs=secure">secure</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.HttpHost, java.net.InetAddress) 
		org.apache.http.HttpHost target
		java.net.InetAddress local
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.routing.HttpRoute) 
		org.apache.http.conn.routing.HttpRoute route
	public final void <a class="d" name="connectTarget" href="/source/s?defs=connectTarget">connectTarget</a> (boolean) 
		boolean secure
	public final void <a class="d" name="connectProxy" href="/source/s?defs=connectProxy">connectProxy</a> (org.apache.http.HttpHost, boolean) 
		org.apache.http.HttpHost proxy
		boolean secure
	public final void <a class="d" name="tunnelTarget" href="/source/s?defs=tunnelTarget">tunnelTarget</a> (boolean) 
		boolean secure
	public final void <a class="d" name="tunnelProxy" href="/source/s?defs=tunnelProxy">tunnelProxy</a> (org.apache.http.HttpHost, boolean) 
		org.apache.http.HttpHost proxy
		boolean secure
		org.apache.http.HttpHost[] proxies
	public final void <a class="d" name="layerProtocol" href="/source/s?defs=layerProtocol">layerProtocol</a> (boolean) 
		boolean secure
	public final org.apache.http.HttpHost <a class="d" name="getTargetHost" href="/source/s?defs=getTargetHost">getTargetHost</a> () 
	public final java.net.InetAddress <a class="d" name="getLocalAddress" href="/source/s?defs=getLocalAddress">getLocalAddress</a> () 
	public final int <a class="d" name="getHopCount" href="/source/s?defs=getHopCount">getHopCount</a> () 
		int hops
	public final org.apache.http.HttpHost <a class="d" name="getHopTarget" href="/source/s?defs=getHopTarget">getHopTarget</a> (int) 
		int hop
		int hopcount
		org.apache.http.HttpHost result
	public final org.apache.http.HttpHost <a class="d" name="getProxyHost" href="/source/s?defs=getProxyHost">getProxyHost</a> () 
	public final boolean <a class="d" name="isConnected" href="/source/s?defs=isConnected">isConnected</a> () 
	public final org.apache.http.conn.routing.RouteInfo$TunnelType <a class="d" name="getTunnelType" href="/source/s?defs=getTunnelType">getTunnelType</a> () 
	public final boolean <a class="d" name="isTunnelled" href="/source/s?defs=isTunnelled">isTunnelled</a> () 
	public final org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="getLayerType" href="/source/s?defs=getLayerType">getLayerType</a> () 
	public final boolean <a class="d" name="isLayered" href="/source/s?defs=isLayered">isLayered</a> () 
	public final boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public final org.apache.http.conn.routing.HttpRoute <a class="d" name="toRoute" href="/source/s?defs=toRoute">toRoute</a> () 
	public final boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		Object o
		org.apache.http.conn.routing.RouteTracker that
	public final int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int i
		int hash
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		int i
		StringBuilder cab
	public java.lang.Object <a class="d" name="clone" href="/source/s?defs=clone">clone</a> ()  throws <a href="/source/s?defs=java.lang.CloneNotSupportedException">java.lang.CloneNotSupportedException</a> 
}
</pre><br/><b>org/apache/http/conn/routing/RouteInfo$LayerType.class</b><pre><a href="/source/s?path=RouteInfo.java">RouteInfo.java</a>
package <a href="/source/s?defs=org.apache.http.conn.routing">org.apache.http.conn.routing</a>
public final enum <a class="d" name="org.apache.http.conn.routing.RouteInfo$LayerType" href="/source/s?defs=org.apache.http.conn.routing.RouteInfo$LayerType">org.apache.http.conn.routing.RouteInfo$LayerType</a> extends <a href="/source/s?defs=java.lang.Enum">java.lang.Enum</a> {
	public static final enum org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="PLAIN" href="/source/s?defs=PLAIN">PLAIN</a>
	public static final enum org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="LAYERED" href="/source/s?defs=LAYERED">LAYERED</a>
	private static final synthetic org.apache.http.conn.routing.RouteInfo$LayerType[] <a class="d" name="$VALUES" href="/source/s?defs=$VALUES">$VALUES</a>
	public static final org.apache.http.conn.routing.RouteInfo$LayerType[] <a class="d" name="values" href="/source/s?defs=values">values</a> () 
	public static org.apache.http.conn.routing.RouteInfo$LayerType <a class="d" name="valueOf" href="/source/s?defs=valueOf">valueOf</a> (java.lang.String) 
		String name
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/conn/ClientConnectionOperator.class</b><pre><a href="/source/s?path=ClientConnectionOperator.java">ClientConnectionOperator.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ClientConnectionOperator" href="/source/s?defs=org.apache.http.conn.ClientConnectionOperator">org.apache.http.conn.ClientConnectionOperator</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.conn.OperatedClientConnection <a class="d" name="createConnection" href="/source/s?defs=createConnection">createConnection</a> () 
	public abstract void <a class="d" name="openConnection" href="/source/s?defs=openConnection">openConnection</a> (org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="updateSecureConnection" href="/source/s?defs=updateSecureConnection">updateSecureConnection</a> (org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/ConnectionPoolTimeoutException.class</b><pre><a href="/source/s?path=ConnectionPoolTimeoutException.java">ConnectionPoolTimeoutException.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.ConnectionPoolTimeoutException" href="/source/s?defs=org.apache.http.conn.ConnectionPoolTimeoutException">org.apache.http.conn.ConnectionPoolTimeoutException</a> extends <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
}
</pre><br/><b>org/apache/http/conn/EofSensorInputStream.class</b><pre><a href="/source/s?path=EofSensorInputStream.java">EofSensorInputStream.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public <a class="d" name="org.apache.http.conn.EofSensorInputStream" href="/source/s?defs=org.apache.http.conn.EofSensorInputStream">org.apache.http.conn.EofSensorInputStream</a> extends <a href="/source/s?defs=java.io.InputStream">java.io.InputStream</a> implements <a href="/source/s?defs=org.apache.http.conn.ConnectionReleaseTrigger">org.apache.http.conn.ConnectionReleaseTrigger</a>  {
	protected java.io.InputStream <a class="d" name="wrappedStream" href="/source/s?defs=wrappedStream">wrappedStream</a>
	private boolean <a class="d" name="selfClosed" href="/source/s?defs=selfClosed">selfClosed</a>
	private final org.apache.http.conn.EofSensorWatcher <a class="d" name="eofWatcher" href="/source/s?defs=eofWatcher">eofWatcher</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.io.InputStream, org.apache.http.conn.EofSensorWatcher) 
		java.io.InputStream in
		org.apache.http.conn.EofSensorWatcher watcher
	protected boolean <a class="d" name="isReadAllowed" href="/source/s?defs=isReadAllowed">isReadAllowed</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ex
		int l
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[], int, int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ex
		byte[] b
		int off
		int len
		int l
	public int <a class="d" name="read" href="/source/s?defs=read">read</a> (byte[])  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ex
		byte[] b
		int l
	public int <a class="d" name="available" href="/source/s?defs=available">available</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		java.io.IOException ex
		int a
	public void <a class="d" name="close" href="/source/s?defs=close">close</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	protected void <a class="d" name="checkEOF" href="/source/s?defs=checkEOF">checkEOF</a> (int)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean scws
		int eof
	protected void <a class="d" name="checkClose" href="/source/s?defs=checkClose">checkClose</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean scws
	protected void <a class="d" name="checkAbort" href="/source/s?defs=checkAbort">checkAbort</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		boolean scws
	public void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public void <a class="d" name="abortConnection" href="/source/s?defs=abortConnection">abortConnection</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/OperatedClientConnection.class</b><pre><a href="/source/s?path=OperatedClientConnection.java">OperatedClientConnection.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.OperatedClientConnection" href="/source/s?defs=org.apache.http.conn.OperatedClientConnection">org.apache.http.conn.OperatedClientConnection</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.HttpClientConnection">org.apache.http.HttpClientConnection</a> <a href="/source/s?defs=org.apache.http.HttpInetConnection">org.apache.http.HttpInetConnection</a>  {
	public abstract org.apache.http.HttpHost <a class="d" name="getTargetHost" href="/source/s?defs=getTargetHost">getTargetHost</a> () 
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> () 
	public abstract java.net.Socket <a class="d" name="getSocket" href="/source/s?defs=getSocket">getSocket</a> () 
	public abstract void <a class="d" name="opening" href="/source/s?defs=opening">opening</a> (java.net.Socket, org.apache.http.HttpHost)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="openCompleted" href="/source/s?defs=openCompleted">openCompleted</a> (boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract void <a class="d" name="update" href="/source/s?defs=update">update</a> (java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/ClientConnectionManager.class</b><pre><a href="/source/s?path=ClientConnectionManager.java">ClientConnectionManager.java</a>
package <a href="/source/s?defs=org.apache.http.conn">org.apache.http.conn</a>
public abstract <a class="d" name="org.apache.http.conn.ClientConnectionManager" href="/source/s?defs=org.apache.http.conn.ClientConnectionManager">org.apache.http.conn.ClientConnectionManager</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.conn.scheme.SchemeRegistry <a class="d" name="getSchemeRegistry" href="/source/s?defs=getSchemeRegistry">getSchemeRegistry</a> () 
	public abstract org.apache.http.conn.ClientConnectionRequest <a class="d" name="requestConnection" href="/source/s?defs=requestConnection">requestConnection</a> (org.apache.http.conn.routing.HttpRoute, java.lang.Object) 
	public abstract void <a class="d" name="releaseConnection" href="/source/s?defs=releaseConnection">releaseConnection</a> (org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit) 
	public abstract void <a class="d" name="closeIdleConnections" href="/source/s?defs=closeIdleConnections">closeIdleConnections</a> (long, java.util.concurrent.TimeUnit) 
	public abstract void <a class="d" name="closeExpiredConnections" href="/source/s?defs=closeExpiredConnections">closeExpiredConnections</a> () 
	public abstract void <a class="d" name="shutdown" href="/source/s?defs=shutdown">shutdown</a> () 
}
</pre><br/><b>org/apache/http/conn/scheme/SocketFactory.class</b><pre><a href="/source/s?path=SocketFactory.java">SocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public abstract <a class="d" name="org.apache.http.conn.scheme.SocketFactory" href="/source/s?defs=org.apache.http.conn.scheme.SocketFactory">org.apache.http.conn.scheme.SocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
}
</pre><br/><b>org/apache/http/conn/scheme/LayeredSchemeSocketFactoryAdaptor.class</b><pre><a href="/source/s?path=LayeredSchemeSocketFactoryAdaptor.java">LayeredSchemeSocketFactoryAdaptor.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
 <a class="d" name="org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor" href="/source/s?defs=org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor">org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor</a> extends <a href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor">org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.LayeredSchemeSocketFactory">org.apache.http.conn.scheme.LayeredSchemeSocketFactory</a>  {
	private final org.apache.http.conn.scheme.LayeredSocketFactory <a class="d" name="factory" href="/source/s?defs=factory">factory</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.LayeredSocketFactory) 
		org.apache.http.conn.scheme.LayeredSocketFactory factory
	public java.net.Socket <a class="d" name="createLayeredSocket" href="/source/s?defs=createLayeredSocket">createLayeredSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
		java.net.Socket socket
		String target
		int port
		boolean autoClose
}
</pre><br/><b>org/apache/http/conn/scheme/LayeredSocketFactoryAdaptor.class</b><pre><a href="/source/s?path=LayeredSocketFactoryAdaptor.java">LayeredSocketFactoryAdaptor.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
 <a class="d" name="org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor" href="/source/s?defs=org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor">org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor</a> extends <a href="/source/s?defs=org.apache.http.conn.scheme.SocketFactoryAdaptor">org.apache.http.conn.scheme.SocketFactoryAdaptor</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.LayeredSocketFactory">org.apache.http.conn.scheme.LayeredSocketFactory</a>  {
	private final org.apache.http.conn.scheme.LayeredSchemeSocketFactory <a class="d" name="factory" href="/source/s?defs=factory">factory</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.LayeredSchemeSocketFactory) 
		org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
		java.net.Socket socket
		String host
		int port
		boolean autoClose
}
</pre><br/><b>org/apache/http/conn/scheme/LayeredSocketFactory.class</b><pre><a href="/source/s?path=LayeredSocketFactory.java">LayeredSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public abstract <a class="d" name="org.apache.http.conn.scheme.LayeredSocketFactory" href="/source/s?defs=org.apache.http.conn.scheme.LayeredSocketFactory">org.apache.http.conn.scheme.LayeredSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SocketFactory">org.apache.http.conn.scheme.SocketFactory</a>  {
	public abstract java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
}
</pre><br/><b>org/apache/http/conn/scheme/PlainSocketFactory.class</b><pre><a href="/source/s?path=PlainSocketFactory.java">PlainSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public <a class="d" name="org.apache.http.conn.scheme.PlainSocketFactory" href="/source/s?defs=org.apache.http.conn.scheme.PlainSocketFactory">org.apache.http.conn.scheme.PlainSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SocketFactory">org.apache.http.conn.scheme.SocketFactory</a> <a href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactory">org.apache.http.conn.scheme.SchemeSocketFactory</a>  {
	private final org.apache.http.conn.scheme.HostNameResolver <a class="d" name="nameResolver" href="/source/s?defs=nameResolver">nameResolver</a>
	public static org.apache.http.conn.scheme.PlainSocketFactory <a class="d" name="getSocketFactory" href="/source/s?defs=getSocketFactory">getSocketFactory</a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.HostNameResolver) 
		org.apache.http.conn.scheme.HostNameResolver nameResolver
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> () 
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.SocketTimeoutException ex
		java.net.Socket socket
		java.net.InetSocketAddress remoteAddress
		java.net.InetSocketAddress localAddress
		org.apache.http.params.HttpParams params
		java.net.Socket sock
		int connTimeout
		int soTimeout
	public final boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.net.Socket sock
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.InetAddress remoteAddress
		java.net.Socket socket
		String host
		int port
		java.net.InetAddress localAddress
		int localPort
		org.apache.http.params.HttpParams params
		java.net.InetSocketAddress local
		java.net.InetAddress remoteAddress
		java.net.InetSocketAddress remote
}
</pre><br/><b>org/apache/http/conn/scheme/LayeredSchemeSocketFactory.class</b><pre><a href="/source/s?path=LayeredSchemeSocketFactory.java">LayeredSchemeSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public abstract <a class="d" name="org.apache.http.conn.scheme.LayeredSchemeSocketFactory" href="/source/s?defs=org.apache.http.conn.scheme.LayeredSchemeSocketFactory">org.apache.http.conn.scheme.LayeredSchemeSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactory">org.apache.http.conn.scheme.SchemeSocketFactory</a>  {
	public abstract java.net.Socket <a class="d" name="createLayeredSocket" href="/source/s?defs=createLayeredSocket">createLayeredSocket</a> (java.net.Socket, java.lang.String, int, boolean)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> 
}
</pre><br/><b>org/apache/http/conn/scheme/SchemeRegistry.class</b><pre><a href="/source/s?path=SchemeRegistry.java">SchemeRegistry.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public final <a class="d" name="org.apache.http.conn.scheme.SchemeRegistry" href="/source/s?defs=org.apache.http.conn.scheme.SchemeRegistry">org.apache.http.conn.scheme.SchemeRegistry</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.concurrent.ConcurrentHashMap <a class="d" name="registeredSchemes" href="/source/s?defs=registeredSchemes">registeredSchemes</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public final org.apache.http.conn.scheme.Scheme <a class="d" name="getScheme" href="/source/s?defs=getScheme">getScheme</a> (java.lang.String) 
		String name
		org.apache.http.conn.scheme.Scheme found
	public final org.apache.http.conn.scheme.Scheme <a class="d" name="getScheme" href="/source/s?defs=getScheme">getScheme</a> (org.apache.http.HttpHost) 
		org.apache.http.HttpHost host
	public final org.apache.http.conn.scheme.Scheme <a class="d" name="get" href="/source/s?defs=get">get</a> (java.lang.String) 
		String name
		org.apache.http.conn.scheme.Scheme found
	public final org.apache.http.conn.scheme.Scheme <a class="d" name="register" href="/source/s?defs=register">register</a> (org.apache.http.conn.scheme.Scheme) 
		org.apache.http.conn.scheme.Scheme sch
		org.apache.http.conn.scheme.Scheme old
	public final org.apache.http.conn.scheme.Scheme <a class="d" name="unregister" href="/source/s?defs=unregister">unregister</a> (java.lang.String) 
		String name
		org.apache.http.conn.scheme.Scheme gone
	public final java.util.List <a class="d" name="getSchemeNames" href="/source/s?defs=getSchemeNames">getSchemeNames</a> () 
	public void <a class="d" name="setItems" href="/source/s?defs=setItems">setItems</a> (java.util.Map) 
		java.util.Map map
}
</pre><br/><b>org/apache/http/conn/scheme/SchemeSocketFactory.class</b><pre><a href="/source/s?path=SchemeSocketFactory.java">SchemeSocketFactory.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public abstract <a class="d" name="org.apache.http.conn.scheme.SchemeSocketFactory" href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactory">org.apache.http.conn.scheme.SchemeSocketFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
	public abstract java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
	public abstract boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
}
</pre><br/><b>org/apache/http/conn/scheme/SocketFactoryAdaptor.class</b><pre><a href="/source/s?path=SocketFactoryAdaptor.java">SocketFactoryAdaptor.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
 <a class="d" name="org.apache.http.conn.scheme.SocketFactoryAdaptor" href="/source/s?defs=org.apache.http.conn.scheme.SocketFactoryAdaptor">org.apache.http.conn.scheme.SocketFactoryAdaptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SocketFactory">org.apache.http.conn.scheme.SocketFactory</a>  {
	private final org.apache.http.conn.scheme.SchemeSocketFactory <a class="d" name="factory" href="/source/s?defs=factory">factory</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SchemeSocketFactory) 
		org.apache.http.conn.scheme.SchemeSocketFactory factory
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> ()  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.params.HttpParams params
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.Socket socket
		String host
		int port
		java.net.InetAddress localAddress
		int localPort
		org.apache.http.params.HttpParams params
		java.net.InetSocketAddress local
		java.net.InetAddress remoteAddress
		java.net.InetSocketAddress remote
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.net.Socket socket
	public org.apache.http.conn.scheme.SchemeSocketFactory <a class="d" name="getFactory" href="/source/s?defs=getFactory">getFactory</a> () 
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		Object obj
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
}
</pre><br/><b>org/apache/http/conn/scheme/HostNameResolver.class</b><pre><a href="/source/s?path=HostNameResolver.java">HostNameResolver.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public abstract <a class="d" name="org.apache.http.conn.scheme.HostNameResolver" href="/source/s?defs=org.apache.http.conn.scheme.HostNameResolver">org.apache.http.conn.scheme.HostNameResolver</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.net.InetAddress <a class="d" name="resolve" href="/source/s?defs=resolve">resolve</a> (java.lang.String)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
}
</pre><br/><b>org/apache/http/conn/scheme/Scheme.class</b><pre><a href="/source/s?path=Scheme.java">Scheme.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
public final <a class="d" name="org.apache.http.conn.scheme.Scheme" href="/source/s?defs=org.apache.http.conn.scheme.Scheme">org.apache.http.conn.scheme.Scheme</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final String <a class="d" name="name" href="/source/s?defs=name">name</a>
	private final org.apache.http.conn.scheme.SchemeSocketFactory <a class="d" name="socketFactory" href="/source/s?defs=socketFactory">socketFactory</a>
	private final int <a class="d" name="defaultPort" href="/source/s?defs=defaultPort">defaultPort</a>
	private final boolean <a class="d" name="layered" href="/source/s?defs=layered">layered</a>
	private String <a class="d" name="stringRep" href="/source/s?defs=stringRep">stringRep</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, org.apache.http.conn.scheme.SchemeSocketFactory) 
		String name
		int port
		org.apache.http.conn.scheme.SchemeSocketFactory factory
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, org.apache.http.conn.scheme.SocketFactory, int) 
		String name
		org.apache.http.conn.scheme.SocketFactory factory
		int port
	public final int <a class="d" name="getDefaultPort" href="/source/s?defs=getDefaultPort">getDefaultPort</a> () 
	public final org.apache.http.conn.scheme.SocketFactory <a class="d" name="getSocketFactory" href="/source/s?defs=getSocketFactory">getSocketFactory</a> () 
	public final org.apache.http.conn.scheme.SchemeSocketFactory <a class="d" name="getSchemeSocketFactory" href="/source/s?defs=getSchemeSocketFactory">getSchemeSocketFactory</a> () 
	public final java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public final boolean <a class="d" name="isLayered" href="/source/s?defs=isLayered">isLayered</a> () 
	public final int <a class="d" name="resolvePort" href="/source/s?defs=resolvePort">resolvePort</a> (int) 
		int port
	public final java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
	public final boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.conn.scheme.Scheme that
		Object obj
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
}
</pre><br/><b>org/apache/http/conn/scheme/SchemeSocketFactoryAdaptor.class</b><pre><a href="/source/s?path=SchemeSocketFactoryAdaptor.java">SchemeSocketFactoryAdaptor.java</a>
package <a href="/source/s?defs=org.apache.http.conn.scheme">org.apache.http.conn.scheme</a>
 <a class="d" name="org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor" href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor">org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.conn.scheme.SchemeSocketFactory">org.apache.http.conn.scheme.SchemeSocketFactory</a>  {
	private final org.apache.http.conn.scheme.SocketFactory <a class="d" name="factory" href="/source/s?defs=factory">factory</a>
	void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.conn.scheme.SocketFactory) 
		org.apache.http.conn.scheme.SocketFactory factory
	public java.net.Socket <a class="d" name="connectSocket" href="/source/s?defs=connectSocket">connectSocket</a> (java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> <a href="/source/s?defs=java.net.UnknownHostException">java.net.UnknownHostException</a> <a href="/source/s?defs=org.apache.http.conn.ConnectTimeoutException">org.apache.http.conn.ConnectTimeoutException</a> 
		java.net.Socket sock
		java.net.InetSocketAddress remoteAddress
		java.net.InetSocketAddress localAddress
		org.apache.http.params.HttpParams params
		String host
		int port
		java.net.InetAddress local
		int localPort
	public java.net.Socket <a class="d" name="createSocket" href="/source/s?defs=createSocket">createSocket</a> (org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.io.IOException">java.io.IOException</a> 
		org.apache.http.params.HttpParams params
	public boolean <a class="d" name="isSecure" href="/source/s?defs=isSecure">isSecure</a> (java.net.Socket)  throws <a href="/source/s?defs=java.lang.IllegalArgumentException">java.lang.IllegalArgumentException</a> 
		java.net.Socket sock
	public org.apache.http.conn.scheme.SocketFactory <a class="d" name="getFactory" href="/source/s?defs=getFactory">getFactory</a> () 
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		Object obj
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
}
</pre><br/><b>org/apache/http/auth/BasicUserPrincipal.class</b><pre><a href="/source/s?path=BasicUserPrincipal.java">BasicUserPrincipal.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public final <a class="d" name="org.apache.http.auth.BasicUserPrincipal" href="/source/s?defs=org.apache.http.auth.BasicUserPrincipal">org.apache.http.auth.BasicUserPrincipal</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.security.Principal">java.security.Principal</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="username" href="/source/s?defs=username">username</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String username
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.auth.BasicUserPrincipal that
		Object o
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/auth/ContextAwareAuthScheme.class</b><pre><a href="/source/s?path=ContextAwareAuthScheme.java">ContextAwareAuthScheme.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public abstract <a class="d" name="org.apache.http.auth.ContextAwareAuthScheme" href="/source/s?defs=org.apache.http.auth.ContextAwareAuthScheme">org.apache.http.auth.ContextAwareAuthScheme</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.AuthScheme">org.apache.http.auth.AuthScheme</a>  {
	public abstract org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
}
</pre><br/><b>org/apache/http/auth/MalformedChallengeException.class</b><pre><a href="/source/s?path=MalformedChallengeException.java">MalformedChallengeException.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.MalformedChallengeException" href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/auth/AuthSchemeFactory.class</b><pre><a href="/source/s?path=AuthSchemeFactory.java">AuthSchemeFactory.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public abstract <a class="d" name="org.apache.http.auth.AuthSchemeFactory" href="/source/s?defs=org.apache.http.auth.AuthSchemeFactory">org.apache.http.auth.AuthSchemeFactory</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract org.apache.http.auth.AuthScheme <a class="d" name="newInstance" href="/source/s?defs=newInstance">newInstance</a> (org.apache.http.params.HttpParams) 
}
</pre><br/><b>org/apache/http/auth/AuthSchemeRegistry.class</b><pre><a href="/source/s?path=AuthSchemeRegistry.java">AuthSchemeRegistry.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public final <a class="d" name="org.apache.http.auth.AuthSchemeRegistry" href="/source/s?defs=org.apache.http.auth.AuthSchemeRegistry">org.apache.http.auth.AuthSchemeRegistry</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private final java.util.concurrent.ConcurrentHashMap <a class="d" name="registeredSchemes" href="/source/s?defs=registeredSchemes">registeredSchemes</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="register" href="/source/s?defs=register">register</a> (java.lang.String, org.apache.http.auth.AuthSchemeFactory) 
		String name
		org.apache.http.auth.AuthSchemeFactory factory
	public void <a class="d" name="unregister" href="/source/s?defs=unregister">unregister</a> (java.lang.String) 
		String name
	public org.apache.http.auth.AuthScheme <a class="d" name="getAuthScheme" href="/source/s?defs=getAuthScheme">getAuthScheme</a> (java.lang.String, org.apache.http.params.HttpParams)  throws <a href="/source/s?defs=java.lang.IllegalStateException">java.lang.IllegalStateException</a> 
		String name
		org.apache.http.params.HttpParams params
		org.apache.http.auth.AuthSchemeFactory factory
	public java.util.List <a class="d" name="getSchemeNames" href="/source/s?defs=getSchemeNames">getSchemeNames</a> () 
	public void <a class="d" name="setItems" href="/source/s?defs=setItems">setItems</a> (java.util.Map) 
		java.util.Map map
}
</pre><br/><b>org/apache/http/auth/AuthScope.class</b><pre><a href="/source/s?path=AuthScope.java">AuthScope.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.AuthScope" href="/source/s?defs=org.apache.http.auth.AuthScope">org.apache.http.auth.AuthScope</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="ANY_HOST" href="/source/s?defs=ANY_HOST">ANY_HOST</a>
	public static final int <a class="d" name="ANY_PORT" href="/source/s?defs=ANY_PORT">ANY_PORT</a>
	public static final String <a class="d" name="ANY_REALM" href="/source/s?defs=ANY_REALM">ANY_REALM</a>
	public static final String <a class="d" name="ANY_SCHEME" href="/source/s?defs=ANY_SCHEME">ANY_SCHEME</a>
	public static final org.apache.http.auth.AuthScope <a class="d" name="ANY" href="/source/s?defs=ANY">ANY</a>
	private final String <a class="d" name="scheme" href="/source/s?defs=scheme">scheme</a>
	private final String <a class="d" name="realm" href="/source/s?defs=realm">realm</a>
	private final String <a class="d" name="host" href="/source/s?defs=host">host</a>
	private final int <a class="d" name="port" href="/source/s?defs=port">port</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, java.lang.String, java.lang.String) 
		String host
		int port
		String realm
		String scheme
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int, java.lang.String) 
		String host
		int port
		String realm
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, int) 
		String host
		int port
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.auth.AuthScope) 
		org.apache.http.auth.AuthScope authscope
	public java.lang.String <a class="d" name="getHost" href="/source/s?defs=getHost">getHost</a> () 
	public int <a class="d" name="getPort" href="/source/s?defs=getPort">getPort</a> () 
	public java.lang.String <a class="d" name="getRealm" href="/source/s?defs=getRealm">getRealm</a> () 
	public java.lang.String <a class="d" name="getScheme" href="/source/s?defs=getScheme">getScheme</a> () 
	public int <a class="d" name="match" href="/source/s?defs=match">match</a> (org.apache.http.auth.AuthScope) 
		org.apache.http.auth.AuthScope that
		int factor
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		Object o
		org.apache.http.auth.AuthScope that
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	static void <a class="d" name="<clinit>" href="/source/s?defs=<clinit>"><clinit></a> () 
}
</pre><br/><b>org/apache/http/auth/AuthScheme.class</b><pre><a href="/source/s?path=AuthScheme.java">AuthScheme.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public abstract <a class="d" name="org.apache.http.auth.AuthScheme" href="/source/s?defs=org.apache.http.auth.AuthScheme">org.apache.http.auth.AuthScheme</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract void <a class="d" name="processChallenge" href="/source/s?defs=processChallenge">processChallenge</a> (org.apache.http.Header)  throws <a href="/source/s?defs=org.apache.http.auth.MalformedChallengeException">org.apache.http.auth.MalformedChallengeException</a> 
	public abstract java.lang.String <a class="d" name="getSchemeName" href="/source/s?defs=getSchemeName">getSchemeName</a> () 
	public abstract java.lang.String <a class="d" name="getParameter" href="/source/s?defs=getParameter">getParameter</a> (java.lang.String) 
	public abstract java.lang.String <a class="d" name="getRealm" href="/source/s?defs=getRealm">getRealm</a> () 
	public abstract boolean <a class="d" name="isConnectionBased" href="/source/s?defs=isConnectionBased">isConnectionBased</a> () 
	public abstract boolean <a class="d" name="isComplete" href="/source/s?defs=isComplete">isComplete</a> () 
	public abstract org.apache.http.Header <a class="d" name="authenticate" href="/source/s?defs=authenticate">authenticate</a> (org.apache.http.auth.Credentials, org.apache.http.HttpRequest)  throws <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> 
}
</pre><br/><b>org/apache/http/auth/Credentials.class</b><pre><a href="/source/s?path=Credentials.java">Credentials.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public abstract <a class="d" name="org.apache.http.auth.Credentials" href="/source/s?defs=org.apache.http.auth.Credentials">org.apache.http.auth.Credentials</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public abstract java.security.Principal <a class="d" name="getUserPrincipal" href="/source/s?defs=getUserPrincipal">getUserPrincipal</a> () 
	public abstract java.lang.String <a class="d" name="getPassword" href="/source/s?defs=getPassword">getPassword</a> () 
}
</pre><br/><b>org/apache/http/auth/params/AuthParams.class</b><pre><a href="/source/s?path=AuthParams.java">AuthParams.java</a>
package <a href="/source/s?defs=org.apache.http.auth.params">org.apache.http.auth.params</a>
public final <a class="d" name="org.apache.http.auth.params.AuthParams" href="/source/s?defs=org.apache.http.auth.params.AuthParams">org.apache.http.auth.params.AuthParams</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public static java.lang.String <a class="d" name="getCredentialCharset" href="/source/s?defs=getCredentialCharset">getCredentialCharset</a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
		String charset
	public static void <a class="d" name="setCredentialCharset" href="/source/s?defs=setCredentialCharset">setCredentialCharset</a> (org.apache.http.params.HttpParams, java.lang.String) 
		org.apache.http.params.HttpParams params
		String charset
}
</pre><br/><b>org/apache/http/auth/params/AuthPNames.class</b><pre><a href="/source/s?path=AuthPNames.java">AuthPNames.java</a>
package <a href="/source/s?defs=org.apache.http.auth.params">org.apache.http.auth.params</a>
public abstract <a class="d" name="org.apache.http.auth.params.AuthPNames" href="/source/s?defs=org.apache.http.auth.params.AuthPNames">org.apache.http.auth.params.AuthPNames</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="CREDENTIAL_CHARSET" href="/source/s?defs=CREDENTIAL_CHARSET">CREDENTIAL_CHARSET</a>
	public static final String <a class="d" name="TARGET_AUTH_PREF" href="/source/s?defs=TARGET_AUTH_PREF">TARGET_AUTH_PREF</a>
	public static final String <a class="d" name="PROXY_AUTH_PREF" href="/source/s?defs=PROXY_AUTH_PREF">PROXY_AUTH_PREF</a>
}
</pre><br/><b>org/apache/http/auth/params/AuthParamBean.class</b><pre><a href="/source/s?path=AuthParamBean.java">AuthParamBean.java</a>
package <a href="/source/s?defs=org.apache.http.auth.params">org.apache.http.auth.params</a>
public <a class="d" name="org.apache.http.auth.params.AuthParamBean" href="/source/s?defs=org.apache.http.auth.params.AuthParamBean">org.apache.http.auth.params.AuthParamBean</a> extends <a href="/source/s?defs=org.apache.http.params.HttpAbstractParamBean">org.apache.http.params.HttpAbstractParamBean</a> {
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (org.apache.http.params.HttpParams) 
		org.apache.http.params.HttpParams params
	public void <a class="d" name="setCredentialCharset" href="/source/s?defs=setCredentialCharset">setCredentialCharset</a> (java.lang.String) 
		String charset
}
</pre><br/><b>org/apache/http/auth/NTCredentials.class</b><pre><a href="/source/s?path=NTCredentials.java">NTCredentials.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.NTCredentials" href="/source/s?defs=org.apache.http.auth.NTCredentials">org.apache.http.auth.NTCredentials</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.Credentials">org.apache.http.auth.Credentials</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.auth.NTUserPrincipal <a class="d" name="principal" href="/source/s?defs=principal">principal</a>
	private final String <a class="d" name="password" href="/source/s?defs=password">password</a>
	private final String <a class="d" name="workstation" href="/source/s?defs=workstation">workstation</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String username
		String usernamePassword
		String username
		int atColon
		int atSlash
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String, java.lang.String, java.lang.String) 
		String userName
		String password
		String workstation
		String domain
	public java.security.Principal <a class="d" name="getUserPrincipal" href="/source/s?defs=getUserPrincipal">getUserPrincipal</a> () 
	public java.lang.String <a class="d" name="getUserName" href="/source/s?defs=getUserName">getUserName</a> () 
	public java.lang.String <a class="d" name="getPassword" href="/source/s?defs=getPassword">getPassword</a> () 
	public java.lang.String <a class="d" name="getDomain" href="/source/s?defs=getDomain">getDomain</a> () 
	public java.lang.String <a class="d" name="getWorkstation" href="/source/s?defs=getWorkstation">getWorkstation</a> () 
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.auth.NTCredentials that
		Object o
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/auth/NTUserPrincipal.class</b><pre><a href="/source/s?path=NTUserPrincipal.java">NTUserPrincipal.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.NTUserPrincipal" href="/source/s?defs=org.apache.http.auth.NTUserPrincipal">org.apache.http.auth.NTUserPrincipal</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=java.security.Principal">java.security.Principal</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final String <a class="d" name="username" href="/source/s?defs=username">username</a>
	private final String <a class="d" name="domain" href="/source/s?defs=domain">domain</a>
	private final String <a class="d" name="ntname" href="/source/s?defs=ntname">ntname</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		StringBuilder buffer
		String domain
		String username
	public java.lang.String <a class="d" name="getName" href="/source/s?defs=getName">getName</a> () 
	public java.lang.String <a class="d" name="getDomain" href="/source/s?defs=getDomain">getDomain</a> () 
	public java.lang.String <a class="d" name="getUsername" href="/source/s?defs=getUsername">getUsername</a> () 
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
		int hash
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.auth.NTUserPrincipal that
		Object o
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>org/apache/http/auth/AuthenticationException.class</b><pre><a href="/source/s?path=AuthenticationException.java">AuthenticationException.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.AuthenticationException" href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> extends <a href="/source/s?defs=org.apache.http.ProtocolException">org.apache.http.ProtocolException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/auth/InvalidCredentialsException.class</b><pre><a href="/source/s?path=InvalidCredentialsException.java">InvalidCredentialsException.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.InvalidCredentialsException" href="/source/s?defs=org.apache.http.auth.InvalidCredentialsException">org.apache.http.auth.InvalidCredentialsException</a> extends <a href="/source/s?defs=org.apache.http.auth.AuthenticationException">org.apache.http.auth.AuthenticationException</a> {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String message
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.Throwable) 
		String message
		Throwable cause
}
</pre><br/><b>org/apache/http/auth/AuthState.class</b><pre><a href="/source/s?path=AuthState.java">AuthState.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.AuthState" href="/source/s?defs=org.apache.http.auth.AuthState">org.apache.http.auth.AuthState</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	private org.apache.http.auth.AuthScheme <a class="d" name="authScheme" href="/source/s?defs=authScheme">authScheme</a>
	private org.apache.http.auth.AuthScope <a class="d" name="authScope" href="/source/s?defs=authScope">authScope</a>
	private org.apache.http.auth.Credentials <a class="d" name="credentials" href="/source/s?defs=credentials">credentials</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
	public void <a class="d" name="invalidate" href="/source/s?defs=invalidate">invalidate</a> () 
	public boolean <a class="d" name="isValid" href="/source/s?defs=isValid">isValid</a> () 
	public void <a class="d" name="setAuthScheme" href="/source/s?defs=setAuthScheme">setAuthScheme</a> (org.apache.http.auth.AuthScheme) 
		org.apache.http.auth.AuthScheme authScheme
	public org.apache.http.auth.AuthScheme <a class="d" name="getAuthScheme" href="/source/s?defs=getAuthScheme">getAuthScheme</a> () 
	public org.apache.http.auth.Credentials <a class="d" name="getCredentials" href="/source/s?defs=getCredentials">getCredentials</a> () 
	public void <a class="d" name="setCredentials" href="/source/s?defs=setCredentials">setCredentials</a> (org.apache.http.auth.Credentials) 
		org.apache.http.auth.Credentials credentials
	public org.apache.http.auth.AuthScope <a class="d" name="getAuthScope" href="/source/s?defs=getAuthScope">getAuthScope</a> () 
	public void <a class="d" name="setAuthScope" href="/source/s?defs=setAuthScope">setAuthScope</a> (org.apache.http.auth.AuthScope) 
		org.apache.http.auth.AuthScope authScope
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
		StringBuilder buffer
}
</pre><br/><b>org/apache/http/auth/AUTH.class</b><pre><a href="/source/s?path=AUTH.java">AUTH.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public final <a class="d" name="org.apache.http.auth.AUTH" href="/source/s?defs=org.apache.http.auth.AUTH">org.apache.http.auth.AUTH</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> {
	public static final String <a class="d" name="WWW_AUTH" href="/source/s?defs=WWW_AUTH">WWW_AUTH</a>
	public static final String <a class="d" name="WWW_AUTH_RESP" href="/source/s?defs=WWW_AUTH_RESP">WWW_AUTH_RESP</a>
	public static final String <a class="d" name="PROXY_AUTH" href="/source/s?defs=PROXY_AUTH">PROXY_AUTH</a>
	public static final String <a class="d" name="PROXY_AUTH_RESP" href="/source/s?defs=PROXY_AUTH_RESP">PROXY_AUTH_RESP</a>
	private void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> () 
}
</pre><br/><b>org/apache/http/auth/UsernamePasswordCredentials.class</b><pre><a href="/source/s?path=UsernamePasswordCredentials.java">UsernamePasswordCredentials.java</a>
package <a href="/source/s?defs=org.apache.http.auth">org.apache.http.auth</a>
public <a class="d" name="org.apache.http.auth.UsernamePasswordCredentials" href="/source/s?defs=org.apache.http.auth.UsernamePasswordCredentials">org.apache.http.auth.UsernamePasswordCredentials</a> extends <a href="/source/s?defs=java.lang.Object">java.lang.Object</a> implements <a href="/source/s?defs=org.apache.http.auth.Credentials">org.apache.http.auth.Credentials</a> <a href="/source/s?defs=java.io.Serializable">java.io.Serializable</a>  {
	private static final long <a class="d" name="serialVersionUID" href="/source/s?defs=serialVersionUID">serialVersionUID</a>
	private final org.apache.http.auth.BasicUserPrincipal <a class="d" name="principal" href="/source/s?defs=principal">principal</a>
	private final String <a class="d" name="password" href="/source/s?defs=password">password</a>
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String) 
		String usernamePassword
		int atColon
	public void <a class="d" name="<init>" href="/source/s?defs=<init>"><init></a> (java.lang.String, java.lang.String) 
		String userName
		String password
	public java.security.Principal <a class="d" name="getUserPrincipal" href="/source/s?defs=getUserPrincipal">getUserPrincipal</a> () 
	public java.lang.String <a class="d" name="getUserName" href="/source/s?defs=getUserName">getUserName</a> () 
	public java.lang.String <a class="d" name="getPassword" href="/source/s?defs=getPassword">getPassword</a> () 
	public int <a class="d" name="hashCode" href="/source/s?defs=hashCode">hashCode</a> () 
	public boolean <a class="d" name="equals" href="/source/s?defs=equals">equals</a> (java.lang.Object) 
		org.apache.http.auth.UsernamePasswordCredentials that
		Object o
	public java.lang.String <a class="d" name="toString" href="/source/s?defs=toString">toString</a> () 
}
</pre><br/><b>META-INF/maven/</b><br/><b>META-INF/maven/org.apache.httpcomponents/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpclient/</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpclient/pom.xml</b><br/><b>META-INF/maven/org.apache.httpcomponents/httpclient/pom.properties</b></pre>
</div>
    <div id="footer">
<p><a href="http://opengrok.github.com/OpenGrok/"
 title="Served by OpenGrok"><span id="fti"></span></a></p>
<p>
    <a href="http://www.rrzn.uni-hannover.de"><span id="partner_rrzn"></span></a>
    <a href="http://www.uni-hannover.de"><span id="partner_luh"></span></a>
</p>
<p><a href="http://www.metager.de/impressum.html">Impressum (legal notice)</a></p>
    
    </div>
    </div>
</div>
</body>
</html>

